package org.zikula.modulestudio.generator.cartridges.zclassic.controller.javascript;

import de.guite.modulestudio.metamodel.Application;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.InputOutput;
import org.eclipse.xtext.xbase.lib.StringExtensions;
import org.zikula.modulestudio.generator.extensions.FormattingExtensions;
import org.zikula.modulestudio.generator.extensions.ModelExtensions;
import org.zikula.modulestudio.generator.extensions.NamingExtensions;
import org.zikula.modulestudio.generator.extensions.Utils;

@SuppressWarnings("all")
public class Finder {
  @Extension
  private FormattingExtensions _formattingExtensions = new FormattingExtensions();
  
  @Extension
  private ModelExtensions _modelExtensions = new ModelExtensions();
  
  @Extension
  private NamingExtensions _namingExtensions = new NamingExtensions();
  
  @Extension
  private Utils _utils = new Utils();
  
  /**
   * Entry point for the JavaScript file with finder functionality.
   */
  public void generate(final Application it, final IFileSystemAccess fsa) {
    String _appName = this._utils.appName(it);
    String fileName = (_appName + ".Finder.js");
    String _appJsPath = this._namingExtensions.getAppJsPath(it);
    String _plus = (_appJsPath + fileName);
    boolean _shouldBeSkipped = this._namingExtensions.shouldBeSkipped(it, _plus);
    boolean _not = (!_shouldBeSkipped);
    if (_not) {
      InputOutput.<String>println("Generating JavaScript for finder component");
      String _appJsPath_1 = this._namingExtensions.getAppJsPath(it);
      String _plus_1 = (_appJsPath_1 + fileName);
      boolean _shouldBeMarked = this._namingExtensions.shouldBeMarked(it, _plus_1);
      if (_shouldBeMarked) {
        String _appName_1 = this._utils.appName(it);
        String _plus_2 = (_appName_1 + ".Finder.generated.js");
        fileName = _plus_2;
      }
      String _appJsPath_2 = this._namingExtensions.getAppJsPath(it);
      String _plus_3 = (_appJsPath_2 + fileName);
      fsa.generateFile(_plus_3, this.generate(it));
    }
  }
  
  private CharSequence generate(final Application it) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\'use strict\';");
    _builder.newLine();
    _builder.newLine();
    _builder.append("var current");
    String _appName = this._utils.appName(it);
    _builder.append(_appName);
    _builder.append("Editor = null;");
    _builder.newLineIfNotEmpty();
    _builder.append("var current");
    String _appName_1 = this._utils.appName(it);
    _builder.append(_appName_1);
    _builder.append("Input = null;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Returns the attributes used for the popup window. ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @return {String}");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("function get");
    String _appName_2 = this._utils.appName(it);
    _builder.append(_appName_2);
    _builder.append("PopupAttributes()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var pWidth, pHeight;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("pWidth = screen.width * 0.75;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("pHeight = screen.height * 0.66;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("return \'width=\' + pWidth + \',height=\' + pHeight + \',scrollbars,resizable\';");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Open a popup window with the finder triggered by a CKEditor button.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("function ");
    String _appName_3 = this._utils.appName(it);
    _builder.append(_appName_3);
    _builder.append("FinderCKEditor(editor, ");
    String _prefix = this._utils.prefix(it);
    _builder.append(_prefix);
    _builder.append("Url)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Save editor for access in selector window");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("current");
    String _appName_4 = this._utils.appName(it);
    _builder.append(_appName_4, "    ");
    _builder.append("Editor = editor;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("editor.popup(");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("Routing.generate(\'");
    String _formatForDB = this._formattingExtensions.formatForDB(this._utils.appName(it));
    _builder.append(_formatForDB, "        ");
    _builder.append("_external_finder\', { objectType: \'");
    String _formatForCode = this._formattingExtensions.formatForCode(this._modelExtensions.getLeadingEntity(it).getName());
    _builder.append(_formatForCode, "        ");
    _builder.append("\', editor: \'ckeditor\' }),");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("/*width*/ \'80%\', /*height*/ \'70%\',");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,resizable=yes,scrollbars=yes\'");
    _builder.newLine();
    _builder.append("    ");
    _builder.append(");");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    final String elemPrefix = StringExtensions.toFirstLower(this._utils.appName(it));
    _builder.newLineIfNotEmpty();
    final String objName = StringExtensions.toFirstLower(this._utils.appName(it));
    _builder.newLineIfNotEmpty();
    _builder.append("var ");
    _builder.append(objName);
    _builder.append(" = {};");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".finder = {};");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".finder.onLoad = function (baseId, selectedId)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    {
      boolean _hasImageFields = this._modelExtensions.hasImageFields(it);
      if (_hasImageFields) {
        _builder.append("    ");
        _builder.append("var imageModeEnabled;");
        _builder.newLine();
        _builder.newLine();
        _builder.append("    ");
        _builder.append("imageModeEnabled = jQuery(\"[id$=\'onlyImages\']\").prop(\'checked\');");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("if (!imageModeEnabled) {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("jQuery(\'#imageFieldRow\').addClass(\'hidden\');");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("jQuery(\"[id$=\'pasteAs\'] option[value=6]\").addClass(\'hidden\');");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("jQuery(\"[id$=\'pasteAs\'] option[value=7]\").addClass(\'hidden\');");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("jQuery(\"[id$=\'pasteAs\'] option[value=8]\").addClass(\'hidden\');");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("jQuery(\"[id$=\'pasteAs\'] option[value=9]\").addClass(\'hidden\');");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("} else {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("jQuery(\'#searchTermRow\').addClass(\'hidden\');");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
        _builder.append("    ");
        _builder.append("jQuery(\'input[type=\"checkbox\"]\').click(");
        _builder.append(objName, "    ");
        _builder.append(".finder.onParamChanged);");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("    ");
    _builder.append("jQuery(\'select\').not(\"[id$=\'pasteAs\']\").change(");
    _builder.append(objName, "    ");
    _builder.append(".finder.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery(\'.btn-default\').click(");
    _builder.append(objName, "    ");
    _builder.append(".finder.handleCancel);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var selectedItems = jQuery(\'#");
    String _lowerCase = this._utils.appName(it).toLowerCase();
    _builder.append(_lowerCase, "    ");
    _builder.append("ItemContainer a\');");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("selectedItems.bind(\'click keypress\', function (event) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("event.preventDefault();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append(objName, "        ");
    _builder.append(".finder.selectItem(jQuery(this).data(\'itemid\'));");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("});");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".finder.onParamChanged = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery(\'#");
    _builder.append(elemPrefix, "    ");
    _builder.append("SelectorForm\').submit();");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".finder.handleCancel = function (event)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var editor;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("event.preventDefault();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("editor = jQuery(\"[id$=\'editor\']\").first().val();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (\'tinymce\' === editor) {");
    _builder.newLine();
    _builder.append("        ");
    String _vendorAndName = this._utils.vendorAndName(it);
    _builder.append(_vendorAndName, "        ");
    _builder.append("ClosePopup();");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("} else if (\'ckeditor\' === editor) {");
    _builder.newLine();
    _builder.append("        ");
    String _vendorAndName_1 = this._utils.vendorAndName(it);
    _builder.append(_vendorAndName_1, "        ");
    _builder.append("ClosePopup();");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("alert(\'Close Editor: \' + editor);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("function ");
    String _vendorAndName_2 = this._utils.vendorAndName(it);
    _builder.append(_vendorAndName_2);
    _builder.append("GetPasteSnippet(mode, itemId)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var quoteFinder;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var itemPath;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var itemUrl;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var itemTitle;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var itemDescription;");
    _builder.newLine();
    {
      boolean _hasImageFields_1 = this._modelExtensions.hasImageFields(it);
      if (_hasImageFields_1) {
        _builder.append("    ");
        _builder.append("var imagePath;");
        _builder.newLine();
      }
    }
    _builder.append("    ");
    _builder.append("var pasteMode;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("quoteFinder = new RegExp(\'\"\', \'g\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemPath = jQuery(\'#path\' + itemId).val().replace(quoteFinder, \'\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemUrl = jQuery(\'#url\' + itemId).val().replace(quoteFinder, \'\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemTitle = jQuery(\'#title\' + itemId).val().replace(quoteFinder, \'\').trim();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemDescription = jQuery(\'#desc\' + itemId).val().replace(quoteFinder, \'\').trim();");
    _builder.newLine();
    {
      boolean _hasImageFields_2 = this._modelExtensions.hasImageFields(it);
      if (_hasImageFields_2) {
        _builder.append("    ");
        _builder.append("imagePath = jQuery(\'#imagePath\' + itemId).length > 0 ? jQuery(\'#imagePath\' + itemId).val().replace(quoteFinder, \'\') : \'\';");
        _builder.newLine();
      }
    }
    _builder.append("    ");
    _builder.append("pasteMode = jQuery(\"[id$=\'pasteAs\']\").first().val();");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// item ID");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (pasteMode === \'3\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return \'\' + itemId;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// relative link to detail page");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (pasteMode === \'1\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return mode === \'url\' ? itemPath : \'<a href=\"\' + itemPath + \'\" title=\"\' + itemDescription + \'\">\' + itemTitle + \'</a>\';");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// absolute url to detail page");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (pasteMode === \'2\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return mode === \'url\' ? itemUrl : \'<a href=\"\' + itemUrl + \'\" title=\"\' + itemDescription + \'\">\' + itemTitle + \'</a>\';");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    {
      boolean _hasImageFields_3 = this._modelExtensions.hasImageFields(it);
      if (_hasImageFields_3) {
        _builder.newLine();
        _builder.append("    ");
        _builder.append("if (pasteMode === \'6\') {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("// relative link to image file");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("return mode === \'url\' ? imagePath : \'<a href=\"\' + imagePath + \'\" title=\"\' + itemDescription + \'\">\' + itemTitle + \'</a>\';");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("}");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("if (pasteMode === \'7\') {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("// image tag");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("return \'<img src=\"\' + imagePath + \'\" alt=\"\' + itemTitle + \'\" width=\"300\" />\';");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("}");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("if (pasteMode === \'8\') {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("// image tag with relative link to detail page");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("return mode === \'url\' ? itemPath : \'<a href=\"\' + itemPath + \'\" title=\"\' + itemTitle + \'\"><img src=\"\' + imagePath + \'\" alt=\"\' + itemTitle + \'\" width=\"300\" /></a>\';");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("}");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("if (pasteMode === \'9\') {");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("// image tag with absolute url to detail page");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("    ");
        _builder.append("return mode === \'url\' ? itemUrl : \'<a href=\"\' + itemUrl + \'\" title=\"\' + itemTitle + \'\"><img src=\"\' + imagePath + \'\" alt=\"\' + itemTitle + \'\" width=\"300\" /></a>\';");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("}");
        _builder.newLine();
        _builder.newLine();
      }
    }
    _builder.newLine();
    _builder.append("    ");
    _builder.append("return \'\';");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("// User clicks on \"select item\" button");
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".finder.selectItem = function (itemId)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var editor, html;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("editor = jQuery(\"[id$=\'editor\']\").first().val();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (\'tinymce\' === editor) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("html = ");
    String _vendorAndName_3 = this._utils.vendorAndName(it);
    _builder.append(_vendorAndName_3, "        ");
    _builder.append("GetPasteSnippet(\'html\', itemId);");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("tinyMCE.activeEditor.execCommand(\'mceInsertContent\', false, html);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// other tinymce commands: mceImage, mceInsertLink, mceReplaceContent, see http://www.tinymce.com/wiki.php/Command_identifiers");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else if (\'ckeditor\' === editor) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (null !== window.opener.current");
    String _appName_5 = this._utils.appName(it);
    _builder.append(_appName_5, "        ");
    _builder.append("Editor) {");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("html = ");
    String _vendorAndName_4 = this._utils.vendorAndName(it);
    _builder.append(_vendorAndName_4, "            ");
    _builder.append("GetPasteSnippet(\'html\', itemId);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("            ");
    _builder.append("window.opener.current");
    String _appName_6 = this._utils.appName(it);
    _builder.append(_appName_6, "            ");
    _builder.append("Editor.insertHtml(html);");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("alert(\'Insert into Editor: \' + editor);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    String _vendorAndName_5 = this._utils.vendorAndName(it);
    _builder.append(_vendorAndName_5, "    ");
    _builder.append("ClosePopup();");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append("function ");
    String _vendorAndName_6 = this._utils.vendorAndName(it);
    _builder.append(_vendorAndName_6);
    _builder.append("ClosePopup()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("window.opener.focus();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("window.close();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("//=============================================================================");
    _builder.newLine();
    _builder.append("// ");
    String _appName_7 = this._utils.appName(it);
    _builder.append(_appName_7);
    _builder.append(" item selector for Forms");
    _builder.newLineIfNotEmpty();
    _builder.append("//=============================================================================");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".itemSelector = {};");
    _builder.newLineIfNotEmpty();
    _builder.append(objName);
    _builder.append(".itemSelector.items = {};");
    _builder.newLineIfNotEmpty();
    _builder.append(objName);
    _builder.append(".itemSelector.baseId = 0;");
    _builder.newLineIfNotEmpty();
    _builder.append(objName);
    _builder.append(".itemSelector.selectedId = 0;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".itemSelector.onLoad = function (baseId, selectedId)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.baseId = baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.selectedId = selectedId;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// required as a changed object type requires a new instance of the item selector plugin");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery(\'#");
    _builder.append(elemPrefix, "    ");
    _builder.append("ObjectType\').change(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery(\'#\' + baseId + \'_catidMain\').change(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("jQuery(\'#\' + baseId + \'_catidsMain\').change(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("jQuery(\'#\' + baseId + \'Id\').change(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onItemChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("jQuery(\'#\' + baseId + \'Sort\').change(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("jQuery(\'#\' + baseId + \'SortDir\').change(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("jQuery(\'#");
    _builder.append(elemPrefix, "    ");
    _builder.append("SearchGo\').click(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("jQuery(\'#");
    _builder.append(elemPrefix, "    ");
    _builder.append("SearchGo\').keypress(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.getItemList();");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".itemSelector.onParamChanged = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery(\'#ajax_indicator\').removeClass(\'hidden\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.getItemList();");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".itemSelector.getItemList = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var params;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("params = {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("ot: baseId,");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("sort: jQuery(\'#\' + baseId + \'Sort\').val(),");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("sortdir: jQuery(\'#\' + baseId + \'SortDir\').val(),");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("q: jQuery(\'#\' + baseId + \'SearchTerm\').val()");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (jQuery(\'#\' + baseId + \'_catidMain\').length > 0) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("params[catidMain] = jQuery(\'#\' + baseId + \'_catidMain\').val();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else if (jQuery(\'#\' + baseId + \'_catidsMain\').length > 0) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("params[catidsMain] = jQuery(\'#\' + baseId + \'_catidsMain\').val();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery.ajax({");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("type: \'POST\',");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("url: Routing.generate(\'");
    String _formatForDB_1 = this._formattingExtensions.formatForDB(this._utils.appName(it));
    _builder.append(_formatForDB_1, "        ");
    _builder.append("_ajax_getitemlistfinder\'),");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("data: params");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}).done(function(res) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// get data returned by the ajax response");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("var baseId;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("baseId = ");
    _builder.append(objName, "        ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append(objName, "        ");
    _builder.append(".itemSelector.items[baseId] = res.data;");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("jQuery(\'#ajax_indicator\').addClass(\'hidden\');");
    _builder.newLine();
    _builder.append("        ");
    _builder.append(objName, "        ");
    _builder.append(".itemSelector.updateItemDropdownEntries();");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append(objName, "        ");
    _builder.append(".itemSelector.updatePreview();");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("})");
    _builder.append(";");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".itemSelector.updateItemDropdownEntries = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId, itemSelector, items, i, item;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("itemSelector = jQuery(\'#\' + baseId + \'Id\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemSelector.length = 0;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("items = ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.items[baseId];");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("for (i = 0; i < items.length; ++i) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("item = items[i];");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("itemSelector.get(0).options[i] = new Option(item.title, item.id, false);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.selectedId > 0) {");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("jQuery(\'#\' + baseId + \'Id\').val(");
    _builder.append(objName, "        ");
    _builder.append(".itemSelector.selectedId);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".itemSelector.updatePreview = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId, items, selectedElement, i;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("items = ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.items[baseId];");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery(\'#\' + baseId + \'PreviewContainer\').addClass(\'hidden\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (items.length === 0) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("selectedElement = items[0];");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.selectedId > 0) {");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("for (var i = 0; i < items.length; ++i) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (items[i].id == ");
    _builder.append(objName, "            ");
    _builder.append(".itemSelector.selectedId) {");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("selectedElement = items[i];");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("break;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (null !== selectedElement) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("jQuery(\'#\' + baseId + \'PreviewContainer\')");
    _builder.newLine();
    _builder.append("            ");
    _builder.append(".html(window.atob(selectedElement.previewInfo))");
    _builder.newLine();
    _builder.append("            ");
    _builder.append(".removeClass(\'hidden\');");
    _builder.newLine();
    {
      boolean _hasImageFields_4 = this._modelExtensions.hasImageFields(it);
      if (_hasImageFields_4) {
        _builder.append("        ");
        String _vendorAndName_7 = this._utils.vendorAndName(it);
        _builder.append(_vendorAndName_7, "        ");
        _builder.append("InitImageViewer();");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append(objName);
    _builder.append(".itemSelector.onItemChanged = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId, itemSelector, preview;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("itemSelector = jQuery(\'#\' + baseId + \'Id\').get(0);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("preview = window.atob(");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.items[baseId][itemSelector.selectedIndex].previewInfo);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("jQuery(\'#\' + baseId + \'PreviewContainer\').html(preview);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append(objName, "    ");
    _builder.append(".itemSelector.selectedId = jQuery(\'#\' + baseId + \'Id\').val();");
    _builder.newLineIfNotEmpty();
    {
      boolean _hasImageFields_5 = this._modelExtensions.hasImageFields(it);
      if (_hasImageFields_5) {
        _builder.append("    ");
        String _vendorAndName_8 = this._utils.vendorAndName(it);
        _builder.append(_vendorAndName_8, "    ");
        _builder.append("InitImageViewer();");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("};");
    _builder.newLine();
    return _builder;
  }
}
