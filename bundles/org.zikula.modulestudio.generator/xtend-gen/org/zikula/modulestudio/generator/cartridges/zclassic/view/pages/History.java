package org.zikula.modulestudio.generator.cartridges.zclassic.view.pages;

import de.guite.modulestudio.metamodel.Application;
import de.guite.modulestudio.metamodel.DerivedField;
import de.guite.modulestudio.metamodel.Entity;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.InputOutput;
import org.zikula.modulestudio.generator.extensions.ControllerExtensions;
import org.zikula.modulestudio.generator.extensions.FormattingExtensions;
import org.zikula.modulestudio.generator.extensions.ModelExtensions;
import org.zikula.modulestudio.generator.extensions.NamingExtensions;
import org.zikula.modulestudio.generator.extensions.UrlExtensions;
import org.zikula.modulestudio.generator.extensions.Utils;

@SuppressWarnings("all")
public class History {
  @Extension
  private ControllerExtensions _controllerExtensions = new ControllerExtensions();
  
  @Extension
  private FormattingExtensions _formattingExtensions = new FormattingExtensions();
  
  @Extension
  private ModelExtensions _modelExtensions = new ModelExtensions();
  
  @Extension
  private NamingExtensions _namingExtensions = new NamingExtensions();
  
  @Extension
  private UrlExtensions _urlExtensions = new UrlExtensions();
  
  @Extension
  private Utils _utils = new Utils();
  
  public void generate(final Entity it, final String appName, final IFileSystemAccess fsa) {
    final String templateFilePath = this._namingExtensions.templateFile(it, "history");
    boolean _shouldBeSkipped = this._namingExtensions.shouldBeSkipped(it.getApplication(), templateFilePath);
    boolean _not = (!_shouldBeSkipped);
    if (_not) {
      String _formatForDisplay = this._formattingExtensions.formatForDisplay(it.getName());
      String _plus = ("Generating history templates for entity \"" + _formatForDisplay);
      String _plus_1 = (_plus + "\"");
      InputOutput.<String>println(_plus_1);
      fsa.generateFile(templateFilePath, this.historyView(it, appName));
    }
  }
  
  private CharSequence historyView(final Entity it, final String appName) {
    StringConcatenation _builder = new StringConcatenation();
    final Application app = it.getApplication();
    _builder.newLineIfNotEmpty();
    _builder.append("{# purpose of this template: ");
    String _formatForDisplay = this._formattingExtensions.formatForDisplay(it.getNameMultiple());
    _builder.append(_formatForDisplay);
    _builder.append(" change history view #}");
    _builder.newLineIfNotEmpty();
    _builder.append("{% extends routeArea == \'admin\' ? \'");
    String _appName = this._utils.appName(app);
    _builder.append(_appName);
    _builder.append("::adminBase.html.twig\' : \'");
    String _appName_1 = this._utils.appName(app);
    _builder.append(_appName_1);
    _builder.append("::base.html.twig\' %}");
    _builder.newLineIfNotEmpty();
    _builder.append("{% block title isDiffView == true ? __f(\'Compare versions of %entityTitle%\', { \'%entityTitle%\': ");
    String _formatForCode = this._formattingExtensions.formatForCode(it.getName());
    _builder.append(_formatForCode);
    _builder.append(".getTitleFromDisplayPattern() }) : __f(\'");
    String _formatForDisplayCapital = this._formattingExtensions.formatForDisplayCapital(it.getName());
    _builder.append(_formatForDisplayCapital);
    _builder.append(" change history for %entityTitle%\', { \'%entityTitle%\': ");
    String _formatForCode_1 = this._formattingExtensions.formatForCode(it.getName());
    _builder.append(_formatForCode_1);
    _builder.append(".getTitleFromDisplayPattern() }) %}");
    _builder.newLineIfNotEmpty();
    _builder.append("{% block admin_page_icon isDiffView == true ? \'arrows-h\' : \'history\' %}");
    _builder.newLine();
    _builder.append("{% block content %}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{{ block(\'page_nav_links\') }}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<div class=\"");
    String _lowerCase = appName.toLowerCase();
    _builder.append(_lowerCase, "    ");
    _builder.append("-");
    String _formatForDB = this._formattingExtensions.formatForDB(it.getName());
    _builder.append(_formatForDB, "    ");
    _builder.append(" ");
    String _lowerCase_1 = appName.toLowerCase();
    _builder.append(_lowerCase_1, "    ");
    _builder.append("-history\">");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("{% if isDiffView == true %}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("{{ block(\'diff_view\') }}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{% else %}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("{{ block(\'history_table\') }}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{% endif %}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{{ block(\'page_nav_links\') }}");
    _builder.newLine();
    _builder.append("{% endblock %}");
    _builder.newLine();
    _builder.append("{% block page_nav_links %}");
    _builder.newLine();
    _builder.append("    ");
    CharSequence _pageNavLinks = this.pageNavLinks(it, appName);
    _builder.append(_pageNavLinks, "    ");
    _builder.newLineIfNotEmpty();
    _builder.append("{% endblock %}");
    _builder.newLine();
    _builder.append("{% block history_table %}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<form action=\"{{ path(\'");
    String _formatForDB_1 = this._formattingExtensions.formatForDB(appName);
    _builder.append(_formatForDB_1, "    ");
    _builder.append("_");
    String _formatForDB_2 = this._formattingExtensions.formatForDB(it.getName());
    _builder.append(_formatForDB_2, "    ");
    _builder.append("_\' ~ routeArea ~ \'loggablehistory\', { id: ");
    String _formatForCode_2 = this._formattingExtensions.formatForCode(it.getName());
    _builder.append(_formatForCode_2, "    ");
    _builder.append(".");
    String _formatForCode_3 = this._formattingExtensions.formatForCode(this._modelExtensions.getFirstPrimaryKey(it).getName());
    _builder.append(_formatForCode_3, "    ");
    _builder.append(" }) }}\" method=\"get\" class=\"form-horizontal\" role=\"form\">");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("<div class=\"table-responsive\">");
    _builder.newLine();
    _builder.append("            ");
    CharSequence _historyTable = this.historyTable(it, appName);
    _builder.append(_historyTable, "            ");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<p>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<button id=\"compareButton\" type=\"submit\" value=\"compare\" class=\"btn btn-primary\" disabled=\"disabled\"><span class=\"fa fa-arrows-h\"></span> {{ __(\'Compare selected versions\') }}</button>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</form>");
    _builder.newLine();
    _builder.append("{% endblock %}");
    _builder.newLine();
    _builder.append("{% block diff_view %}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<div class=\"table-responsive\">");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<table class=\"table table-striped table-bordered table-hover{% if routeArea == \'admin\' %} table-condensed{% endif %}\">");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<colgroup>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<col id=\"cFieldName\" />");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<col id=\"cMinVersion\" />");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<col id=\"cMaxVersion\" />");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("</colgroup>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<th id=\"hFieldName\" scope=\"col\" class=\"z-order-unsorted\">{{ __(\'Field name\') }}</th>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<th id=\"hMinVersion\" scope=\"col\" class=\"z-order-unsorted\">{{ __f(\'Version %version%\', { \'%version%\': minVersion }) }}</th>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<th id=\"hMaxVersion\" scope=\"col\" class=\"z-order-unsorted\">{{ __f(\'Version %version%\', { \'%version%\': maxVersion }) }}</th>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<tbody>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("{% for fieldName, values in diffValues %}");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("<th headers=\"hFieldName\" id=\"h{{ fieldName|replace({ \' \': \'\', \'\"\':\'\' }) }}\" scope=\"row\">{{ fieldName|humanize }}</th>");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("<td headers=\"hMinVersion h{{ fieldName|replace({ \' \': \'\', \'\"\':\'\' }) }}\"{% if values.changed %} class=\"diff-old\"{% endif %}>{{ values.old is ");
    String _lowerCase_2 = appName.toLowerCase();
    _builder.append(_lowerCase_2, "                        ");
    _builder.append("_instanceOf(\'DateTime\') ? values.old|localizeddate(\'long\', \'medium\') : values.old }}</td>");
    _builder.newLineIfNotEmpty();
    _builder.append("                        ");
    _builder.append("<td headers=\"hMaxVersion h{{ fieldName|replace({ \' \': \'\', \'\"\':\'\' }) }}\"{% if values.changed %} class=\"diff-new\"{% endif %}>{{ values.new is ");
    String _lowerCase_3 = appName.toLowerCase();
    _builder.append(_lowerCase_3, "                        ");
    _builder.append("_instanceOf(\'DateTime\') ? values.new|localizeddate(\'long\', \'medium\') : values.new }}</td>");
    _builder.newLineIfNotEmpty();
    _builder.append("                    ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("{% endfor %}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("{% endblock %}");
    _builder.newLine();
    _builder.append("{% block footer %}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{{ parent() }}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{% if isDiffView != true %}");
    _builder.newLine();
    _builder.append("        ");
    CharSequence _customJavaScript = this.customJavaScript(it);
    _builder.append(_customJavaScript, "        ");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("{% endif %}");
    _builder.newLine();
    _builder.append("{% endblock %}");
    _builder.newLine();
    return _builder;
  }
  
  private CharSequence historyTable(final Entity it, final String appName) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<table class=\"table table-striped table-bordered table-hover{% if routeArea == \'admin\' %} table-condensed{% endif %}\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<colgroup>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<col id=\"cSelect\" />");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<col id=\"cVersion\" />");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<col id=\"cDate\" />");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<col id=\"cUser\" />");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<col id=\"cOperation\" />");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<col id=\"cChanges\" />");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<col id=\"cActions\" />");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</colgroup>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th id=\"hSelect\" scope=\"col\" class=\"z-order-unsorted z-w02\">{{ __(\'Select\') }}</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th id=\"hVersion\" scope=\"col\" class=\"z-order-unsorted z-w02\">{{ __(\'Version\') }}</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th id=\"hDate\" scope=\"col\" class=\"z-order-unsorted\">{{ __(\'Date\') }}</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th id=\"hUser\" scope=\"col\" class=\"z-order-unsorted\">{{ __(\'User\') }}</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th id=\"hOperation\" scope=\"col\" class=\"z-order-unsorted\">{{ __(\'Operation\') }}</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th id=\"hChanges\" scope=\"col\" class=\"z-order-unsorted\">{{ __(\'Changes\') }}</th>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<th id=\"hActions\" scope=\"col\" class=\"z-order-unsorted\">{{ __(\'Actions\') }}</th>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<tbody>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{% for logEntry in logEntries %}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td headers=\"hSelect\" class=\"text-center\">");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<input type=\"checkbox\" name=\"versions[]\" value=\"{{ logEntry.version }}\" class=\"");
    String _lowerCase = this._utils.vendorAndName(it.getApplication()).toLowerCase();
    _builder.append(_lowerCase, "                    ");
    _builder.append("-toggle-checkbox\" />");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td headers=\"hVersion\" class=\"text-center\">{{ logEntry.version }}{% if loop.first %} ({{ __(\'latest\') }}){% endif %}</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td headers=\"hDate\">{{ logEntry.loggedAt|localizeddate(\'long\', \'medium\') }}</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td headers=\"hUser\">{{ ");
    String _lowerCase_1 = appName.toLowerCase();
    _builder.append(_lowerCase_1, "                ");
    _builder.append("_userAvatar(uid=logEntry.username, size=20, rating=\'g\') }} {{ logEntry.username|profileLinkByUserName() }}</td>");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("<td headers=\"hOperation\">");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("{% if logEntry.action == \'create\' %}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("{{ __(\'Create\') }}");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("{% elseif logEntry.action == \'update\' %}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("{{ __(\'Update\') }}");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("{% elseif logEntry.action == \'remove\' %}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("{{ __(\'Remove\') }}");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("{% endif %}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td headers=\"hChanges\">");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("{% if logEntry.data is not empty %}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("<a role=\"button\" data-toggle=\"collapse\" href=\"#changes{{ logEntry.version }}\" aria-expanded=\"false\" aria-controls=\"changes{{ logEntry.version }}\">");
    _builder.newLine();
    _builder.append("                            ");
    _builder.append("{{ _fn(\'One field updated\', \'%amount% fields updated\', logEntry.data|length, { \'%amount%\': logEntry.data|length }) }}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("</a>");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("<div id=\"changes{{ logEntry.version }}\" class=\"collapse\">");
    _builder.newLine();
    _builder.append("                            ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                                ");
    _builder.append("{% for field, value in logEntry.data %}");
    _builder.newLine();
    _builder.append("                                    ");
    _builder.append("{% if value is iterable %}");
    _builder.newLine();
    _builder.append("                                        ");
    _builder.append("{% if value|length > 0 %}");
    _builder.newLine();
    _builder.append("                                            ");
    _builder.append("<li>{{ __f(\'%field% set to:\', { \'%field%\': field }) }}");
    _builder.newLine();
    _builder.append("                                                ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                                                    ");
    _builder.append("{% for singleValue in value %}");
    _builder.newLine();
    _builder.append("                                                        ");
    _builder.append("<li class=\"italic\">{{ singleValue }}</li>");
    _builder.newLine();
    _builder.append("                                                    ");
    _builder.append("{% endfor %}");
    _builder.newLine();
    _builder.append("                                                ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("                                            ");
    _builder.append("</li>");
    _builder.newLine();
    _builder.append("                                        ");
    _builder.append("{% else %}");
    _builder.newLine();
    _builder.append("                                            ");
    _builder.append("<li>{{ __f(\'%field% set to <em>%value%</em>\', { \'%field%\': field, \'%value%\': __(\'an empty collection\') })|raw }}</li>");
    _builder.newLine();
    _builder.append("                                        ");
    _builder.append("{% endif %}");
    _builder.newLine();
    _builder.append("                                    ");
    _builder.append("{% else %}");
    _builder.newLine();
    _builder.append("                                        ");
    _builder.append("<li>{{ __f(\'%field% set to <em>%value%</em>\', { \'%field%\': field, \'%value%\': value is ");
    String _lowerCase_2 = appName.toLowerCase();
    _builder.append(_lowerCase_2, "                                        ");
    _builder.append("_instanceOf(\'DateTime\') ? value|localizeddate(\'long\', \'medium\') : value|default(__(\'an empty value\')) })|raw }}</li>");
    _builder.newLineIfNotEmpty();
    _builder.append("                                    ");
    _builder.append("{% endif %}");
    _builder.newLine();
    _builder.append("                                ");
    _builder.append("{% endfor %}");
    _builder.newLine();
    _builder.append("                            ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("{% else %}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("{{ __(\'None\') }}");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("{% endif %}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td headers=\"hActions\" class=\"actions nowrap\">");
    _builder.newLine();
    {
      boolean _hasDisplayAction = this._controllerExtensions.hasDisplayAction(it);
      if (_hasDisplayAction) {
        _builder.append("                    ");
        _builder.append("{% set linkTitle = __f(\'Preview version %version%\', { \'%version%\': logEntry.version }) %}");
        _builder.newLine();
        _builder.append("                    ");
        _builder.append("<a id=\"");
        String _formatForCode = this._formattingExtensions.formatForCode(it.getName());
        _builder.append(_formatForCode, "                    ");
        _builder.append("Item");
        {
          Iterable<DerivedField> _primaryKeyFields = this._modelExtensions.getPrimaryKeyFields(it);
          boolean _hasElements = false;
          for(final DerivedField pkField : _primaryKeyFields) {
            if (!_hasElements) {
              _hasElements = true;
            } else {
              _builder.appendImmediate("_", "                    ");
            }
            _builder.append("{{ ");
            String _formatForCode_1 = this._formattingExtensions.formatForCode(it.getName());
            _builder.append(_formatForCode_1, "                    ");
            _builder.append(".");
            String _formatForCode_2 = this._formattingExtensions.formatForCode(pkField.getName());
            _builder.append(_formatForCode_2, "                    ");
            _builder.append(" }}");
          }
        }
        _builder.append("Display{{ logEntry.version }}\" href=\"{{ path(\'");
        String _formatForDB = this._formattingExtensions.formatForDB(appName);
        _builder.append(_formatForDB, "                    ");
        _builder.append("_");
        String _formatForDB_1 = this._formattingExtensions.formatForDB(it.getName());
        _builder.append(_formatForDB_1, "                    ");
        _builder.append("_\' ~ routeArea ~ \'display\', { ");
        CharSequence _routePkParams = this._urlExtensions.routePkParams(it, this._formattingExtensions.formatForCode(it.getName()), Boolean.valueOf(true));
        _builder.append(_routePkParams, "                    ");
        CharSequence _appendSlug = this._urlExtensions.appendSlug(it, this._formattingExtensions.formatForCode(it.getName()), Boolean.valueOf(true));
        _builder.append(_appendSlug, "                    ");
        _builder.append(", \'version\': logEntry.version, \'raw\': 1 }) }}\" title=\"{{ linkTitle|e(\'html_attr\') }}\" class=\"");
        String _lowerCase_3 = this._utils.vendorAndName(it.getApplication()).toLowerCase();
        _builder.append(_lowerCase_3, "                    ");
        _builder.append("-inline-window hidden\" data-modal-title=\"{{ ");
        String _formatForCode_3 = this._formattingExtensions.formatForCode(it.getName());
        _builder.append(_formatForCode_3, "                    ");
        _builder.append(".getTitleFromDisplayPattern()|e(\'html_attr\') ~ \' \' ~ __(\'version\') ~ \' \' ~ logEntry.version }}\"><span class=\"fa fa-id-card-o\"></span></a>");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("                    ");
    _builder.append("{% if not loop.first %}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("{% set linkTitle = __f(\'Revert to version %version%\', { \'%version%\': logEntry.version }) %}");
    _builder.newLine();
    _builder.append("                        ");
    _builder.append("<a href=\"{{ path(\'");
    String _formatForDB_2 = this._formattingExtensions.formatForDB(appName);
    _builder.append(_formatForDB_2, "                        ");
    _builder.append("_");
    String _formatForDB_3 = this._formattingExtensions.formatForDB(it.getName());
    _builder.append(_formatForDB_3, "                        ");
    _builder.append("_\' ~ routeArea ~ \'loggablehistory\', { ");
    CharSequence _routePkParams_1 = this._urlExtensions.routePkParams(it, this._formattingExtensions.formatForCode(it.getName()), Boolean.valueOf(true));
    _builder.append(_routePkParams_1, "                        ");
    CharSequence _appendSlug_1 = this._urlExtensions.appendSlug(it, this._formattingExtensions.formatForCode(it.getName()), Boolean.valueOf(true));
    _builder.append(_appendSlug_1, "                        ");
    _builder.append(", \'revert\': logEntry.version }) }}\" title=\"{{ linkTitle|e(\'html_attr\') }}\"><span class=\"fa fa-history\"></span></a>");
    _builder.newLineIfNotEmpty();
    _builder.append("                    ");
    _builder.append("{% endif %}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("{% endfor %}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("</table>");
    _builder.newLine();
    return _builder;
  }
  
  private CharSequence pageNavLinks(final Entity it, final String appName) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if ((this._controllerExtensions.hasViewAction(it) || this._controllerExtensions.hasDisplayAction(it))) {
        _builder.append("<p>");
        _builder.newLine();
        _builder.append("    ");
        _builder.append("{% if isDiffView == true %}");
        _builder.newLine();
        _builder.append("        ");
        _builder.append("{% set linkTitle = __(\'Back to history\') %}");
        _builder.newLine();
        _builder.append("        ");
        _builder.append("<a href=\"{{ path(\'");
        String _formatForDB = this._formattingExtensions.formatForDB(appName);
        _builder.append(_formatForDB, "        ");
        _builder.append("_");
        String _formatForDB_1 = this._formattingExtensions.formatForDB(it.getName());
        _builder.append(_formatForDB_1, "        ");
        _builder.append("_\' ~ routeArea ~ \'loggablehistory\', { id: ");
        String _formatForCode = this._formattingExtensions.formatForCode(it.getName());
        _builder.append(_formatForCode, "        ");
        _builder.append(".");
        String _formatForCode_1 = this._formattingExtensions.formatForCode(this._modelExtensions.getFirstPrimaryKey(it).getName());
        _builder.append(_formatForCode_1, "        ");
        _builder.append(" }) }}\" title=\"{{ linkTitle|e(\'html_attr\') }}\" class=\"fa fa-history\">{{ linkTitle }}</a>");
        _builder.newLineIfNotEmpty();
        _builder.append("    ");
        _builder.append("{% else %}");
        _builder.newLine();
        {
          boolean _hasViewAction = this._controllerExtensions.hasViewAction(it);
          if (_hasViewAction) {
            _builder.append("        ");
            _builder.append("{% set linkTitle = __(\'Back to overview\') %}");
            _builder.newLine();
            _builder.append("        ");
            _builder.append("<a href=\"{{ path(\'");
            String _formatForDB_2 = this._formattingExtensions.formatForDB(appName);
            _builder.append(_formatForDB_2, "        ");
            _builder.append("_");
            String _formatForDB_3 = this._formattingExtensions.formatForDB(it.getName());
            _builder.append(_formatForDB_3, "        ");
            _builder.append("_\' ~ routeArea ~ \'view\') }}\" title=\"{{ linkTitle|e(\'html_attr\') }}\" class=\"fa fa-reply\">{{ linkTitle }}</a>");
            _builder.newLineIfNotEmpty();
          }
        }
        {
          boolean _hasDisplayAction = this._controllerExtensions.hasDisplayAction(it);
          if (_hasDisplayAction) {
            _builder.append("        ");
            _builder.append("{% set linkTitle = __(\'Back to detail view\') %}");
            _builder.newLine();
            _builder.append("        ");
            _builder.append("<a href=\"{{ path(\'");
            String _formatForDB_4 = this._formattingExtensions.formatForDB(appName);
            _builder.append(_formatForDB_4, "        ");
            _builder.append("_");
            String _formatForDB_5 = this._formattingExtensions.formatForDB(it.getName());
            _builder.append(_formatForDB_5, "        ");
            _builder.append("_\' ~ routeArea ~ \'display\'");
            CharSequence _routeParams = this._urlExtensions.routeParams(it, this._formattingExtensions.formatForCode(it.getName()), Boolean.valueOf(true));
            _builder.append(_routeParams, "        ");
            _builder.append(") }}\" title=\"{{ linkTitle|e(\'html_attr\') }}\" class=\"fa fa-eye\">{{ linkTitle }}</a>");
            _builder.newLineIfNotEmpty();
          }
        }
        _builder.append("    ");
        _builder.append("{% endif %}");
        _builder.newLine();
        _builder.append("</p>");
        _builder.newLine();
      }
    }
    return _builder;
  }
  
  private CharSequence customJavaScript(final Entity it) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<script type=\"text/javascript\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/* <![CDATA[ */");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("( function($) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("function updateVersionSelectionState() {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("var amountOfSelectedVersions;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("                ");
    _builder.append("amountOfSelectedVersions = $(\'.");
    String _lowerCase = this._utils.vendorAndName(it.getApplication()).toLowerCase();
    _builder.append(_lowerCase, "                ");
    _builder.append("-toggle-checkbox:checked\').length;");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("if (amountOfSelectedVersions > 2) {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("$(this).prop(\'checked\', false);");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("amountOfSelectedVersions--;");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("$(\'#compareButton\').prop(\'disabled\', amountOfSelectedVersions != 2);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("            ");
    _builder.append("$(document).ready(function() {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("$(\'.");
    String _lowerCase_1 = this._utils.vendorAndName(it.getApplication()).toLowerCase();
    _builder.append(_lowerCase_1, "                ");
    _builder.append("-toggle-checkbox\').click(updateVersionSelectionState);");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("updateVersionSelectionState();");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("});");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("})(jQuery);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("/* ]]> */");
    _builder.newLine();
    _builder.append("</script>");
    _builder.newLine();
    return _builder;
  }
}
