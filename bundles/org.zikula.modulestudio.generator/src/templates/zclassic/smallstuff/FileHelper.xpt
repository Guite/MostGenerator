«IMPORT modulestudio»
«EXTENSION extensions::Utils»

«DEFINE phpFileNoHeader(Application app) FOR Object-»
<?php
«ENDDEFINE»

«DEFINE phpFileHeader(Application app) FOR Object-»
<?php
/**
 * «app.name».
 *
 * @copyright «app.author»
 * @link http://zikula.org
 * @license «app.license»
 * @package «app.name»
 * @author «app.author».
 * @url «IF app.url != ""»«app.url»«ELSE»«msUrl()»«ENDIF»
 * @version Generated by ModuleStudio «msVersion()» («msUrl()») at «timestamp()».
 */

«ENDDEFINE»

«DEFINE msWeblink FOR Application-»
<p style="text-align: center">
    Powered by <a href="«msUrl()-»" title="Get the MOST out of Zikula!">ModuleStudio «msVersion()-»</a>
</p>
«ENDDEFINE»


«DEFINE GetterAndSetterMethods(String name, String type) FOR Object-»
«EXPAND GetterMethod(name, type)»
«EXPAND SetterMethod(name, type)»
«ENDDEFINE»

«DEFINE GetterMethod(String name, String type) FOR Object-»
    /**
     * Get «name.formatForDisplay()».
     *
     * @return «type»
     */
    public function get«name.toFirstUpper()»()
    {
        return $this->«name»;
    }
«ENDDEFINE»

«DEFINE SetterMethod(String name, String type) FOR Object-»
    /**
     * Set «name.formatForDisplay()».
     *
     * @param «type» $«name».
     *
     * @return void
     */
    public function set«name.toFirstUpper()»($p«name.toFirstUpper()»)
    {
        $this->«name» = $p«name.toFirstUpper()»;
    }
«ENDDEFINE»


«DEFINE ClassToString(String className) FOR Entity-»
    /**
     * Interceptor being called if an object is used within a string context.
     *
     * @return string
     */
    public function __toString() {
        $string  = 'Instance of the class "«className.formatForCode()»' . "\n";
        $string .= 'Managed table: «name.formatForCode()»' . "\n";
        $string .= 'Entity fields:' . "\n";
«FOREACH fields AS col-»
        $string .= '        «col.name.formatForCode()»' . "\n";
«ENDFOREACH-»
        $string .= "\n";

        return $string;
    }
«ENDDEFINE»

