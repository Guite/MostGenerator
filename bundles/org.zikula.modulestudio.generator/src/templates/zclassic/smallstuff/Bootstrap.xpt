«IMPORT modulestudio»
«EXTENSION extensions::Utils»

«DEFINE Root FOR Application-»
«FILE getAppSourcePath(appName()).msconcat("bootstrap.php")»«EXPAND FileHelper::phpFileHeader(this)»«EXPAND Bootstrap»«ENDFILE»
«ENDDEFINE»

«DEFINE Bootstrap FOR Application-»

/**
 * Module bootstrap called when module is first initialised at runtime.
 *
 * This is only called once, and only if the core has reason to initialise this module, usually
 * to dispatch a controller request or API.
 *
 * For example you can register additional AutoLoaders with ZLoader::addAutoloader($namespace, $path)
 * whereby $namespace is the first part of the PEAR class name
 * and $path is the path to the containing folder.
 */
«IF hasLoggable() || hasSluggable() || hasSortable() || hasTimestampable() || hasTranslatable()-»
// initialise doctrine extension listeners
$helper = ServiceUtil::getService('doctrine_extensions');
«IF hasLoggable()-»
$loggableListener = $helper->getListener('loggable');
$loggableListener->setUsername(UserUtil::getVar('uname'));
«ENDIF-» 
«IF hasSluggable()-»
$helper->getListener('sluggable');
«ENDIF-»
«IF hasSortable()-»
$helper->getListener('sortable');
«ENDIF-»
«IF hasTimestampable()-»
$helper->getListener('timestampable');
«ENDIF-»
«IF hasTranslatable()-»
$helper->getListener('translatable');
«ENDIF-»
«IF hasTrees()-»
$helper->getListener('tree');
«ENDIF-»
«ENDIF-»

«ENDDEFINE»
