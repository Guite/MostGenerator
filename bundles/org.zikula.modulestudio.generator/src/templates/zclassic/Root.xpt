«IMPORT modulestudio»
«IMPORT templates::zclassic::models»
«IMPORT templates::zclassic::controller»
«IMPORT templates::zclassic::view»
«IMPORT templates::zclassic::smallstuff»
«IMPORT templates::zclassic::tests»
«EXTENSION extensions::Utils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»Entry point for headless calls (e.g. for manual test runs), required also for compiler backend mode«ENDREM»
«DEFINE Root FOR Application»
«EXPAND Root(null) FOR this-»
«ENDDEFINE»

«REM»Main entry point for the generator«ENDREM»
«DEFINE Root(Object pm) FOR Application»
    «pm.subTask("Basic information")»
    «info("Generating basic information")»
	«EXPAND VersionFile::Root»

	«pm.subTask("Model: Entity classes")»
    «info("Generating entity classes")»
	«EXPAND Entity::Root»

    «pm.subTask("Model: Repository classes")»
    «info("Generating repository classes")»
    «EXPAND Repository::Root»

	«pm.subTask("Controller: Application installer")»
    «info("Generating application installer")»
	«EXPAND controller::Installer::Root»
    «pm.subTask("Controller: Controller classes")»
    «info("Generating controller classes")»
	«EXPAND Controller::Root»
	«pm.subTask("Controller: Action handler classes")»
    «info("Generating action handler classes")»
	«EXPAND ActionHandler::Root»
    «pm.subTask("Controller: Persistent event handlers")»
    «info("Generating persistent event handlers")»
    «EXPAND controller::Listeners::Root»
    «pm.subTask("Controller: Bootstrapping")»
    «info("Generating bootstrapping")»
    «EXPAND Bootstrap::Root»
    «pm.subTask("Controller: Workflows")»
    «info("Generating workflows")»
    «EXPAND Workflow::Root»

	«pm.subTask("View: Rendering templates")»
    «info("Generating view templates")»
	«EXPAND View::Root»
	«pm.subTask("View: Form templates")»
    «info("Generating form templates")»
	«EXPAND Forms::Root»
	«pm.subTask("View: Module-specific plugins")»
    «info("Generating application-specific plugins")»
	«EXPAND Plugins::Root»
	«pm.subTask("View: CSS definitions")»
    «info("Generating css definitions")»
	«EXPAND Styles::Root»
    «pm.subTask("View: Images")»
    «info("Generating images")»
    «EXPAND Images::Root»

    «pm.subTask("Additions: Blocks")»
    «info("Generating blocks")»
    «EXPAND controller::apis::Blocks::Root»
«IF hasUploads()-»
    «pm.subTask("Additions: Upload handlers")»
    «info("Generating upload handlers")»
    «EXPAND controller::Uploads::Root»
«ENDIF-»
    «pm.subTask("Additions: Content type api")»
    «info("Generating content type api")»
    «EXPAND controller::apis::ContentType::Root»
    «pm.subTask("Additions: Mailz api")»
    «info("Generating mailz api")»
    «EXPAND controller::apis::Mailz::Root»
    «pm.subTask("Additions: Translations")»
    «info("Generating translations")»
    «EXPAND smallstuff::Translations::Root»
    «pm.subTask("Additions: Documentation")»
    «info("Generating documentation")»
    «EXPAND smallstuff::Docs::Root»

    «pm.subTask("Additions: Tests")»
    «info("Generating unit tests")»
    «EXPAND tests::Root::Root»
«ENDDEFINE»

