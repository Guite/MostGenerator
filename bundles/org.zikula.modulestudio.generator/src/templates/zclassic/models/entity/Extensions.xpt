«IMPORT modulestudio»
«REM«IMPORT templates::zclassic::smallstuff»«ENDREM»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«REMEXTENSION org::eclipse::xtend::util::stdlib::io»«ENDREM»

«DEFINE Imports FOR Entity-»
use Gedmo\Mapping\Annotation as Gedmo;
«ENDDEFINE»

«REM»Class annotations«ENDREM»
«DEFINE ClassExtensions FOR Entity»
«IF loggable-»
     * @Gedmo:Loggable«IF loggableLogEntryClass != null && loggableLogEntryClass != ""»(logEntryClass="«loggableLogEntryClass.formatForCodeCapital()»")«ENDIF-»
«ENDIF-»
«IF tree != EntityTreeType::NONE-»
     * @Gedmo\Tree(type="«tree.asConstant()»")
«IF tree == EntityTreeType::CLOSURE-»
«REM»
This annotation forces to specify the closure domain object, which must extend AbstractClosure
in order to have personal closures.
     * @Gedmo\TreeClosure(class="Entity\CategoryClosure")
«ENDREM»
«ENDIF-»
«ENDIF-»
«ENDDEFINE»

«REM»Column annotations«ENDREM»
«DEFINE ColumnExtensionsDefault FOR DerivedField»
«IF versioned-»
     * @Gedmo\Versioned
«ENDIF-»
«IF sluggablePosition > 0-»
     * @Gedmo\Sluggable(position=«sluggablePosition»)
«ENDIF-»
«IF sortableGroup-»
     * @Gedmo\SortableGroup
«ENDIF-»
«ENDDEFINE»

«DEFINE ColumnExtensions FOR DerivedField»
«EXPAND ColumnExtensionsDefault-»
«ENDDEFINE»
«DEFINE ColumnExtensions FOR AbstractIntegerField»
«EXPAND ColumnExtensionsDefault-»
«IF sortablePosition > 0-»
     * @Gedmo\SortablePosition
«ENDIF-»
«ENDDEFINE»
«DEFINE ColumnExtensions FOR AbstractDateField»
«EXPAND ColumnExtensionsDefault-»
«IF timestampable != EntityTimestampableType::NONE-»
     * @Gedmo\Timestampable(on="«timestampable.asConstant()»"«EXPAND TimestampableDetails-»)
«ENDIF-»
«ENDDEFINE»

«DEFINE TimestampableDetails FOR AbstractDateField»
«IF timestampable == EntityTimestampableType::CHANGE-»
field="«timestampableChangeTriggerField.formatForCode()»"«IF timestampableChangeTriggerValue-», value="«timestampableChangeTriggerValue.formatForCode()»"«ENDIF-»
«ENDIF-»
«ENDDEFINE»

«REM»Additional column definitions«ENDREM»
«DEFINE AdditionalProperties FOR Entity-»
«IF hasSluggableFields()-»

    /**
     * @Gedmo\Slug(style="«slugStyle.asConstant()»"«ENDIF-»separator="«slugSeparator»"«IF !slugUnique-», unique=false«ENDIF-»«IF !slugUpdatable-», updatable=false«ENDIF-»)
     * @ORM\Column(type="string", length=«slugLength»«IF !slugUnique-», unique=false«ENDIF-»)
     * @var string $slug.
     */
    protected $slug;
«ENDIF-»
«IF tree != EntityTreeType::NONE-»

    /**
     * @Gedmo\TreeLeft
     * @ORM\Column(type="integer")
     * @var integer $lft.
     */
    protected $lft;

    /**
     * @Gedmo\TreeLevel
     * @ORM\Column(type="integer")
     * @var integer $lvl.
     */
    protected $lvl;

    /**
     * @Gedmo\TreeRight
     * @ORM\Column(type="integer")
     * @var integer $rgt.
     */
    protected $rgt;

    /**
     * @Gedmo\TreeRoot
     * @ORM\Column(type="integer", nullable=true)
     * @var integer $root.
     */
    protected $root;

    /**
     * @Gedmo\TreeParent
     * @ORM\ManyToOne(targetEntity="«implClassModelEntity()»", inversedBy="children")
     * @ORM\JoinColumn(name="parent_id", referencedColumnName="«idField()»", onDelete="SET NULL")
     * @var «implClassModelEntity()» $parent.
     */
    protected $parent;

    /**
     * @ORM\OneToMany(targetEntity="«implClassModelEntity()»", mappedBy="parent")
     * @ORM\OrderBy({"lft" = "ASC"})
     * @var «implClassModelEntity()» $children.
     */
    protected $children;
«ENDIF-»
«ENDDEFINE»

«DEFINE AdditionalAccessors FOR Entity-»
«IF tree != EntityTreeType::NONE-»
«EXPAND FileHelper::GetterAndSetterMethods('parent', implClassModelEntity(), true, 'null') FOR Object-»
«ENDIF-»
«ENDDEFINE»

«REM»Association annotations«ENDREM»
«DEFINE RelationExtensions(Boolean useTarget) FOR JoinRelationship»
«ENDDEFINE»
«DEFINE RelationExtensions(Boolean useTarget) FOR OneToOneRelationship»
«IF versioned-»
     * @Gedmo\Versioned
«ENDIF-»
«ENDDEFINE»
«DEFINE RelationExtensions(Boolean useTarget) FOR ManyToOneRelationship»
«IF useTarget && versioned-»
     * @Gedmo\Versioned
«ENDIF-»
«ENDDEFINE»

«REM»closure domain object«ENDREM»
«DEFINE ClosureClass(Application app) FOR Entity-»
«IF !isInheriting()-»
    «FILE getAppSourcePath(app.appName()).msconcat(baseClassModelClosure().asFile())»«EXPAND FileHelper::phpFileHeader(app)»«EXPAND ClosureObjectBaseImpl(app)»«ENDFILE»
«ENDIF-»
    «FILE getAppSourcePath(app.appName()).msconcat(implClassModelClosure().asFile())»«EXPAND FileHelper::phpFileHeader(app)»«EXPAND ClosureObjectImpl(app)»«ENDFILE»
«ENDDEFINE»

«REM»base implementation«ENDREM»
«DEFINE ClosureObjectBaseImpl(Application app) FOR Entity-»

use Gedmo\Tree\Entity\AbstractClosure;

/**
 * Closure domain object class allowing personal closures.
 *
 * This is the base closure class for «name.formatForDisplay()» entities.
 */
class «baseClassModelClosure()» extends AbstractClosure
{
}
«ENDDEFINE»

«REM»concrete implementation stub«ENDREM»
«DEFINE ClosureObjectImpl(Application app) FOR Entity-»

/**
 * Closure domain object class allowing personal closures.
 *
 * This is the concrete closure class for «name.formatForDisplay()» entities.
 */
class «implClassModelClosure()» extends «IF isInheriting()»«parentType().implClassModelClosure()»«ELSE»«baseClassModelClosure()»«ENDIF»
{
    // feel free to add your own methods here
}
«ENDDEFINE»
