«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»Entry point for edit sections beside the actual fields.«ENDREM»
«DEFINE Root(Application app, Controller controller) FOR Entity-»
«EXPAND ExtensionsAndRelations(app, controller)-»

«EXPAND DisplayHooks(app)-»

«EXPAND ReturnControl-»

«EXPAND SubmitActions-»
«ENDDEFINE»

«DEFINE ExtensionsAndRelations(Application app, Controller controller) FOR Entity-»
«IF attributable-»
    {include file='«controller.name()»/include_attributes_edit.tpl' obj=$«name.formatForDB()»}
«ENDIF-»
«IF categorisable-»
    {include file='«controller.name()»/include_categories_edit.tpl' obj=$«name.formatForDB()» groupName='«name.formatForDB()»Obj'}
«ENDIF-»
«IF standardFields-»
    {if $mode ne 'create'}
        {include file='«controller.name()»/include_standardfields_edit.tpl' obj=$«name.formatForDB()»}
    {/if}
«ENDIF-»
«IF metaData-»
    {include file='«controller.name()»/include_metadata_edit.tpl' obj=$«name.formatForDB()»}
«ENDIF-»
«EXPAND templates::zclassic::view::FormComponents::Relations::Root(app, controller, true, true) FOREACH incoming.typeSelect(JoinRelationship).select(e|e.bidirectional)-»
«EXPAND templates::zclassic::view::FormComponents::Relations::Root(app, controller, true, false) FOREACH outgoing.typeSelect(JoinRelationship)-»
«ENDDEFINE»

«DEFINE DisplayHooks(Application app) FOR Entity-»
    {* include display hooks *}
    {if $mode eq 'create'}
        {notifydisplayhooks eventname='«app.name.formatForDB()».ui_hooks.«nameMultiple.formatForDB()».form_edit' id=null assign='hooks'}
    {else}
        {notifydisplayhooks eventname='«app.name.formatForDB()».ui_hooks.«nameMultiple.formatForDB()».form_edit' id=«IF !hasCompositeKeys()-»$«name.formatForDB()».«getFirstPrimaryKey().name.formatForCode()»«ELSE-»"«FOREACH getPrimaryKeyFields() AS pkField SEPARATOR '_'-»`$«name.formatForDB()».«pkField.name.formatForCode()»`«ENDFOREACH-»"«ENDIF-» assign='hooks'}
    {/if}
    {if is_array($hooks) && isset($hooks[0])}
        <fieldset>
            <legend>{gt text='Hooks'}</legend>
            {foreach key='hookName' item='hook' from=$hooks}
            <div class="z-formrow">
                {$hook}
            </div>
            {/foreach}
        </fieldset>
    {/if}
«ENDDEFINE»

«DEFINE ReturnControl FOR Entity-»
    {* include return control *}
    {if $mode eq 'create'}
        <fieldset>
            <legend>{gt text='Return control'}</legend>
            <div class="z-formrow">
                {formlabel for='repeatcreation' __text='Create another item after save'}
                {formcheckbox group='«name.formatForDB()»' id='repeatcreation' readOnly=false}
            </div>
        </fieldset>
    {/if}
«ENDDEFINE»

«DEFINE SubmitActions FOR Entity-»
    {* include possible submit actions *}
    <div class="z-buttons z-formbuttons">
    {if $mode eq 'edit'}
        {formbutton id='btnUpdate' commandName='update' __text='Update «name.formatForDisplay()»' class='z-bt-save'}
      {if !$inlineUsage}
        {gt text='Really delete this «name.formatForDisplay()»?' assign="deleteConfirmMsg"}
        {formbutton id='btnDelete' commandName='delete' __text='Delete «name.formatForDisplay()»' class='z-bt-delete z-btred' confirmMessage=$deleteConfirmMsg}
      {/if}
    {elseif $mode eq 'create'}
        {formbutton id='btnCreate' commandName='create' __text='Create «name.formatForDisplay()»' class='z-bt-ok'}
    {else}
        {formbutton id='btnUpdate' commandName='update«REM»TODO«ENDREM»' __text='OK' class='z-bt-ok'}
    {/if}
        {formbutton id='btnCancel' commandName='cancel' __text='Cancel' class='z-bt-cancel'}
    </div>
«REM»
{linkbutton commandName='edit' __text='Edit' class='z-icon-es-edit'}
{button commandName='cancel' __text='Cancel' class='z-bt-cancel'}
«ENDREM»«''-»
«ENDDEFINE»
