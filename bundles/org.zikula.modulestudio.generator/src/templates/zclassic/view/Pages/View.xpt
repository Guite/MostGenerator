«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»
listType:
	0 = div and ul
	1 = div and ol
	2 = div and dl
	3 = div and table
«ENDREM»
«DEFINE Impl(String appName, Controller controller, Integer listType) FOR Entity»
«info("Generating " + controller.name() + " view templates for entity \"" + name.formatForDisplay() + "\"") -> ""-»
«LET name.formatForCode() AS objName-»
«FILE templateFile(controller, name, 'view')-»
{* purpose of this template: «nameMultiple.formatForDisplay()» view view in «controller.name()» area *}

{include file='«controller.name()»/header.tpl'}

<div class="z-«IF controller.metaType == AdminController-»admin«ELSE»frontend«ENDIF»container">
{gt text='«name.formatForDisplayCapital()» list' assign='templateTitle'}
«IF controller.metaType == AdminController-»
    <div class="z-adminpageicon">{icon type='view' size='large' alt=$templateTitle}</div>
«ENDIF-»
    {pagesetvar name='title' value=$templateTitle}
    <h2>{$templateTitle}</h2>
«IF documentation != null && documentation != ""-»
    <p class="sectiondesc">«documentation»</p>
«ENDIF-»

«IF controller.hasActions('edit')-»
    {checkpermissionblock component='«appName»::' instance='.*' level="ACCESS_ADD"}
«IF nestedSet-»
    {*
«ENDIF-»
        {gt text='Create «name.formatForDisplay()»' assign='createTitle'}
        <a href="{modurl modname='«appName»' type='«controller.name()»' func='edit' ot='«objName»'}" title="{$createTitle}" class="z-icon-es-add">
            {$createTitle}
        </a>
«IF nestedSet-»
    *}
«ENDIF-»
    {/checkpermissionblock}
«ENDIF»
«IF nestedSet-»
        {gt text='Switch to hierarchy view' assign='switchTitle'}
        <a href="{modurl modname='«appName»' type='«controller.name()»' func='view' ot='«objName»' tpl='nestedSet'}" title="{$switchTitle}" class="z-icon-es-view">
            {$switchTitle}
        </a>
«ENDIF-»

«IF listType == 0-»
<ul>
«ELSEIF listType == 1-»
<ol>
«ELSEIF listType == 2-»
<dl>
«ELSEIF listType == 3-»
<table class="z-datatable">
    <colgroup>
«FOREACH fields.typeSelect(DerivedField).reject(e|e.primaryKey) AS field -»
«IF field.metaType == IntegerField && (!((IntegerField) field).getPointingRelations().isEmpty)-»
        <col id="c«EXPAND MarkupIdCode(false) FOREACH ((IntegerField) field).getPointingRelations()-»" />
«ELSE-»
        <col id="c«EXPAND MarkupIdCode(false) FOR field-»" />
«ENDIF-»
«ENDFOREACH-»
«FOREACH outgoing.typeSelect(OneToOneRelationship) AS rel-»
        <col id="c«EXPAND MarkupIdCode(true) FOR rel-»" />
«ENDFOREACH-»
        <col id="cintactions" />
    </colgroup>
    <thead>
    <tr>
«EXPAND HeaderLine(controller) FOREACH getDerivedFields().reject(e|e.primaryKey)-»
«EXPAND HeaderLineRelation(controller, true) FOREACH outgoing.typeSelect(OneToOneRelationship)-»
        <th id="hintactions" scope="col" align="left" valign="middle" class="z-wrap z-order-unsorted">{gt text='Actions'}</th>
    </tr>
    </thead>
    <tbody>
«ENDIF-»

    {foreach item='«objName»' from=$items}
«IF listType < 2-»
    <li><ul>
«ELSEIF listType == 2-»
    <dt>
«ELSEIF listType == 3-»
    <tr class="{cycle values='z-odd, z-even'}">
«ENDIF-»
«EXPAND DisplayEntry(controller, listType, false) FOREACH getDerivedFields().reject(e|e.primaryKey)-»
«EXPAND DisplayEntry(controller, listType, true) FOREACH outgoing.typeSelect(OneToOneRelationship)-»
«EXPAND ItemActions(appName, controller, listType)-»
«IF listType < 2-»
    </ul></li>
«ELSEIF listType == 2-»
    </dt>
«ELSEIF listType == 3-»
    </tr>
«ENDIF-»
    {foreachelse}
«IF listType < 2-»
        <li>
«ELSEIF listType == 2-»
        <dt>
«ELSEIF listType == 3-»
        <tr class="z-«IF controller.metaType == AdminController-»admin«ELSE»data«ENDIF»tableempty">
          <td align="left" valign="top" colspan="«(fields.size + outgoing.typeSelect(OneToOneRelationship).size)»">«REM»fields.size -1 (id) +1 (actions)«ENDREM»
«ENDIF-»
            {gt text='No «nameMultiple.formatForDisplay()» found.'}
«IF listType < 2-»
        </li>
«ELSEIF listType == 2-»
        </dt>
«ELSEIF listType == 3-»
          </td>
        </tr>
«ENDIF-»
    {/foreach}

«IF listType == 0-»
</ul>
«ELSEIF listType == 1-»
</ol>
«ELSEIF listType == 2-»
</dl>
«ELSEIF listType == 3-»
    </tbody>
</table>
«ENDIF-»

    {pager rowcount=$pager.numitems limit=$pager.itemsperpage display='page'}

«IF controller.metaType == UserController-»
    {modurl modname='«appName»' func='view' ot='«objName»' pos=$currentPage assign='returnurl'}
    {notifydisplayhooks eventname='«appName.formatForDB()».hook.«nameMultiple.formatForDB()».ui.view' area='modulehook_area.«appName.formatForDB()».«nameMultiple.formatForDB()»' subject='category' returnurl=$returnurl assign='hooks'}
    {foreach from=$hooks key='hookname' item='hook'}
        {$hook}
    {/foreach}
«ENDIF-»
</div>

{include file='«controller.name()»/footer.tpl'}
«ENDFILE»
«ENDLET-»
«ENDDEFINE»

«DEFINE HeaderLine(Controller controller) FOR EntityField-»
«ENDDEFINE»

«DEFINE HeaderLineSimple(Controller controller) FOR DerivedField-»
        <th id="h«EXPAND MarkupIdCode(false)-»" scope="col" align="«EXPAND Alignment-»" valign="middle">
«EXPAND HeaderLineInner(controller)-»
        </th>
«ENDDEFINE»

«DEFINE HeaderLine(Controller controller) FOR DerivedField-»
«EXPAND HeaderLineSimple(controller)-»
«ENDDEFINE»

«DEFINE HeaderLine(Controller controller) FOR IntegerField-»
«LET getPointingRelations() AS joins-»
«IF !joins.isEmpty-»
«EXPAND HeaderLineRelation(controller, false) FOREACH joins-»
«ELSE-»
«EXPAND HeaderLineSimple(controller)-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE HeaderLineInner(Controller controller) FOR DerivedField-»
«EXPAND HeaderLineInnerSimpleField(controller)-»
«ENDDEFINE»

«DEFINE HeaderLineInner(Controller controller) FOR IntegerField-»
«LET getPointingRelations() AS joins-»
«IF !joins.isEmpty-»
«EXPAND HeaderLineInnerRelationField(controller) FOREACH joins-»
«ELSE-»
«EXPAND HeaderLineInnerSimpleField(controller)-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE HeaderLineInnerSimpleField(Controller controller) FOR DerivedField-»
«EXPAND HeaderSortingLink(controller, entity, actualFieldName().formatForCode(), actualFieldName())-»
«ENDDEFINE»

«DEFINE HeaderLineInnerRelationField(Controller controller) FOR JoinRelationship-»
«EXPAND HeaderSortingLink(controller, target, getRelationAliasName(false).formatForCode(), getRelationAliasName(false).formatForCodeCapital())-»
«ENDDEFINE»

«DEFINE HeaderLine(Controller controller) FOR CalculatedField-»
«ENDDEFINE»

«DEFINE HeaderLineRelation(Controller controller, Boolean useTarget) FOR JoinRelationship-»
        <th id="h«EXPAND MarkupIdCode(useTarget)-»" scope="col" align="left" valign="middle">
«EXPAND HeaderSortingLink(controller, source, getRelationAliasName(useTarget).formatForCode(), getRelationAliasName(useTarget).formatForCodeCapital())-»
        </th>
«ENDDEFINE»



«DEFINE HeaderSortingLink(Controller controller, Entity entity, String fieldName, String label) FOR Object-»
            {sortlink __linktext='«label.formatForDisplayCapital()»' sort='«fieldName»' currentsort=$sort sortdir=$sdir modname='«controller.container.application.appName()»' type='«controller.name()»' func='view' ot='«entity.name.formatForCode()»'}
«ENDDEFINE»

«DEFINE Alignment FOR Object»left«ENDDEFINE»
«DEFINE Alignment FOR IntegerField»«IF !getPointingRelations().isEmpty-»left«ELSE»right«ENDIF»«ENDDEFINE»
«DEFINE Alignment FOR DecimalField»right«ENDDEFINE»
«DEFINE Alignment FOR FloatField»right«ENDDEFINE»
«DEFINE Alignment FOR BooleanField»center«ENDDEFINE»


«DEFINE DisplayEntry(Controller controller, Integer listType, Boolean useTarget) FOR Object-»
«IF listType < 2-»
        <li>
«ELSEIF listType == 2-»
        <dd>
«ELSEIF listType == 3-»
        <td headers="h«EXPAND MarkupIdCode(useTarget)»" align="«EXPAND Alignment-»" valign="top">
«ENDIF-»
«EXPAND DisplayEntryInner(controller, useTarget)-»
«IF listType < 2-»
        </li>
«ELSEIF listType == 2-»
        </dd>
«ELSEIF listType == 3-»
        </td>
«ENDIF-»
«ENDDEFINE»

«DEFINE MarkupIdCode(Boolean useTarget) FOR Object-»«ENDDEFINE»
«DEFINE MarkupIdCode(Boolean useTarget) FOR NamedObject-»«name.formatForDB()»«ENDDEFINE»
«DEFINE MarkupIdCode(Boolean useTarget) FOR DerivedField-»«actualFieldName().formatForDB()»«ENDDEFINE»
«DEFINE MarkupIdCode(Boolean useTarget) FOR IntegerField-»«IF !getPointingRelations().isEmpty»«getPointingRelations().get(0).getRelationAliasName(false).formatForDB()»«ELSE»«actualFieldName().formatForDB()»«ENDIF»«ENDDEFINE»
«DEFINE MarkupIdCode(Boolean useTarget) FOR JoinRelationship-»«getRelationAliasName(useTarget).formatForDB()»«ENDDEFINE»

«DEFINE DisplayEntryInner(Controller controller, Boolean useTarget) FOR Object-»
«ENDDEFINE»

«DEFINE DisplayEntryInner(Controller controller, Boolean useTarget) FOR DerivedField-»
«EXPAND DisplayEntryInnerSimpleField(controller)-»
«ENDDEFINE»

«DEFINE DisplayEntryInner(Controller controller, Boolean useTarget) FOR IntegerField-»
«LET getPointingRelations() AS joins-»
«IF !joins.isEmpty-»
«EXPAND DisplayEntryRelationField(controller, false) FOREACH joins-»
«ELSE-»
«EXPAND DisplayEntryInnerSimpleField(controller)-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE DisplayEntryInnerSimpleField(Controller controller) FOR DerivedField-»
«IF leading == true-»
            {$«entity.name.formatForCode()».«actualFieldName().formatForCode()»|notifyfilters:'«entity.container.application.appName().formatForDB()».filterhook.«entity.nameMultiple.formatForDB()»'}
«ELSE-»
«EXPAND templates::zclassic::view::PageComponents::SimpleFields::DisplayField(entity.name.formatForCode(), 'view', '            ')»
«ENDIF-»
«ENDDEFINE»

«DEFINE DisplayEntryInner(Controller controller, Boolean useTarget) FOR OneToOneRelationship-»
«EXPAND DisplayEntryRelationField(controller, useTarget)-»
«ENDDEFINE»

«DEFINE DisplayEntryRelationField(Controller controller, Boolean useTarget) FOR JoinRelationship-»
«LET getRelationAliasName(useTarget).formatForCodeCapital() AS relationAliasName-»
«LET ((!useTarget) ? target : source) AS mainEntity-»
«LET ((useTarget) ? target : source) AS linkEntity-»
«LET mainEntity.name.formatForCode().msconcat('.').msconcat(relationAliasName) AS relObjName-»
            {if (isset($«relObjName»))}
«IF controller.hasActions('display')-»
                <a href="{modurl modname='«container.application.appName()»' type='«controller.name()»' func='display' ot='«linkEntity.name.formatForCode()»' «linkEntity.idField()»=$«relObjName».«linkEntity.idField()»}">
                    {$«relObjName».«linkEntity.getLeadingField().actualFieldName().formatForCode()»«REM»|nl2br«ENDREM»|default:""}
                </a>
                <a id="«linkEntity.name.formatForCode()»Item{$«mainEntity.name.formatForCode()».«mainEntity.idField()»}_{$«relObjName».«linkEntity.idField()»}Display" href="{modurl modname='«container.application.appName()»' type='«controller.name()»' func='display' ot='«linkEntity.name.formatForCode()»' «linkEntity.idField()»=$«relObjName».«linkEntity.idField()» theme='Printer'«IF controller.metaType == UserController» forcelongurl=true«REM»Temporary hack due to core bug with theme parameter in short urls«ENDREM»«ENDIF-»}" title="{gt text='Open quick view window'}" style="display: none">
                    {icon type='view' size='extrasmall' __alt='Quick view'}
                </a>
                <script type="text/javascript" charset="utf-8">
                /* <![CDATA[ */
                    document.observe('dom:loaded', function() {
                        «container.application.prefix()»InitInlineWindow($('«linkEntity.name.formatForCode()»Item{{$«mainEntity.name.formatForCode()».«mainEntity.idField()»}}_{{$«relObjName».«linkEntity.idField()»}}Display'), '{{$«relObjName».«linkEntity.getLeadingField().actualFieldName().formatForCode()»|replace:"'":""}}');
                    });
                /* ]]> */
                </script>
«ELSE-»
                {$«relObjName».«linkEntity.getLeadingField().actualFieldName().formatForCode()»«REM»|nl2br«ENDREM»|default:""}
«ENDIF-»
            {/if}
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ENDDEFINE»

«DEFINE DisplayEntry(Controller controller, Boolean useTarget) FOR CalculatedField-»
«ENDDEFINE»


«DEFINE ItemActions(String appName, Controller controller, Integer listType) FOR Entity-»
«LET name.formatForCode() AS objName-»
«IF listType < 2-»
        <li>
«ELSEIF listType == 2-»
        <dd>
«ELSEIF listType == 3-»
        <td headers="hintactions" align="left" valign="top" style="white-space: nowrap">
«ENDIF-»
«IF controller.hasActions('display')-»
            <a href="{modurl modname='«appName»' type='«controller.name()»' func='display' ot='«objName»' «idField()»=$«objName».«idField()»}" title="{$«objName».«getLeadingField().actualFieldName().formatForCode()»|replace:"\"":""}">
                {icon type='display' size='extrasmall' __alt='Details'}
            </a>
«ENDIF-»            
«IF controller.hasActions('edit')-»
    {checkpermissionblock component='«appName»::' instance='.*' level='ACCESS_EDIT'}
            <a href="{modurl modname='«appName»' type='«controller.name()»' func='edit' ot='«objName»' «idField()»=$«objName».«idField()»}" title="{gt text='Edit'}">
                {icon type='edit' size='extrasmall' __alt='Edit'}
            </a>
«IF nestedSet-»
    {*
«ENDIF-»
            <a href="{modurl modname='«appName»' type='«controller.name()»' func='edit' ot='«objName»' astemplate=$«objName».«idField()»}" title="{gt text='Reuse for new item'}">
                {icon type='saveas' size='extrasmall' __alt='Reuse'}
            </a>
«IF nestedSet-»
    *}
«ENDIF-»
    {/checkpermissionblock}
«ENDIF-»
«IF controller.hasActions('delete')-»
    {checkpermissionblock component='«appName»::' instance='.*' level='ACCESS_DELETE'}
            <a href="{modurl modname='«appName»' type='«controller.name()»' func='delete' ot='«objName»' «idField()»=$«objName».«idField()»}" title="{gt text='Delete'}">
                {icon type='delete' size='extrasmall' __alt='Delete'}
            </a>
    {/checkpermissionblock}
«ENDIF-»
«IF listType < 2-»
        </li>
«ELSEIF listType == 2-»
        </dd>
«ELSEIF listType == 3-»
        </td>
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

