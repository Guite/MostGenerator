/**
 * Copyright (c) 2007-2023 Axel Guckelsberger
 */

/* XPECT_SETUP org.zikula.modulestudio.generator.tests.MostGeneratorTest END_SETUP */

/*
test which files are contained in the output
XPECT files ---
    .gitignore
    composer.json
--- */

application "SimpleNews" targets SF70 {
    documentation "Simple news extension"
    vendor "Guite"
    author "Axel Guckelsberger"
    email "info@guite.de"
    url "https://guite.de"
    version "0.0.5"
    license "My license"
    prefix "sinew"
    generateAccountApi false
    generatePdfSupport true
    generateOnlyBaseClasses false
    timestampAllGeneratedFiles false
    versionAllGeneratedFiles false
    generatePoweredByBacklinksIntoFooterTemplates false
    generateTests false
    writeModelToDocs false
    generateTechnicalDocumentation false
    indexActionsPosition END
    indexActionsStyle DROPDOWN
    indexActionsWithIcons false
    detailActionsPosition NONE
    detailActionsStyle BUTTON_GROUP
    detailActionsWithIcons false
    skipFiles "foo, bar"
    markFiles "foo, bar"
    entities {
        entity "article" leading loggable categorisable {
            nameMultiple "articles"
            displayPattern "#title#"
            lockType OPTIMISTIC
            tree CLOSURE
            onAccountDeletionCreator GUEST
            onAccountDeletionLastEditor GUEST
            workflow ENTERPRISE
            fields {
                string "title" {
                    sluggablePosition 1
                    length 200
                },
                integer "currentVersion" version,
                datetime "myPast" past,
                datetime "myFuture" future
            }
            actions {
                indexAction "Index" {
                    documentation "My index action"
                },
                detailAction "Detail",
                editAction "Edit",
                deleteAction "Delete"
            }
        },
        entity "image" loggable geographical {
            nameMultiple "images"
            displayPattern "#title#"
            changeTrackingPolicy DEFERRED_EXPLICIT
            lockType OPTIMISTIC
            onAccountDeletionCreator DELETE
            onAccountDeletionLastEditor DELETE
            fields {
                string "title" translatable {
                    sluggablePosition 1
                    length 200
                },
                string "zipCode" {
                    mandatory false
                },
                text "description",
                integer "currentVersion" unique version,
                upload "myImage",
                datetime "myStart" startDate,
                datetime "myEnd" endDate,
                datetime "myPast" past {
                    components TIME
                },
                datetime "myFuture" future {
                    components TIME
                }
            }
            actions {
                indexAction "Index",
                detailAction "Detail",
                editAction "Edit"
            }
        },
        entity "location" geographical {
            nameMultiple "locations"
            displayPattern "#title#"
            fields {
                string "title" {
                    visibleOnIndex false
                    visibleOnDetail false
                    visibleOnSort false
                },
                string "myPassword" {
                    visibleOnDetail false
                    visibleOnSort false
                    role PASSWORD
                },
                string "zipCode" unique {
                    mandatory false
                    visibleOnIndex false
                    visibleOnSort false
                },
                list "myList1" {
                    items {
                        listItem "My first item",
                        default listItem "My second item"
                    }
                },
                list "myList2" expanded {
                    items {
                        listItem "My first item",
                        default listItem "My second item"
                    }
                },
                list "myList3" multiple {
                    items {
                        listItem "My first item",
                        default listItem "My second item"
                    }
                },
                list "myList4" multiple expanded {
                    min 1
                    max 2
                    items {
                        default listItem "My first item",
                        default listItem "My second item"
                    }
                },
                datetime "myTime" immutable {
                    defaultValue "now"
                    components TIME
                },
                datetime "myStart" startDate {
                    components DATE
                },
                datetime "myEnd" endDate {
                    components DATE
                },
                datetime "myPast" past {
                    components DATE
                },
                datetime "myFuture" future {
                    components DATE
                },
                upload "myImage",
                user "myUser1" {
                    onAccountDeletion ADMIN
                },
                user "myUser2" {
                    onAccountDeletion GUEST
                },
                user "myUser3" {
                    onAccountDeletion DELETE
                }
            }
            actions {
                indexAction "Index",
                detailAction "Detail",
                editAction "Edit",
                customAction "Export"
            }
        }
    }
    relations {
        one2many bidirectional {
            source "article"
            sourceAlias "article"
            target "image"
            targetAlias "images"
            sourceEditing EMBEDDED
            targetEditing NONE
            cascade ALL
            orderBy "currentVersion"
            indexBy "currentVersion"
            minTarget 1
            maxTarget 3
        },
        many2one unique {
            source "article"
            sourceAlias "myArticles"
            target "image"
            targetAlias "myImage"
            nullable false
            expandedSource true
            expandedTarget true
            useAutoCompletion BOTH_SIDES
            fetchType EAGER
            sourceEditing INLINE
        },
        many2many bidirectional {
            source "image"
            sourceAlias "images"
            target "location"
            targetAlias "locations"
            sourceEditing CHOOSE
            targetEditing INLINE
            refClass "imageLocation"
            orderBy "title"
            orderByReverse "currentVersion"
            indexBy "zipCode"
            minSource 1
            maxSource 3
            minTarget 1
            maxTarget 3
            inheritPermissions AFFIRMATIVE
        }
    }
    variables {
        varContainer "GeneralSettings" {
            documentation "My variable section"
            fields {
                user "myUser1" {
                    onAccountDeletion ADMIN
                },
                user "myUser2" {
                    onAccountDeletion GUEST
                },
                user "myUser3" {
                    onAccountDeletion DELETE
                },
                upload "myImage"
            }
        },
        varContainer "OtherSettings" {
            documentation "My variable section with {{ variable }}"
            sortOrder 3
            fields {
                user "myUser4" {
                    onAccountDeletion ADMIN
                },
                user "myUser5" {
                    onAccountDeletion GUEST
                },
                user "myUser6" {
                    onAccountDeletion DELETE
                },
                number "myNumber",
                datetime "myDate" {
                    components DATE
                },
                datetime "myStart" startDate,
                datetime "myEnd" endDate
            }
        }
    }
}
