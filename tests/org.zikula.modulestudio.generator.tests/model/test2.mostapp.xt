/**
 * Copyright (c) 2007-2018 Axel Guckelsberger
 */

/* XPECT_SETUP org.zikula.modulestudio.generator.tests.MostGeneratorTest END_SETUP */

/*
test which files are contained in the output
XPECT files ---
    .gitignore
    composer.json
    zikula.manifest.json
--- */

application "SimpleNews" targets ZK2DEV {
    documentation "Simple news extension"
    vendor "Guite"
    author "Axel Guckelsberger"
    email "info@guite.de"
    url "https://guite.de"
    version "0.0.5"
    license "My license"
    prefix "sinew"
    capabilities "foo, bar"
    isSystemModule false
    amountOfExampleRows 3
    generateAccountApi false
    generateSearchApi false
    generateMailzApi false
    generateListBlock false
    generateDetailBlock false
    generateModerationBlock false
    generateListContentType false
    generateDetailContentType false
    generateNewsletterPlugin false
    generateModerationPanel false
    generatePendingContentSupport false
    generateExternalControllerAndFinder false
    generateScribitePlugins false
    generateTagSupport false
    generateMultiHookNeedles false
    generatePdfSupport true
    authenticationMethod REMOTE
    filterHookProvider ENABLED
    generateOnlyBaseClasses false
    timestampAllGeneratedFiles false
    versionAllGeneratedFiles false
    separateAdminTemplates true
    generatePoweredByBacklinksIntoFooterTemplates false
    generateTests false
    writeModelToDocs false
    generateTechnicalDocumentation false
    viewActionsPosition END
    viewActionsStyle DROPDOWN
    viewActionsWithIcons false
    displayActionsPosition NONE
    displayActionsStyle BUTTON_GROUP
    displayActionsWithIcons false
    skipFiles "foo, bar"
    markFiles "foo, bar"
    entities {
        entity "article" leading loggable categorisable {
            nameMultiple "articles"
            displayPattern "#title#"
            lockType OPTIMISTIC
            tree CLOSURE
            onAccountDeletionCreator GUEST
            onAccountDeletionLastEditor GUEST
            workflow ENTERPRISE
            fields {
                string "title" {
                    sluggablePosition 1
                    length 200
                },
                integer "currentVersion" version,
                datetime "myPast" past,
                datetime "myFuture" future
            }
            actions {
                mainAction "Index",
                viewAction "View" {
                    documentation "My view action"
                },
                displayAction "Display",
                editAction "Edit",
                deleteAction "Delete"
            }
        },
        entity "image" loggable geographical attributable {
            nameMultiple "images"
            displayPattern "#title#"
            changeTrackingPolicy DEFERRED_EXPLICIT
            lockType PAGELOCK_OPTIMISTIC
            onAccountDeletionCreator DELETE
            onAccountDeletionLastEditor DELETE
            fields {
                string "title" translatable {
                    sluggablePosition 1
                    length 200
                },
                string "zipCode" {
                    mandatory false
                },
                text "description",
                integer "currentVersion" unique version,
                upload "myImage",
                datetime "myStart" startDate,
                datetime "myEnd" endDate,
                datetime "myPast" past {
                    components TIME
                },
                datetime "myFuture" future {
                    components TIME
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit"
            }
        },
        entity "location" geographical {
            nameMultiple "locations"
            displayPattern "#title#"
            fields {
                string "title" {
                    displayType NONE
                },
                string "myPassword" {
                    displayType VIEW
                    role PASSWORD
                },
                string "zipCode" unique {
                    mandatory false
                    displayType DISPLAY
                },
                list "myList1" {
                    items {
                        listItem "My first item",
                        default listItem "My second item"
                    }
                },
                list "myList2" expanded {
                    items {
                        listItem "My first item",
                        default listItem "My second item"
                    }
                },
                list "myList3" multiple {
                    items {
                        listItem "My first item",
                        default listItem "My second item"
                    }
                },
                list "myList4" multiple expanded {
                    min 1
                    max 2
                    items {
                        default listItem "My first item",
                        default listItem "My second item"
                    }
                },
                datetime "myTime" immutable {
                    defaultValue "now"
                    components TIME
                },
                datetime "myStart" startDate {
                    components DATE
                },
                datetime "myEnd" endDate {
                    components DATE
                },
                datetime "myPast" past {
                    components DATE
                },
                datetime "myFuture" future {
                    components DATE
                },
                upload "myImage",
                user "myUser1" {
                    onAccountDeletionCreator ADMIN
                },
                user "myUser2" {
                    onAccountDeletionCreator GUEST
                },
                user "myUser3" {
                    onAccountDeletionCreator DELETE
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit",
                customAction "Export"
            }
        }
    }
    relations {
        one2many bidirectional {
            source "article"
            sourceAlias "article"
            target "image"
            targetAlias "images"
            sourceEditing EMBEDDED
            targetEditing NONE
            cascade ALL
            orderBy "currentVersion"
            indexBy "currentVersion"
            minTarget 1
            maxTarget 3
        },
        many2one unique {
            source "article"
            sourceAlias "myArticles"
            target "image"
            targetAlias "myImage"
            nullable false
            expandedSource true
            expandedTarget true
            useAutoCompletion BOTH_SIDES
            fetchType EAGER
            sourceEditing INLINE
        },
        many2many bidirectional {
            source "image"
            sourceAlias "images"
            target "location"
            targetAlias "locations"
            sourceEditing CHOOSE
            targetEditing INLINE
            refClass "imageLocation"
            orderBy "title"
            orderByReverse "currentVersion"
            indexBy "zipCode"
            minSource 1
            maxSource 3
            minTarget 1
            maxTarget 3
            inheritPermissions AFFIRMATIVE
        }
    }
    variables {
        varContainer "GeneralSettings" {
            documentation "My variable section"
            fields {
                user "myUser1" {
                    onAccountDeletionCreator ADMIN
                },
                user "myUser2" {
                    onAccountDeletionCreator GUEST
                },
                user "myUser3" {
                    onAccountDeletionCreator DELETE
                },
                upload "myImage"
            }
        },
        varContainer "OtherSettings" composite {
            documentation "My variable section with {{ variable }}"
            sortOrder 3
            fields {
                user "myUser4" {
                    onAccountDeletionCreator ADMIN
                },
                user "myUser5" {
                    onAccountDeletionCreator GUEST
                },
                user "myUser6" {
                    onAccountDeletionCreator DELETE
                },
                number "myNumber",
                datetime "myDate" {
                    components DATE
                },
                datetime "myStart" startDate,
                datetime "myEnd" endDate
            }
        }
    }
}
