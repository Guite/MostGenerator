/**
 * Copyright (c) 2007-2025 Axel Guckelsberger
 */

/* XPECT_SETUP org.zikula.modulestudio.generator.tests.MostGeneratorTest END_SETUP */

/*
test generating bundle class AcmeSimpleTestBundle.php
XPECT generated file AcmeSimpleTestBundle.php ---
-- AcmeSimpleTestBundle.php --
  <?php
  /\**
   * SimpleTest.
   *
   * @copyright Michael Smith (Acme)
   * @license MIT
   * @author Michael Smith <info@example.org>.
   *
   * @see http://example.org
   * @see https://ziku.la
   *
   * @version Generated by ModuleStudio (https://modulestudio.de).
   *
   * For the full copyright and license information, please view the LICENSE
   * file that was distributed with this source code.
   *\/   
  
  declare(strict_types=1);
  
  namespace Acme\SimpleTestBundle;
  
  use Acme\SimpleTestBundle\Base\AbstractAcmeSimpleTestBundle;
  
  /\**
   * Bundle implementation class.
   *\/
  class AcmeSimpleTestBundle extends AbstractAcmeSimpleTestBundle
  {
      // custom enhancements can go here
  }
  
-- / --
-- Base/AbstractAcmeSimpleTestBundle.php --
  <?php
  /\**
   * SimpleTest.
   *
   * @copyright Michael Smith (Acme)
   * @license MIT
   * @author Michael Smith <info@example.org>.
   *
   * @see http://example.org
   * @see https://ziku.la
   *
   * @version Generated by ModuleStudio (https://modulestudio.de).
   *
   * For the full copyright and license information, please view the LICENSE
   * file that was distributed with this source code.
   *\/
  
  declare(strict_types=1);
  
  namespace Acme\SimpleTestBundle\Base;
  
  use Acme\SimpleTestBundle\Bundle\MetaData\AcmeSimpleTestBundleMetaData;
  use Acme\SimpleTestBundle\EventListener\UserListener;
  use Acme\SimpleTestBundle\Helper\CollectionFilterHelper;
  use Acme\SimpleTestBundle\Helper\ControllerHelper;
  use Acme\SimpleTestBundle\Menu\ExtensionMenu;
  use Acme\SimpleTestBundle\Menu\MenuBuilder;
  use Symfony\Component\Config\Definition\Configurator\DefinitionConfigurator;
  use Symfony\Component\DependencyInjection\ContainerBuilder;
  use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;
  use Symfony\Component\HttpKernel\Bundle\AbstractBundle;
  use Zikula\CoreBundle\Bundle\MetaData\BundleMetaDataInterface;
  use Zikula\CoreBundle\Bundle\MetaData\MetaDataAwareBundleInterface;
  
  /\**
   * Bundle base class.
   *\/
  abstract class AbstractAcmeSimpleTestBundle extends AbstractBundle implements MetaDataAwareBundleInterface
  {
      public function getMetaData(): BundleMetaDataInterface
      {
          return $this->container->get(AcmeSimpleTestBundleMetaData::class);
      }
  
      public function configure(DefinitionConfigurator $definition): void
      {
          $definition->import('../config/definition.php');
      }
  
      public function loadExtension(array $config, ContainerConfigurator $container, ContainerBuilder $builder): void
      {
          $container->import('../config/services.yaml');
  
          // configure services
          $services = $container->services();
  
          $services->get(CollectionFilterHelper::class)
              ->arg('$listViewConfig', $config['list_views']);
          $services->get(ControllerHelper::class)
              ->arg('$listViewConfig', $config['list_views']);
          $services->get(ExtensionMenu::class)
              ->arg('$listViewConfig', $config['list_views']);
          $services->get(MenuBuilder::class)
              ->arg('$listViewConfig', $config['list_views']);
      }
  }
  
-- / --
---

*/

application "SimpleTest" {
    documentation "Just a simple test application."
    vendor "Acme"
    author "Michael Smith"
    email "info@example.org"
    url "http://example.org"
    entities {
        entity "article" leading {
            nameMultiple "articles"
            displayPattern "#title#"
            fields {
                string "title" {
                    sluggablePosition 1
                    length 200
                }
            }
            actions {
                indexAction "Index"
            }
        },
        entity "image" {
            nameMultiple "images"
            displayPattern "#title#"
            fields {
                string "title" {
                    sluggablePosition 1
                    length 200
                }
            }
            actions {
                indexAction "Index"
            }
        }
    }
}
