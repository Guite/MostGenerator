«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«DEFINE JoinMethods(Application app) FOR Entity-»

    /**
     * Helper method to add join selections.
     *
     * @return String Enhancement for select clause.
     */
    protected function addJoinsToSelection()
    {
        $selection = '«EXPAND AddJoin(false, 'select') FOREACH incoming.typeSelect(JoinRelationship).select(e|e.bidirectional)-»«EXPAND AddJoin(true, 'select') FOREACH outgoing.typeSelect(JoinRelationship)-»';
        return $selection;
    }

    /**
     * Helper method to add joins to from clause.
     *
     * @param Doctrine\ORM\QueryBuilder $qb query builder instance used to create the query.
     *
     * @return String Enhancement for from clause.
     */
    protected function addJoinsToFrom(QueryBuilder $qb)
    {
«EXPAND AddJoin(false, 'from') FOREACH incoming.typeSelect(JoinRelationship).select(e|e.bidirectional)-»
«EXPAND AddJoin(true, 'from') FOREACH outgoing.typeSelect(JoinRelationship)-»
        return $qb;
    }
«ENDDEFINE»

«DEFINE AddJoin(Boolean incoming, String target) FOR JoinRelationship-»
«LET getRelationAliasName(incoming).formatForCodeCapital().toFirstUpper() AS relationAliasName-»
«IF target == 'select'-»
, tbl«relationAliasName»«""-»
«ELSEIF target == 'from'-»
        $qb->leftJoin('tbl.«relationAliasName.toFirstLower()»', 'tbl«relationAliasName»');
«ENDIF-»
«ENDLET-»
«ENDDEFINE»
