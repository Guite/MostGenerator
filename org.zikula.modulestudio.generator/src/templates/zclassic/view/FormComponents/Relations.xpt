«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»
Entry point for form sections treating related objects.
Note many-to-many is handled in a separate define further down.
If onlyInclude is true then only the Smarty include is created, otherwise the included file.
«ENDREM»
«DEFINE Root(Application app, Controller controller, Boolean onlyInclude, Boolean incoming) FOR JoinRelationship-»
«LET getEditStageCode(incoming) AS stageCode-»
«REM»Look if we have to do anything by checking stage codes which represent different edit behaviors«ENDREM»«""-»
«IF (!incoming && stageCode == 2) || (incoming && (stageCode == 1 || stageCode == 3))-»
«IF !incoming-»
«REM»Exclude parent view for 1:1 and 1:n for now - see https://github.com/Guite/MostGenerator/issues/10«ENDREM»«""-»
«REM»«EXPAND ActiveParentImpl(app, controller, onlyInclude)-»«ENDREM»«""-»
«ELSE-»«EXPAND PassiveChildImpl(app, controller, onlyInclude, stageCode)-»
«ENDIF-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«REM»Parent/active/source view for 1:1 and 1:n«ENDREM»
«DEFINE ActiveParentImpl(Application app, Controller controller, Boolean onlyInclude) FOR JoinRelationship-»
«IF onlyInclude-»
«LET getRelationAliasName(true).formatForCodeCapital() AS relationAliasName-»
«LET getUniqueRelationNameForJs(app, target, (this.metaType == OneToManyRelationship || this.metaType == ManyToManyRelationship), true, relationAliasName) AS uniqueNameForJs-»
    {include file='«controller.name.formatForDB()»/«target.name.formatForCode()»/include_createChildItem«getTargetMultiplicity()».tpl' aliasName='«relationAliasName.toFirstLower()»' idPrefix='«uniqueNameForJs-»'}
«ENDLET-»
«ENDLET-»
«ELSE-»
«info("Generating " + controller.name.formatForDB() + " edit inclusion templates for entity \"" + target.name.formatForDisplay() + "\"") -> ""-»
«FILE templateFile(controller, target.name, 'include_createChildItem'.msconcat(getTargetMultiplicity()))-»
{* purpose of this template: inclusion template for managing related «target.getEntityNameSingularPlural(this.metaType != OneToOneRelationship).formatForDisplayCapital()» in «controller.name.formatForDB()» area *}
<fieldset>
    <legend>{gt text='«target.getEntityNameSingularPlural(this.metaType != OneToOneRelationship).formatForDisplayCapital()»'}</legend>
    <div class="z-formrow">
«EXPAND Component_ParentEditing(app, controller, target, (this.metaType != OneToOneRelationship))-»
    </div>
</fieldset>
«ENDFILE-»
«ENDIF-»
«ENDDEFINE»

«REM»Child/passive/target view for 1:1 and 1:n«ENDREM»
«DEFINE PassiveChildImpl(Application app, Controller controller, Boolean onlyInclude, Integer stageCode) FOR JoinRelationship-»
«IF onlyInclude-»
«LET getRelationAliasName(false).formatForCodeCapital() AS relationAliasName-»
«LET getUniqueRelationNameForJs(app, source, (this.metaType == ManyToOneRelationship || this.metaType == ManyToManyRelationship), false, relationAliasName) AS uniqueNameForJs-»
    {include file='«controller.name.formatForDB()»/«source.name.formatForCode()»/include_select«((stageCode == 3) ? 'Edit' : '')»One.tpl' relItem=$«target.name.formatForDB()» aliasName='«relationAliasName.toFirstLower()»' idPrefix='«uniqueNameForJs-»'}
«ENDLET-»
«ENDLET-»
«ELSE-»
«info("Generating " + controller.name.formatForDB() + " edit inclusion templates for entity \"" + source.name.formatForDisplay() + "\"") -> ""-»
«FILE templateFile(controller, source.name, 'include_select'.msconcat((stageCode == 3) ? 'Edit' : '').msconcat('One'))-»
{* purpose of this template: inclusion template for managing related «source.getEntityNameSingularPlural(this.metaType != OneToOneRelationship).formatForDisplayCapital()» in «controller.name()» area *}
<fieldset>
    <legend>{gt text='«source.name.formatForDisplayCapital()»'}</legend>
    <div class="z-formrow">
«EXPAND Component_AutoComplete(app, controller, source, false, true, (stageCode == 3))-»
    </div>
</fieldset>
«ENDFILE-»

«FILE templateFile(controller, source.name, 'include_select'.msconcat((stageCode == 3) ? 'Edit' : '').msconcat('ItemListOne'))-»
«EXPAND Component_ItemList(app, controller, source, false, true, (stageCode == 3))-»
«ENDFILE-»
«ENDIF-»
«ENDDEFINE»

«DEFINE Root(Application app, Controller controller, Boolean onlyInclude, Boolean incoming) FOR ManyToManyRelationship-»
«LET getEditStageCode(incoming) AS stageCode-»
«IF stageCode == 1 || stageCode == 3-»
«IF onlyInclude-»
«LET getRelationAliasName(!incoming).formatForCodeCapital() AS relationAliasName-»
«LET (this.metaType == ManyToManyRelationship
 || (incoming && this.metaType == ManyToOneRelationship)
 || (!incoming && this.metaType == OneToManyRelationship)) AS many-»
«LET getUniqueRelationNameForJs(app, source, many, incoming, relationAliasName) AS uniqueNameForJs-»
    {include file='«controller.name.formatForDB()»/«((incoming) ? source : target).name.formatForCode()»/include_select«((stageCode == 3) ? 'Edit' : '')»Many.tpl' relItem=$«((incoming) ? target : source).name.formatForDB()» aliasName='«relationAliasName.toFirstLower()»' idPrefix='«uniqueNameForJs-»'}
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ELSE-»
«info("Generating " + controller.name.formatForDB() + " edit inclusion templates for entity \"" + ((incoming) ? source.name.formatForDisplay() : target.name.formatForDisplay()) + "\"") -> ""-»
«FILE templateFile(controller, ((incoming) ? source.name : target.name), 'include_select'.msconcat((stageCode == 3) ? 'Edit' : '').msconcat('Many'))-»
{* purpose of this template: inclusion template for managing related «((incoming) ? source : target).nameMultiple.formatForDisplayCapital()» in «controller.name.formatForDB()» area *}
<fieldset>
    <legend>{gt text='«((incoming) ? source : target).nameMultiple.formatForDisplayCapital()»'}</legend>
    <div class="z-formrow">
«IF !incoming-»«EXPAND ManyToManyHandling(app, controller, source, target, false, stageCode)-»
«ELSE-»«EXPAND ManyToManyHandling(app, controller, target, source, true, stageCode)-»
«ENDIF-»
    </div>
</fieldset>
«ENDFILE-»

«FILE templateFile(controller, ((incoming) ? source.name : target.name), 'include_select'.msconcat((stageCode == 3) ? 'Edit' : '').msconcat('ItemListMany'))-»
«EXPAND Component_ItemList(app, controller, ((incoming) ? source : target), true, incoming, (stageCode == 3))-»
«ENDFILE-»
«ENDIF-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE ManyToManyHandling(Application app, Controller controller, Entity source, Entity target, Boolean incoming, Integer stageCode) FOR ManyToManyRelationship-»
«EXPAND Component_AutoComplete(app, controller, target, true, incoming, (stageCode == 3))-»
«ENDDEFINE»

«DEFINE Component_AutoComplete(Application app, Controller controller, Entity targetEntity, Boolean many, Boolean incoming, Boolean includeEditing) FOR JoinRelationship-»
    <div class="«app.prefix()»RelationRightSide">
        <a id="{$idPrefix}AddLink" href="javascript:void(0);" style="display: none">{gt text='«IF !many-»Select«ELSE»Add«ENDIF» «targetEntity.name.formatForDisplay()»'}</a>
        <div id="{$idPrefix}AddFields">
            <label for="{$idPrefix}Selector">{gt text='Find «targetEntity.name.formatForDisplay()»'}</label>
            <br />
            {icon type='search' size='extrasmall' __alt='Search «targetEntity.name.formatForDisplay()»'}
            <input type="text" name="{$idPrefix}Selector" id="{$idPrefix}Selector" value="" />
            <input type="hidden" name="{$idPrefix}Scope" id="{$idPrefix}Scope" value="«IF !many»0«ELSE»1«ENDIF»" />
            {img src='indicator_circle.gif' modname='core' set='ajax' alt='' id="`$idPrefix`Indicator" style='display: none'}
            <div id="{$idPrefix}SelectorChoices" class="«app.prefix()»AutoComplete«IF targetEntity.hasImageFields()»WithImage«ENDIF»"></div>
            <input type="button" id="{$idPrefix}SelectorDoCancel" name="{$idPrefix}SelectorDoCancel" value="{gt text='Cancel'}" class="z-button «app.prefix()»InlineButton" />
«IF includeEditing-»
            <a id="{$idPrefix}SelectorDoNew" href="{modurl modname='«app.appName()»' type='«controller.name()»' func='edit' ot='«targetEntity.name.formatForCode()»'}" title="{gt text='Create new «targetEntity.name.formatForDisplay()»'}" class="z-button «app.prefix()»InlineButton">{gt text='Create'}</a>
«ENDIF-»
        </div>
        <noscript><p>{gt text='This function requires JavaScript activated!'}</p></noscript>
    </div>
    <div class="«app.prefix()»RelationLeftSide">
        {if isset($userSelection.$aliasName) && $userSelection.$aliasName ne ''}
            {* the user has submitted something *}
            {include file='«controller.name.formatForDB()»/«targetEntity.name.formatForCode()»/include_select«IF includeEditing»Edit«ENDIF»ItemList«IF !many»One«ELSE»Many«ENDIF».tpl' item«IF many»s«ENDIF»=$userSelection.$aliasName}
        {elseif $mode ne 'create' || isset($relItem.$aliasName)}
            {include file='«controller.name.formatForDB()»/«targetEntity.name.formatForCode()»/include_select«IF includeEditing»Edit«ENDIF»ItemList«IF !many»One«ELSE»Many«ENDIF».tpl' item«IF many»s«ENDIF»=$relItem.$aliasName}
        {else}
            {include file='«controller.name.formatForDB()»/«targetEntity.name.formatForCode()»/include_select«IF includeEditing»Edit«ENDIF»ItemList«IF !many»One«ELSE»Many«ENDIF».tpl'}
        {/if}
    </div>
    <br style="clear: both" />
«ENDDEFINE»

«DEFINE Component_ItemList(Application app, Controller controller, Entity targetEntity, Boolean many, Boolean incoming, Boolean includeEditing) FOR JoinRelationship-»
{* purpose of this template: inclusion template for display of related «targetEntity.getEntityNameSingularPlural(many).formatForDisplayCapital()» in «controller.name.formatForDB()» area *}
«IF includeEditing-»
{icon type='edit' size='extrasmall' assign='editImageArray'}
{assign var="editImage" value="<img src=\"`$editImageArray.src`\" width=\"16\" height=\"16\" alt=\"\" />"}
«ENDIF-»
{icon type='delete' size='extrasmall' assign='removeImageArray'}
{assign var="removeImage" value="<img src=\"`$removeImageArray.src`\" width=\"16\" height=\"16\" alt=\"\" />"}

<input type="hidden" id="{$idPrefix}ItemList" name="{$idPrefix}ItemList" value="{if isset($item«IF many-»s«ENDIF») && (is_array($item«IF many-»s«ENDIF») || is_object($item«IF many-»s«ENDIF»))«IF !many-»«FOREACH targetEntity.getPrimaryKeyFields() AS pkField-» && isset($item.«pkField.name.formatForCode()»)«ENDFOREACH-»«ENDIF-»}«IF many-»{foreach name='relLoop' item='item' from=$items}«ENDIF-»«FOREACH targetEntity.getPrimaryKeyFields() AS pkField SEPARATOR '_'-»{$item.«pkField.name.formatForCode()»}«ENDFOREACH-»«IF many-»{if $smarty.foreach.relLoop.last ne true},{/if}{/foreach}«ENDIF-»{/if}" />
<input type="hidden" id="{$idPrefix}Mode" name="{$idPrefix}Mode" value="«IF includeEditing-»1«ELSE»0«ENDIF»" />

<ul id="{$idPrefix}ReferenceList">
{if isset($item«IF many-»s«ENDIF-») && (is_array($item«IF many-»s«ENDIF») || is_object($item«IF many-»s«ENDIF»))«IF !many-»«FOREACH targetEntity.getPrimaryKeyFields() AS pkField-» && isset($item.«pkField.name.formatForCode()»)«ENDFOREACH-»«ENDIF-»}
«IF many-»
{foreach name='relLoop' item='item' from=$items}
«ENDIF-»
{assign var='idPrefixItem' value="`$idPrefix`Reference_«FOREACH targetEntity.getPrimaryKeyFields() AS pkField SEPARATOR '_'-»`$item.«pkField.name.formatForCode()»`«ENDFOREACH-»"}
    <li id="{$idPrefixItem}">
«LET targetEntity.getLeadingField() AS leadingField-»
«IF leadingField != null-»
    {$item.«leadingField.name.formatForCode()»}
«ELSE-»
    {gt text='«targetEntity.name.formatForDisplayCapital()»'}
«ENDIF-»
«ENDLET-»
«IF includeEditing-»
 <a id="{$idPrefixItem}Edit" href="{modurl modname='«app.appName()»' type='«controller.name()»' «targetEntity.modUrlEdit('item', true)»}">{$editImage}</a>
«ENDIF-»
 <a id="{$idPrefixItem}Remove" href="javascript:«app.prefix()»RemoveRelatedItem('{$idPrefix}', '«FOREACH targetEntity.getPrimaryKeyFields() AS pkField SEPARATOR '_'-»{$item.«pkField.name.formatForCode()»}«ENDFOREACH-»');">{$removeImage}</a>
«IF targetEntity.hasImageFields()-»
<br />
«LET targetEntity.getImageFields().get(0).name.formatForCode() AS imageFieldName-»
{if $item.«imageFieldName» ne '' && isset($item.«imageFieldName»FullPathURL)}
«LET targetEntity.getLeadingField() AS leadingField-»
«IF leadingField != null-»
    <img src="{$item.«imageFieldName»FullPathUrl|«app.appName().formatForDB()»ImageThumb:$item.«imageFieldName»FullPathUrl:50:40}" width="50" height="40" alt="{$item.«leadingField.name.formatForCode()»|replace:"\"":""}" />
«ELSE-»
    <img src="{$item.«imageFieldName»FullPathUrl|«app.appName().formatForDB()»ImageThumb:$item.«imageFieldName»FullPathUrl:50:40}" width="50" height="40" alt="{gt text='«targetEntity.name.formatForDisplayCapital()»|replace:"\"":""}" />
«ENDIF-»
«ENDLET-»
{/if}
«ENDLET-»
«ENDIF-»
    </li>
«IF many-»
{/foreach}
«ENDIF-»
{/if}
</ul>
«ENDDEFINE»

«DEFINE Component_ParentEditing(Application app, Controller controller, Entity targetEntity, Boolean many) FOR JoinRelationship-»
«REM»just a reminder for the parent view which is not tested yet (see #10)
Example: create children (e.g. an address) while creating a parent (e.g. a new customer).
Problem: address must know the customerid.
TODO: only for $mode ne create: 
    <p>TODO ADD: button to create «targetEntity.getEntityNameSingularPlural(many).formatForDisplay()» with inline editing (form dialog)</p>
    <p>TODO EDIT: display of related «targetEntity.getEntityNameSingularPlural(many).formatForDisplay()» with inline editing (form dialog)</p>
«ENDREM»«""-»
«ENDDEFINE»

«DEFINE InitJs(Application app, Entity targetEntity, Boolean incoming, Boolean insideLoader) FOR JoinRelationship-»
«LET getEditStageCode(incoming) AS stageCode-»
«REM»Look if we have to do anything by checking stage codes which represent different edit behaviors«ENDREM»«""-»
«IF (!incoming && stageCode == 2) || ((incoming || this.metaType == ManyToManyRelationship) && (stageCode == 1 || stageCode == 3))-»
«REM»Exclude parent view for 1:1 and 1:n for now - see https://github.com/Guite/MostGenerator/issues/10«ENDREM»«""-»
«IF !(this.metaType != ManyToManyRelationship && !incoming)-»
«LET getRelationAliasName(!incoming).formatForCodeCapital() AS relationAliasName-»
«LET getUniqueRelationNameForJs(app, ((targetEntity == target || this.metaType == ManyToManyRelationship) ? source : target), (!(incoming && this.metaType != ManyToManyRelationship)), incoming, relationAliasName) AS uniqueNameForJs-»
«IF !insideLoader-»
    var newItem = new Object();
    newItem['ot'] = '«((targetEntity == target) ? source : target).name.formatForCode()»';
    newItem['alias'] = '«relationAliasName.formatForCodeCapital()»';
    newItem['prefix'] = '«uniqueNameForJs»SelectorDoNew';
    newItem['acInstance'] = null;
    newItem['windowInstance'] = null;
    relationHandler.push(newItem);
«ELSE-»
        «app.prefix()»InitRelationItemsForm('«((targetEntity == target) ? source : target).name.formatForCode()»', '«uniqueNameForJs»', «IF stageCode > 1»true«ELSE»false«ENDIF»);
«ENDIF-»
«ENDLET-»
«ENDLET-»
«ENDIF-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»




