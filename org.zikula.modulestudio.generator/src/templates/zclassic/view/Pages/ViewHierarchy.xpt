«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«DEFINE Impl(String appName, Controller controller) FOR Entity»
«info("Generating " + controller.name() + " tree view templates for entity \"" + name.formatForDisplay() + "\"") -> ""-»
«LET name.formatForCode() AS objName-»
«LET container.application.prefix() AS appPrefix-»
«FILE templateFile(controller, name, 'view_tree')-»
{* purpose of this template: «nameMultiple.formatForDisplay()» tree view in «controller.name()» area *}
{include file='«controller.name()»/header.tpl'}
<div class="«appName.toLowerCase()»-«name.formatForDB()» «appName.toLowerCase()»-viewhierarchy">
{gt text='«name.formatForDisplayCapital()» hierarchy' assign='templateTitle'}
{pagesetvar name='title' value=$templateTitle}
«IF controller.metaType == AdminController-»
<div class="z-admin-content-pagetitle">
    {icon type='view' size='small' alt=$templateTitle}
    <h3>{$templateTitle}</h3>
</div>
«ELSE-»
<div class="z-frontendcontainer">
    <h2>{$templateTitle}</h2>
«ENDIF-»

«IF documentation != null && documentation != ""-»
    <p class="sectiondesc">«documentation»</p>
«ENDIF-»

<p>
«IF controller.hasActions('edit')-»
    {checkpermissionblock component='«appName»::' instance='.*' level="ACCESS_ADD"}
        {gt text='Add root node' assign='addRootTitle'}
        <a id="z-tree-addroot" href="javascript:void(0)" title="{$addRootTitle}" style="display: none" class="z-icon-es-add">{$addRootTitle}</a>
    {*
        {gt text='Create «name.formatForDisplay()»' assign='createTitle'}
        <a href="{modurl modname='«appName»' type='«controller.name()»' func='edit' ot='«objName»'}" title="{$createTitle}" class="z-icon-es-add">
            {$createTitle}
        </a>
    *}
    {/checkpermissionblock}
«ENDIF»
        {gt text='Switch to table view' assign='switchTitle'}
        <a href="{modurl modname='«appName»' type='«controller.name()»' func='view' ot='«objName»'}" title="{$switchTitle}" class="z-icon-es-view">
            {$switchTitle}
        </a>
</p>

    {foreach key='rootId' item='treeNodes' from=$trees}
        {include file='«controller.name()»/«name.formatForDB()»/view_tree_items.tpl' rootId=$rootId items=$treeNodes}
    {foreachelse}
        {include file='«controller.name()»/«name.formatForDB()»/view_tree_items.tpl' rootId=1 items=null}
    {/foreach}

<br style="clear: left" />

«IF controller.metaType == AdminController-»
«ELSE-»
</div>
«ENDIF-»
</div>
{include file='«controller.name()»/footer.tpl'}
«ENDFILE»

«FILE templateFile(controller, name, 'view_tree_items')-»
{* purpose of this template: «nameMultiple.formatForDisplay()» tree items in «controller.name()» area *}
{assign var='hasNodes' value=false}
{if isset($items) && (is_object($items) && $items->count() gt 0) || (is_array($items) && count($items) gt 0)}
    {assign var='hasNodes' value=true}
{/if}

{* initialise additional gettext domain for translations within javascript *}
{pageaddvar name='jsgettext' value='module_«appName.formatForDB()»_js:News'}

<div id="«name.formatForDB()»_tree{$rootId}" class="z-treecontainer">
    <div id="treeitems{$rootId}" class="z-treeitems">
    {if $hasNodes}
        {«appName.formatForDB()»TreeJS objectType='«name.formatForCode()»' tree=$items controller='«controller.name()»' root=$rootId sortable=true}
    {/if}
    </div>
</div>

{pageaddvar name='javascript' value='modules/«appName»/javascript/«appName»_tree.js'}
<script type="text/javascript" charset="utf-8">
/* <![CDATA[ */
    document.observe('dom:loaded', function() {
        «appPrefix»InitTreeView('«name.formatForCode()»', {{if $hasNodes}}true{{else}}false{{/if}}, true);
    {{if $hasNodes}}
        «appPrefix»InitTreeNodes('«name.formatForCode()»', '«controller.name()»', '{{$rootId}}', «readOnly.displayBool()»);
        Zikula.TreeSortable.trees.itemtree{{$rootId}}.config.onSave = «appPrefix»TreeSave;
    {{/if}}
    });
/* ]]> */
</script>
<noscript><p>{gt text='This function requires JavaScript activated!'}</p></noscript>
«ENDFILE»
«ENDLET-»
«ENDLET-»
«ENDDEFINE»

