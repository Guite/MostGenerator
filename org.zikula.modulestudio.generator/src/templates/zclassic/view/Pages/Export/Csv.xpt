«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«DEFINE Root(String appName, Controller controller) FOR Entity»
«info("Generating " + controller.name() + " csv view templates for entity \"" + name.formatForDisplay() + "\"") -> ""-»
«LET name.formatForCode() AS objName-»
«FILE templateFileWithExtension(controller, name, 'view', 'csv')-»
{* purpose of this template: «nameMultiple.formatForDisplay()» view csv view in «controller.name()» area *}
{«appName.formatForDB()»TemplateHeaders contentType='text/comma-separated-values; charset=iso-8859-15' asAttachment=true filename='«nameMultiple.formatForCodeCapital()».csv'}
«EXPAND HeaderLine FOREACH getDerivedFields().reject(e|e.primaryKey) SEPARATOR ";"-»«IF geographical-»«FOREACH {'latitude', 'longitude'} AS geoFieldName-»;"«geoFieldName.toFirstUpper()»"«ENDFOREACH-»«ENDIF-»
«EXPAND HeaderLineRelation(false) FOREACH incoming.typeSelect(OneToManyRelationship).select(e|e.bidirectional)-»
«EXPAND HeaderLineRelation(true) FOREACH outgoing.typeSelect(OneToOneRelationship)-»
{foreach item='«objName»' from=$items}
«EXPAND DisplayEntry(controller) FOREACH getDerivedFields().reject(e|e.primaryKey) SEPARATOR ";"-»«IF geographical-»«FOREACH {'latitude', 'longitude'} AS geoFieldName-»;"{$«name.formatForCode()».«geoFieldName»|formatnumber:7}"«ENDFOREACH-»«ENDIF-»
«EXPAND DisplayEntry(controller, false) FOREACH incoming.typeSelect(OneToManyRelationship).select(e|e.bidirectional)-»
«EXPAND DisplayEntry(controller, true) FOREACH outgoing.typeSelect(OneToOneRelationship)-»
{/foreach}

«ENDFILE»
«ENDLET-»
«ENDDEFINE»

«DEFINE HeaderLine FOR EntityField-»
«error("Error: undefined entity field type " + metaType.toString() + " (code 9242647)") -> ""-»
«ENDDEFINE»

«DEFINE HeaderLine FOR DerivedField-»
"{gt text='«name.formatForDisplayCapital()»'}"«""-»
«ENDDEFINE»

«DEFINE HeaderLine FOR CalculatedField-»
«error("Error: undefined calculated field type " + metaType.toString() + " (code 9242648)") -> ""-»
«ENDDEFINE»

«DEFINE HeaderLineRelation(Boolean useTarget) FOR JoinRelationship-»
"{gt text='«getRelationAliasName(useTarget).formatForDisplayCapital()»'}"
«ENDDEFINE»

«DEFINE DisplayEntry(Controller controller) FOR EntityField-»
«error("Error: undefined entity field type " + metaType.toString() + " (code 9242657)") -> ""-»
«ENDDEFINE»

«DEFINE DisplayEntry(Controller controller) FOR DerivedField-»
"«EXPAND templates::zclassic::view::PageComponents::SimpleFields::DisplayField(entity.name.formatForCode(), 'viewcsv', '')»"«""-»
«ENDDEFINE»

«DEFINE DisplayEntry(Controller controller) FOR CalculatedField-»
«error("Error: undefined calculated field type " + metaType.toString() + " (code 9242658)") -> ""-»
«ENDDEFINE»

«DEFINE DisplayEntry(Controller controller, Boolean useTarget) FOR JoinRelationship-»
«LET getRelationAliasName(useTarget).formatForCodeCapital() AS relationAliasName-»
«LET ((!useTarget) ? target : source) AS mainEntity-»
«LET ((useTarget) ? target : source) AS linkEntity-»
«LET mainEntity.name.formatForCode().msconcat('.').msconcat(relationAliasName) AS relObjName-»
{if isset($«relObjName») && $«relObjName» ne null}{$«relObjName».«linkEntity.getLeadingField().name.formatForCode()»«REM»|nl2br«ENDREM»|default:""}{/if}«""-»
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ENDLET-»
«ENDDEFINE»

