package org.zikula.modulestudio.generator.cartridges.zclassic.smallstuff

import com.google.inject.Inject
import de.guite.modulestudio.metamodel.modulestudio.Application
import org.eclipse.xtext.generator.IFileSystemAccess
import org.zikula.modulestudio.generator.extensions.FormattingExtensions
import org.zikula.modulestudio.generator.extensions.NamingExtensions
import org.zikula.modulestudio.generator.extensions.Utils

class ComposerFile {
    @Inject extension FormattingExtensions = new FormattingExtensions()
    @Inject extension NamingExtensions = new NamingExtensions()
    @Inject extension Utils = new Utils()

    def generate(Application it, IFileSystemAccess fsa) {
        if (targets('1.3.5')) {
            return
        }
        fsa.generateFile(getAppSourcePath + 'composer.json', composerFile)
    }

    def private composerFile(Application it) '''
        {
            «composerContent»
        }
    '''

    def private composerContent(Application it) '''
        "name": "«vendor.formatForCode»/«appName»",
        "description": "«IF documentation != null && documentation != ''»«documentation.replaceAll("'", "\\'")»«ELSE»«appName» module generated by ModuleStudio «msVersion».«ENDIF»",
        "version": "«version»",
        "type": "zikula-module",
        "license": "«license»",
        "authors": [
            {
                "name": "«author»",
                "email": "«email»",
                "homepage": "«url»"
            }
        ],
        "require": {
        },
        "suggest": {
        }
    '''
}
