package org.zikula.modulestudio.generator.cartridges.zclassic.controller.javascript;

import com.google.inject.Inject;
import de.guite.modulestudio.metamodel.modulestudio.Application;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.Functions.Function0;
import org.eclipse.xtext.xbase.lib.InputOutput;
import org.zikula.modulestudio.generator.extensions.FormattingExtensions;
import org.zikula.modulestudio.generator.extensions.NamingExtensions;
import org.zikula.modulestudio.generator.extensions.Utils;

@SuppressWarnings("all")
public class Finder {
  @Inject
  @Extension
  private FormattingExtensions _formattingExtensions = new Function0<FormattingExtensions>() {
    public FormattingExtensions apply() {
      FormattingExtensions _formattingExtensions = new FormattingExtensions();
      return _formattingExtensions;
    }
  }.apply();
  
  @Inject
  @Extension
  private NamingExtensions _namingExtensions = new Function0<NamingExtensions>() {
    public NamingExtensions apply() {
      NamingExtensions _namingExtensions = new NamingExtensions();
      return _namingExtensions;
    }
  }.apply();
  
  @Inject
  @Extension
  private Utils _utils = new Function0<Utils>() {
    public Utils apply() {
      Utils _utils = new Utils();
      return _utils;
    }
  }.apply();
  
  /**
   * Entry point for the javascript file with validation functionality.
   */
  public void generate(final Application it, final IFileSystemAccess fsa) {
    InputOutput.<String>println("Generating javascript for finder component");
    String _appJsPath = this._namingExtensions.getAppJsPath(it);
    String _appName = this._utils.appName(it);
    String _plus = (_appJsPath + _appName);
    String _plus_1 = (_plus + "_finder.js");
    CharSequence _generate = this.generate(it);
    fsa.generateFile(_plus_1, _generate);
  }
  
  private CharSequence generate(final Application it) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\'use strict\';");
    _builder.newLine();
    _builder.newLine();
    _builder.append("var current");
    String _appName = this._utils.appName(it);
    _builder.append(_appName, "");
    _builder.append("Editor = null;");
    _builder.newLineIfNotEmpty();
    _builder.append("var current");
    String _appName_1 = this._utils.appName(it);
    _builder.append(_appName_1, "");
    _builder.append("Input = null;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Returns the attributes used for the popup window. ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* @return {String}");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("function getPopupAttributes()");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var pWidth, pHeight;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("pWidth = screen.width * 0.75;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("pHeight = screen.height * 0.66;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("return \'width=\' + pWidth + \',height=\' + pHeight + \',scrollbars,resizable\';");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Open a popup window with the finder triggered by a Xinha button.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("function ");
    String _appName_2 = this._utils.appName(it);
    _builder.append(_appName_2, "");
    _builder.append("FinderXinha(editor, ");
    String _prefix = this._utils.prefix(it);
    _builder.append(_prefix, "");
    _builder.append("URL)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var popupAttributes;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Save editor for access in selector window");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("current");
    String _appName_3 = this._utils.appName(it);
    _builder.append(_appName_3, "    ");
    _builder.append("Editor = editor;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("popupAttributes = getPopupAttributes();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("window.open(");
    String _prefix_1 = this._utils.prefix(it);
    _builder.append(_prefix_1, "    ");
    _builder.append("URL, \'\', popupAttributes);");
    _builder.newLineIfNotEmpty();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("/**");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("* Open a popup window with the finder triggered by a CKEditor button.");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("*/");
    _builder.newLine();
    _builder.append("function ");
    String _appName_4 = this._utils.appName(it);
    _builder.append(_appName_4, "");
    _builder.append("FinderCKEditor(editor, ");
    String _prefix_2 = this._utils.prefix(it);
    _builder.append(_prefix_2, "");
    _builder.append("URL)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// Save editor for access in selector window");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("current");
    String _appName_5 = this._utils.appName(it);
    _builder.append(_appName_5, "    ");
    _builder.append("Editor = editor;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("editor.popup(");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("Zikula.Config.baseURL + Zikula.Config.entrypoint + \'?module=");
    String _appName_6 = this._utils.appName(it);
    _builder.append(_appName_6, "        ");
    _builder.append("&type=external&func=finder&editor=ckeditor\',");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("/*width*/ \'80%\', /*height*/ \'70%\',");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,resizable=yes,scrollbars=yes\'");
    _builder.newLine();
    _builder.append("    ");
    _builder.append(");");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("var ");
    String _name = it.getName();
    String _formatForDB = this._formattingExtensions.formatForDB(_name);
    _builder.append(_formatForDB, "");
    _builder.append(" = {};");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    String _name_1 = it.getName();
    String _formatForDB_1 = this._formattingExtensions.formatForDB(_name_1);
    _builder.append(_formatForDB_1, "");
    _builder.append(".finder = {};");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    String _name_2 = it.getName();
    String _formatForDB_2 = this._formattingExtensions.formatForDB(_name_2);
    _builder.append(_formatForDB_2, "");
    _builder.append(".finder.onLoad = function (baseId, selectedId)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$$(\'div.categoryselector select\').invoke(\'observe\', \'change\', ");
    String _name_3 = it.getName();
    String _formatForDB_3 = this._formattingExtensions.formatForDB(_name_3);
    _builder.append(_formatForDB_3, "    ");
    _builder.append(".finder.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_7 = this._utils.appName(it);
    _builder.append(_appName_7, "    ");
    _builder.append("_sort\').observe(\'change\', ");
    String _name_4 = it.getName();
    String _formatForDB_4 = this._formattingExtensions.formatForDB(_name_4);
    _builder.append(_formatForDB_4, "    ");
    _builder.append(".finder.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_8 = this._utils.appName(it);
    _builder.append(_appName_8, "    ");
    _builder.append("_sortdir\').observe(\'change\', ");
    String _name_5 = it.getName();
    String _formatForDB_5 = this._formattingExtensions.formatForDB(_name_5);
    _builder.append(_formatForDB_5, "    ");
    _builder.append(".finder.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_9 = this._utils.appName(it);
    _builder.append(_appName_9, "    ");
    _builder.append("_pagesize\').observe(\'change\', ");
    String _name_6 = it.getName();
    String _formatForDB_6 = this._formattingExtensions.formatForDB(_name_6);
    _builder.append(_formatForDB_6, "    ");
    _builder.append(".finder.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_10 = this._utils.appName(it);
    _builder.append(_appName_10, "    ");
    _builder.append("_gosearch\').observe(\'click\', ");
    String _name_7 = it.getName();
    String _formatForDB_7 = this._formattingExtensions.formatForDB(_name_7);
    _builder.append(_formatForDB_7, "    ");
    _builder.append(".finder.onParamChanged)");
    _builder.newLineIfNotEmpty();
    _builder.append("                           ");
    _builder.append(".observe(\'keypress\', ");
    String _name_8 = it.getName();
    String _formatForDB_8 = this._formattingExtensions.formatForDB(_name_8);
    _builder.append(_formatForDB_8, "                           ");
    _builder.append(".finder.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_11 = this._utils.appName(it);
    _builder.append(_appName_11, "    ");
    _builder.append("_submit\').addClassName(\'z-hide\');");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_12 = this._utils.appName(it);
    _builder.append(_appName_12, "    ");
    _builder.append("_cancel\').observe(\'click\', ");
    String _name_9 = it.getName();
    String _formatForDB_9 = this._formattingExtensions.formatForDB(_name_9);
    _builder.append(_formatForDB_9, "    ");
    _builder.append(".finder.handleCancel);");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    String _name_10 = it.getName();
    String _formatForDB_10 = this._formattingExtensions.formatForDB(_name_10);
    _builder.append(_formatForDB_10, "");
    _builder.append(".finder.onParamChanged = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$(\'selectorForm\').submit();");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    String _name_11 = it.getName();
    String _formatForDB_11 = this._formattingExtensions.formatForDB(_name_11);
    _builder.append(_formatForDB_11, "");
    _builder.append(".finder.handleCancel = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var editor, w;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("editor = $F(\'editorName\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (editor === \'xinha\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("w = parent.window;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("window.close();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("w.focus();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else if (editor === \'tinymce\') {");
    _builder.newLine();
    _builder.append("        ");
    String _prefix_3 = this._utils.prefix(it);
    _builder.append(_prefix_3, "        ");
    _builder.append("ClosePopup();");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("} else if (editor === \'ckeditor\') {");
    _builder.newLine();
    _builder.append("        ");
    String _prefix_4 = this._utils.prefix(it);
    _builder.append(_prefix_4, "        ");
    _builder.append("ClosePopup();");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("alert(\'Close Editor: \' + editor);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("function getPasteSnippet(mode, itemId)");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var itemUrl, itemTitle, itemDescription, pasteMode;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemUrl = $F(\'url\' + itemId);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemTitle = $F(\'title\' + itemId);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemDescription = $F(\'desc\' + itemId);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("pasteMode = $F(\'");
    String _appName_13 = this._utils.appName(it);
    _builder.append(_appName_13, "    ");
    _builder.append("_pasteas\');");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (pasteMode === \'2\' || pasteMode !== \'1\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return itemId;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// return link to item");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (mode === \'url\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// plugin mode");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return itemUrl;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// editor mode");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return \'<a href=\"\' + itemUrl + \'\" title=\"\' + itemDescription + \'\">\' + itemTitle + \'</a>\';");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("// User clicks on \"select item\" button");
    _builder.newLine();
    String _name_12 = it.getName();
    String _formatForDB_12 = this._formattingExtensions.formatForDB(_name_12);
    _builder.append(_formatForDB_12, "");
    _builder.append(".finder.selectItem = function (itemId)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var editor, html;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("editor = $F(\'editorName\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (editor === \'xinha\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (window.opener.current");
    String _appName_14 = this._utils.appName(it);
    _builder.append(_appName_14, "        ");
    _builder.append("Editor !== null) {");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("html = getPasteSnippet(\'html\', itemId);");
    _builder.newLine();
    _builder.newLine();
    _builder.append("            ");
    _builder.append("window.opener.current");
    String _appName_15 = this._utils.appName(it);
    _builder.append(_appName_15, "            ");
    _builder.append("Editor.focusEditor();");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("window.opener.current");
    String _appName_16 = this._utils.appName(it);
    _builder.append(_appName_16, "            ");
    _builder.append("Editor.insertHTML(html);");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("html = getPasteSnippet(\'url\', itemId);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("var currentInput = window.opener.current");
    String _appName_17 = this._utils.appName(it);
    _builder.append(_appName_17, "            ");
    _builder.append("Input;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (currentInput.tagName === \'INPUT\') {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("// Simply overwrite value of input elements");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("currentInput.value = html;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("} else if (currentInput.tagName === \'TEXTAREA\') {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("// Try to paste into textarea - technique depends on environment");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("if (typeof document.selection !== \'undefined\') {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("// IE: Move focus to textarea (which fortunately keeps its current selection) and overwrite selection");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("currentInput.focus();");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("window.opener.document.selection.createRange().text = html;");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("} else if (typeof currentInput.selectionStart !== \'undefined\') {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("// Firefox: Get start and end points of selection and create new value based on old value");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("var startPos = currentInput.selectionStart;");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("var endPos = currentInput.selectionEnd;");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("currentInput.value = currentInput.value.substring(0, startPos)");
    _builder.newLine();
    _builder.append("                                        ");
    _builder.append("+ html");
    _builder.newLine();
    _builder.append("                                        ");
    _builder.append("+ currentInput.value.substring(endPos, currentInput.value.length);");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("// Others: just append to the current value");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("currentInput.value += html;");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else if (editor === \'tinymce\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("html = getPasteSnippet(\'html\', itemId);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("window.opener.tinyMCE.activeEditor.execCommand(\'mceInsertContent\', false, html);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// other tinymce commands: mceImage, mceInsertLink, mceReplaceContent, see http://www.tinymce.com/wiki.php/Command_identifiers");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else if (editor === \'ckeditor\') {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("/** to be done*/");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("} else {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("alert(\'Insert into Editor: \' + editor);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    String _prefix_5 = this._utils.prefix(it);
    _builder.append(_prefix_5, "    ");
    _builder.append("ClosePopup();");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("function ");
    String _prefix_6 = this._utils.prefix(it);
    _builder.append(_prefix_6, "");
    _builder.append("ClosePopup()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("window.opener.focus();");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("window.close();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("//=============================================================================");
    _builder.newLine();
    _builder.append("// ");
    String _appName_18 = this._utils.appName(it);
    _builder.append(_appName_18, "");
    _builder.append(" item selector for Forms");
    _builder.newLineIfNotEmpty();
    _builder.append("//=============================================================================");
    _builder.newLine();
    _builder.newLine();
    String _name_13 = it.getName();
    String _formatForDB_13 = this._formattingExtensions.formatForDB(_name_13);
    _builder.append(_formatForDB_13, "");
    _builder.append(".itemSelector = {};");
    _builder.newLineIfNotEmpty();
    String _name_14 = it.getName();
    String _formatForDB_14 = this._formattingExtensions.formatForDB(_name_14);
    _builder.append(_formatForDB_14, "");
    _builder.append(".itemSelector.items = {};");
    _builder.newLineIfNotEmpty();
    String _name_15 = it.getName();
    String _formatForDB_15 = this._formattingExtensions.formatForDB(_name_15);
    _builder.append(_formatForDB_15, "");
    _builder.append(".itemSelector.baseId = 0;");
    _builder.newLineIfNotEmpty();
    String _name_16 = it.getName();
    String _formatForDB_16 = this._formattingExtensions.formatForDB(_name_16);
    _builder.append(_formatForDB_16, "");
    _builder.append(".itemSelector.selectedId = 0;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    String _name_17 = it.getName();
    String _formatForDB_17 = this._formattingExtensions.formatForDB(_name_17);
    _builder.append(_formatForDB_17, "");
    _builder.append(".itemSelector.onLoad = function (baseId, selectedId)");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    String _name_18 = it.getName();
    String _formatForDB_18 = this._formattingExtensions.formatForDB(_name_18);
    _builder.append(_formatForDB_18, "    ");
    _builder.append(".itemSelector.baseId = baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    String _name_19 = it.getName();
    String _formatForDB_19 = this._formattingExtensions.formatForDB(_name_19);
    _builder.append(_formatForDB_19, "    ");
    _builder.append(".itemSelector.selectedId = selectedId;");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("// required as a changed object type requires a new instance of the item selector plugin");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_19 = this._utils.appName(it);
    _builder.append(_appName_19, "    ");
    _builder.append("_objecttype\').observe(\'change\', ");
    String _name_20 = it.getName();
    String _formatForDB_20 = this._formattingExtensions.formatForDB(_name_20);
    _builder.append(_formatForDB_20, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if ($(baseId + \'_catidMain\') != undefined) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$(baseId + \'_catidMain\').observe(\'change\', ");
    String _name_21 = it.getName();
    String _formatForDB_21 = this._formattingExtensions.formatForDB(_name_21);
    _builder.append(_formatForDB_21, "        ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$(baseId + \'_id\').observe(\'change\', ");
    String _name_22 = it.getName();
    String _formatForDB_22 = this._formattingExtensions.formatForDB(_name_22);
    _builder.append(_formatForDB_22, "    ");
    _builder.append(".itemSelector.onItemChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(baseId + \'_sort\').observe(\'change\', ");
    String _name_23 = it.getName();
    String _formatForDB_23 = this._formattingExtensions.formatForDB(_name_23);
    _builder.append(_formatForDB_23, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(baseId + \'_sortdir\').observe(\'change\', ");
    String _name_24 = it.getName();
    String _formatForDB_24 = this._formattingExtensions.formatForDB(_name_24);
    _builder.append(_formatForDB_24, "    ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("$(\'");
    String _appName_20 = this._utils.appName(it);
    _builder.append(_appName_20, "    ");
    _builder.append("_gosearch\').observe(\'click\', ");
    String _name_25 = it.getName();
    String _formatForDB_25 = this._formattingExtensions.formatForDB(_name_25);
    _builder.append(_formatForDB_25, "    ");
    _builder.append(".itemSelector.onParamChanged)");
    _builder.newLineIfNotEmpty();
    _builder.append("                           ");
    _builder.append(".observe(\'keypress\', ");
    String _name_26 = it.getName();
    String _formatForDB_26 = this._formattingExtensions.formatForDB(_name_26);
    _builder.append(_formatForDB_26, "                           ");
    _builder.append(".itemSelector.onParamChanged);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    String _name_27 = it.getName();
    String _formatForDB_27 = this._formattingExtensions.formatForDB(_name_27);
    _builder.append(_formatForDB_27, "    ");
    _builder.append(".itemSelector.getItemList();");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    String _name_28 = it.getName();
    String _formatForDB_28 = this._formattingExtensions.formatForDB(_name_28);
    _builder.append(_formatForDB_28, "");
    _builder.append(".itemSelector.onParamChanged = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$(\'ajax_indicator\').removeClassName(\'z-hide\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    String _name_29 = it.getName();
    String _formatForDB_29 = this._formattingExtensions.formatForDB(_name_29);
    _builder.append(_formatForDB_29, "    ");
    _builder.append(".itemSelector.getItemList();");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    String _name_30 = it.getName();
    String _formatForDB_30 = this._formattingExtensions.formatForDB(_name_30);
    _builder.append(_formatForDB_30, "");
    _builder.append(".itemSelector.getItemList = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId, pars, request;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    String _name_31 = it.getName();
    String _formatForDB_31 = this._formattingExtensions.formatForDB(_name_31);
    _builder.append(_formatForDB_31, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("pars = \'ot=\' + baseId + \'&\';");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if ($(baseId + \'_catidMain\') != undefined) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("pars += \'catidMain=\' + $F(baseId + \'_catidMain\') + \'&\';");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("pars += \'sort=\' + $F(baseId + \'_sort\') + \'&\' +");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("\'sortdir=\' + $F(baseId + \'_sortdir\') + \'&\' +");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("\'searchterm=\' + $F(baseId + \'_searchterm\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("request = new Zikula.Ajax.Request(\'ajax.php?module=");
    String _appName_21 = this._utils.appName(it);
    _builder.append(_appName_21, "    ");
    {
      boolean _targets = this._utils.targets(it, "1.3.5");
      boolean _not = (!_targets);
      if (_not) {
        _builder.append("&type=ajax");
      }
    }
    _builder.append("&func=getItemListFinder\', {");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("method: \'post\',");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("parameters: pars,");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("onFailure: function(req) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("Zikula.showajaxerror(req.getMessage());");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("onSuccess: function(req) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("var baseId;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("baseId = ");
    String _name_32 = it.getName();
    String _formatForDB_32 = this._formattingExtensions.formatForDB(_name_32);
    _builder.append(_formatForDB_32, "            ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    String _name_33 = it.getName();
    String _formatForDB_33 = this._formattingExtensions.formatForDB(_name_33);
    _builder.append(_formatForDB_33, "            ");
    _builder.append(".itemSelector.items[baseId] = req.getData();");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("$(\'ajax_indicator\').addClassName(\'z-hide\');");
    _builder.newLine();
    _builder.append("            ");
    String _name_34 = it.getName();
    String _formatForDB_34 = this._formattingExtensions.formatForDB(_name_34);
    _builder.append(_formatForDB_34, "            ");
    _builder.append(".itemSelector.updateItemDropdownEntries();");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    String _name_35 = it.getName();
    String _formatForDB_35 = this._formattingExtensions.formatForDB(_name_35);
    _builder.append(_formatForDB_35, "            ");
    _builder.append(".itemSelector.updatePreview();");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("});");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    String _name_36 = it.getName();
    String _formatForDB_36 = this._formattingExtensions.formatForDB(_name_36);
    _builder.append(_formatForDB_36, "");
    _builder.append(".itemSelector.updateItemDropdownEntries = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId, itemSelector, items, i, item;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    String _name_37 = it.getName();
    String _formatForDB_37 = this._formattingExtensions.formatForDB(_name_37);
    _builder.append(_formatForDB_37, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("itemSelector = $(baseId + \'_id\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("itemSelector.length = 0;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("items = ");
    String _name_38 = it.getName();
    String _formatForDB_38 = this._formattingExtensions.formatForDB(_name_38);
    _builder.append(_formatForDB_38, "    ");
    _builder.append(".itemSelector.items[baseId];");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("for (i = 0; i < items.length; ++i) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("item = items[i];");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("itemSelector.options[i] = new Option(item.title, item.id, false);");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (");
    String _name_39 = it.getName();
    String _formatForDB_39 = this._formattingExtensions.formatForDB(_name_39);
    _builder.append(_formatForDB_39, "    ");
    _builder.append(".itemSelector.selectedId > 0) {");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("$(baseId + \'_id\').value = ");
    String _name_40 = it.getName();
    String _formatForDB_40 = this._formattingExtensions.formatForDB(_name_40);
    _builder.append(_formatForDB_40, "        ");
    _builder.append(".itemSelector.selectedId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    String _name_41 = it.getName();
    String _formatForDB_41 = this._formattingExtensions.formatForDB(_name_41);
    _builder.append(_formatForDB_41, "");
    _builder.append(".itemSelector.updatePreview = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId, items, selectedElement, i;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    String _name_42 = it.getName();
    String _formatForDB_42 = this._formattingExtensions.formatForDB(_name_42);
    _builder.append(_formatForDB_42, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("items = ");
    String _name_43 = it.getName();
    String _formatForDB_43 = this._formattingExtensions.formatForDB(_name_43);
    _builder.append(_formatForDB_43, "    ");
    _builder.append(".itemSelector.items[baseId];");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$(baseId + \'_previewcontainer\').addClassName(\'z-hide\');");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (items.length === 0) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("return;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("selectedElement = items[0];");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (");
    String _name_44 = it.getName();
    String _formatForDB_44 = this._formattingExtensions.formatForDB(_name_44);
    _builder.append(_formatForDB_44, "    ");
    _builder.append(".itemSelector.selectedId > 0) {");
    _builder.newLineIfNotEmpty();
    _builder.append("        ");
    _builder.append("for (var i = 0; i < items.length; ++i) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("if (items[i].id === ");
    String _name_45 = it.getName();
    String _formatForDB_45 = this._formattingExtensions.formatForDB(_name_45);
    _builder.append(_formatForDB_45, "            ");
    _builder.append(".itemSelector.selectedId) {");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("selectedElement = items[i];");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("break;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("if (selectedElement !== null) {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("$(baseId + \'_previewcontainer\').update(window.atob(selectedElement.previewInfo))");
    _builder.newLine();
    _builder.append("                                       ");
    _builder.append(".removeClassName(\'z-hide\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    String _name_46 = it.getName();
    String _formatForDB_46 = this._formattingExtensions.formatForDB(_name_46);
    _builder.append(_formatForDB_46, "");
    _builder.append(".itemSelector.onItemChanged = function ()");
    _builder.newLineIfNotEmpty();
    _builder.append("{");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("var baseId, itemSelector, preview;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("baseId = ");
    String _name_47 = it.getName();
    String _formatForDB_47 = this._formattingExtensions.formatForDB(_name_47);
    _builder.append(_formatForDB_47, "    ");
    _builder.append(".itemSelector.baseId;");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("itemSelector = $(baseId + \'_id\');");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("preview = window.atob(");
    String _name_48 = it.getName();
    String _formatForDB_48 = this._formattingExtensions.formatForDB(_name_48);
    _builder.append(_formatForDB_48, "    ");
    _builder.append(".itemSelector.items[baseId][itemSelector.selectedIndex].previewInfo);");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("$(baseId + \'_previewcontainer\').update(preview);");
    _builder.newLine();
    _builder.append("    ");
    String _name_49 = it.getName();
    String _formatForDB_49 = this._formattingExtensions.formatForDB(_name_49);
    _builder.append(_formatForDB_49, "    ");
    _builder.append(".itemSelector.selectedId = $F(baseId + \'_id\');");
    _builder.newLineIfNotEmpty();
    _builder.append("};");
    _builder.newLine();
    return _builder;
  }
}
