

«DEFINE loadObjectClass(String modName, Boolean appendArray) FOR Object-»
        // load the object «IF appendArray»array «ENDIF»class corresponding to $objectType
        $class = '«modName»_DBObject_' . ucfirst($objectType)«IF appendArray» . 'Array'«ENDIF»;
«ENDDEFINE»

«DEFINE instantiateObject(String initType, String idValue) FOR Object-»
        // instantiate object model«IF initType != ""» and get the object of the specified ID from «EXPAND ObjectDataSource(initType)»«ENDIF»
        $object = new $class(«IF initType != ""»«initType», $«idValue»«ENDIF»);
«ENDDEFINE»


«DEFINE getObjectFromSource(String initType, String idVar, String idValue) FOR Object-»
        // assign object data«IF initType != ""» fetched from «EXPAND ObjectDataSource(initType)-» during object instantiation«ENDIF»
«IF initType == ""-»
        // this performs a new database select operation
«ENDIF-»
        // while the result will be saved within the object, we assign it to a local variable for convenience
        $objectData = $object->get(«IF initType == ""»$«idVar», $«idValue»«ENDIF»);
«IF initType == ""-»
        if (!is_array($objectData) || !isset($objectData[$«idValue»]) || !is_numeric($objectData[$«idValue»])) {
            return LogUtil::registerError($this->__('No such item.'));
        }
«ENDIF-»
«ENDDEFINE»

«DEFINE ObjectDataSource(String s) FOR Object-»
«IF s == "DBObject::GET_FROM_DB" || s == "DBObjectArray::GET_FROM_DB"-»the database«""-»
«ELSEIF s == "DBObject::GET_FROM_GET" || s == "DBObjectArray::GET_FROM_GET"-»$_GET«""-»
«ELSEIF s == "DBObject::GET_FROM_POST" || s == "DBObjectArray::GET_FROM_POST"-»$_POST«""-»
«ELSEIF s == "DBObject::GET_FROM_REQUEST" || s == "DBObjectArray::GET_FROM_REQUEST"-»$_REQUEST«""-»
«ELSEIF s == "DBObject::GET_FROM_SESSION" || s == "DBObjectArray::GET_FROM_SESSION"-»$_SESSION«""-»
«ELSEIF s == "DBObject::GET_FROM_VALIDATION_FAILED" || s == "DBObjectArray::GET_FROM_VALIDATION_FAILED"-»failed validation«""-»
«ENDIF-»
«ENDDEFINE»


«DEFINE ControllerPostInitialize(Boolean caching) FOR Object-»
    /**
     * Post initialise.
     *
     * Run after construction.
     *
     * @return void
     */
    protected function postInitialize()
    {
        // Set caching to false by default.
        $this->view->setCaching(«IF caching-»true«ELSE-»false«ENDIF-»);
    }
«ENDDEFINE»

