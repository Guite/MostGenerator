«IMPORT modulestudio»
«EXTENSION extensions::Utils»

«DEFINE instantiateBusinessObject(String appName, Boolean isCollection, String context, String controller, String action) FOR Object-»
        // instantiate a new «IF isCollection»collection«ELSE»entity«ENDIF» corresponding to $objectType
        $object«IF isCollection»Collection«ENDIF» = «appName»_Factory::getBusiness«IF isCollection»Collection«ELSE»Entity«ENDIF»($objectType, '«context»'«IF !isCollection», false«ENDIF», array('controller' => '«controller»', 'action' => '«action»'));
«ENDDEFINE»

«DEFINE retrieveEntityFromModel(String idVar, String idValue, Boolean isHandler) FOR Object-»
        // assign object data fetched from the database
        // while the result will be saved within the object, we assign it to a local variable for convenience
        $objectData = $object->selectById($«idValue»);
        if (!is_array($objectData) || !isset($objectData[$«idVar»]) || !is_numeric($objectData[$«idVar»])) {
«IF isHandler-»
            return $view->registerError($this->__('No such item.'));
«REM»            $this->throwNotFound($this->__('No such item.'));        Form_Handler does not inherit from Zikula_Base (yet)«ENDREM»«""-»
«ELSE-»
            $this->throwNotFound($this->__('No such item.'));
«ENDIF-»
        }
«ENDDEFINE»


«DEFINE ControllerPostInitialize(Boolean caching) FOR Object-»
    /**
     * Post initialise.
     *
     * Run after construction.
     *
     * @return void
     */
    protected function postInitialize()
    {
        // Set caching to false by default.
        $this->view->setCaching(«caching.displayBool()»);
    }
«ENDDEFINE»

«DEFINE DefaultSorting FOR Object-»
        if (empty($sort) || !in_array($sort, $objectCollection->get_intAllowedSortingFields())) {
            $sort = $objectCollection->get_intDefaultSortingField();
        }
«ENDDEFINE»
