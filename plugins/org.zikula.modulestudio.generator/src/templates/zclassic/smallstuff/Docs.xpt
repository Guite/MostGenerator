«IMPORT modulestudio»
«IMPORT templates::zclassic::smallstuff»
«EXTENSION extensions::Utils»

«REM»Entry point for module documentation«ENDREM»
«DEFINE Root FOR Application-»
    «FILE "README.markdown"»«EXPAND ReadmeMarkup»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/credits.txt")»«EXPAND Credits»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/changelog.txt")»«EXPAND Changelog»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/developers.txt")»«EXPAND documents::DeveloperHints::DeveloperHints»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/doctrine.txt")»«EXPAND DoctrineHints»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/modulestudio.txt")»«EXPAND MostText»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/readme_de.txt")»«EXPAND ReadmeDE»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/readme.txt")»«EXPAND Readme»«ENDFILE»
    «FILE getAppSourcePath(appName()).msconcat("docs/license.txt")»«EXPAND documents::License::License»«ENDFILE»
«REM»TODO: generate additional information describing the model itself«ENDREM»
«ENDDEFINE»

«DEFINE Credits FOR Application-»
CREDITS
-------

«ENDDEFINE»

«DEFINE Changelog FOR Application-»
CHANGELOG
---------

Changes in «appName()» «version»
«ENDDEFINE»


«DEFINE DoctrineHints FOR Application-»
NOTES ON USING DOCTRINE
-----------------------
Zikula supports Doctrine 1.2. Please make sure you are reading the correct version
of the documentation looking on the vendor website
http://www.doctrine-project.org/projects/orm/1.2/docs/en

1.  It is not necessary to loadModels() except in specific conditions when it is
required.  Registering the module namespace (which happens automatically) is
enough.  This is the main advantage of using the PEAR class/file naming scheme.

2.  Models are required to tell Doctrine about the structure of a table.  But they
also allow additional behavior.
«ENDDEFINE»


«DEFINE MostText FOR Application-»
MODULESTUDIO
------------
This module has been generated by ModuleStudio «msVersion()», a model-driven solution
for creating modules for the Zikula Application Framework.
If you are interested in a new level of Zikula development, visit «msUrl()».
«ENDDEFINE»

«DEFINE ReadmeDE FOR Application-»
INSTALLATIONSANLEITUNG
----------------------
1) Kopieren Sie «appName()» in das Verzeichnis modules.
2) Initialisieren und aktivieren Sie «appName()» in der Modulverwaltung.
«IF hasUploads()-»
3) Setzen Sie das Verzeichnis files inklusive aller Unterordner auf beschreibbar.
«ENDIF-»

Bei Fragen und anderen Anmerkungen besuchen Sie unsere Homepage «url».

«EXPAND ReadmeFooter-»
«ENDDEFINE»

«DEFINE Readme FOR Application-»
INSTALLATION INSTRUCTIONS
-------------------------
1) Copy «appName()» to your modules folder.
2) Initialize and activate «appName()» in the modules administration.
«IF hasUploads()-»
3) Make the files directory writable including all sub folders.
«ENDIF-»

For questions and other remarks visit our homepage «url».

«EXPAND ReadmeFooter-»
«ENDDEFINE»

«DEFINE ReadmeFooter FOR Application-»
«author»«IF email != ""» («email»)«ENDIF»
«IF url != ""»«url»«REM»«ELSE»«msUrl()»«ENDREM»«ENDIF»
«ENDDEFINE»

«DEFINE ReadmeMarkup FOR Application-»
«appName()» «version»
=====================

«IF documentation != null && documentation != ""-»
«documentation.replaceAll("'", "\\'")»
«ELSE-»
«appName()» module generated by ModuleStudio «msVersion()».
«ENDIF-»

For questions and other remarks visit our homepage «url».

«EXPAND ReadmeFooter-»
«ENDDEFINE»

