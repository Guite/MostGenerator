«IMPORT modulestudio»
«IMPORT processing»
«EXTENSION extensions::Utils»

«REM»Definition of permission schema arrays«ENDREM»
«AROUND templates::zclassic::smallstuff::VersionFile::PermissionSchema FOR Module-»
        // DEBUG: permission schema aspect starts
        $modversion['securityschema'] = array(
            '«modName()»::' => '::',
«EXPAND PermissionSchema(modName()) FOREACH persistenceContainer.tables SEPARATOR ','-»
        );
        // DEBUG: permission schema aspect ends
«targetDef.proceed()-»
«ENDAROUND»

«DEFINE PermissionSchema(String modName) FOR persistence::Table-»
«IF incoming.size > 0-»
«EXPAND PermissionSchema(modName) FOREACH incoming SEPARATOR ','-»,
«ENDIF»
            '«modName»:«capitalName(name)»:' => '«capitalName(name)»ID::'«""-»
«ENDDEFINE»

«DEFINE PermissionSchema(String modName) FOR persistence::Relationship»
            '«modName»:«capitalName(source.name)»:«capitalName(target.name)»' => '«capitalName(source.name)»ID:«capitalName(target.name)»ID:'«ENDDEFINE»

«REM»Permission checks in system use cases«ENDREM»
«AROUND templates::zclassic::processing::Processor::PermissionCheck FOR ProcessorState-»
// DEBUG: permission check aspect starts
«LET stateProcessor.processingContainer.processingModule.modName() AS modName-»
«IF stateProcessor.metaType == AdminProcessor-»
        $this->throwForbiddenUnless(SecurityUtil::checkPermission('«modName»::', '::', ACCESS_ADMIN));
«ELSE-»
        $this->throwForbiddenUnless(SecurityUtil::checkPermission('«modName»::', '::', «EXPAND getPermissionAccessLevel-»));
«ENDIF-»
«ENDLET-»
// DEBUG: permission check aspect ends
«targetDef.proceed()-»
«ENDAROUND»

«DEFINE getPermissionAccessLevel FOR ProcessorState-»
«IF     metaType == MainProcessorState-»ACCESS_OVERVIEW«""-»
«ELSEIF metaType == ViewProcessorState-»ACCESS_READ«""-»
«ELSEIF metaType == DisplayProcessorState-»ACCESS_READ«""-»
«ELSEIF metaType == EditProcessorState-»ACCESS_EDIT«""-»
«ELSEIF metaType == DeleteProcessorState-»ACCESS_DELETE«""-»
«ELSEIF metaType == CustomProcessorState-»ACCESS_OVERVIEW
«ENDIF-»
«ENDDEFINE»