«IMPORT modulestudio»
«EXTENSION extensions::Utils»

«AROUND some::existing::template::InitInfo FOR Application-»
	«FOREACH models.entities AS t-»
        // AOP: «t.name»
	«ENDFOREACH-»

	«REM»forward the execution to the original template
		so this is a BEFORE advice
		taking the proceed up --> it becomes an AFTER advice
	«ENDREM»
	«targetDef.proceed()-»
«ENDAROUND»

«REM»General syntax for the AROUND construct:
	«AROUND fullyQualifiedDefinitionNameWithWildcards (ParamList (*)?) FOR TypeName»
		do Stuff
	«ENDAROUND»
«ENDREM»

«REM»Some examples:

	«AROUND *(*) FOR Object»
		matches all templates

	«AROUND *define(*) FOR Object»
		matches all templates with define at the end of it's name
		and any number of parameters

	«AROUND org::oaw::* FOR Entity»
		matches all templates with namespace org::oaw:: that do not have any parameters
		and whose type is Entity or a subclass

	«AROUND *(String s) FOR Object»
		matches all templates that have exactly one String parameter

	«AROUND *(String s,*) FOR Object»
		matches all templates that have at least one String parameter

	«AROUND my::Template::definition(String s) FOR Entity»
		matches exactly this single definition

	Inside an AROUND, there's the variable targetDef, which has the type xpand2::Definition.
	On this variable you can call proceed, and also query a number of other things:
	«AROUND my::Template::definition(String s) FOR String»
		log('invoking '+«targetDef.name»+' with '+this)
		«targetDef.proceed()»
«ENDREM»