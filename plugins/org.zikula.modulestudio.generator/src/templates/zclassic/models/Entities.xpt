«IMPORT modulestudio»
«IMPORT templates::zclassic::smallstuff»
«EXTENSION extensions::Utils»

«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»Entry point for module table definition«ENDREM»
«DEFINE Root FOR Application-»
«FILE "tables.php"-»
«EXPAND FileHelper::phpFileHeader(this)-»
«EXPAND TableInfo-»
«ENDFILE»
«ENDDEFINE»

«DEFINE TableInfo FOR Application-»
/**
 * Populate tables array for «appName()» module
 *
 * This function is called internally by the core whenever the module is
 * loaded. It delivers the table information to the core.
 * It can be loaded explicitly using the ModUtil::dbInfoLoad() method.
 *
 * @author       «author»
 * @return       array       The table information.
 */
function «appName()»_tables()
{
    // Initialise table array
    $tables = array();

    $dbdriver = DBConnectionStack::getConnectionDBDriver();

«FOREACH models.select(e|e.isDefaultDataSource).entities AS entity-»
«info("Generating table \"" + entity.name + "\"") -> ""-»
    /*
     * definitions for «applicationName(entity.name)» table
     */

    // set the table name combined with prefix
    $tables['«fullEntityName(entity)»'] = DBUtil::getLimitedTablename('«fullEntityName(entity)»');

«REM»
    // NOT REQUIRED: set the column names
    // NOT REQUIRED: $columns = array(«EXPAND FieldStructure(tab.prefix) FOREACH tab.columns SEPARATOR ','»);
«ENDREM»

    // set the data dictionary for the table columns
«EXPAND TextTypesMSSQL FOREACH entity.fields-»
    $columnDef = array(«EXPAND FieldData FOREACH entity.fields.typeSelect(DerivedField) SEPARATOR ','»);

«EXPAND ObjectExtensions FOR entity-»

«REM»
    // NOT REQUIRED: $tables['«fullEntityName(entity)»_column'] = $columns;
«ENDREM»
    $tables['«fullEntityName(entity)»_column_def'] = $columnDef;

«IF entity.indexes.size > 0-»
    // define additional indexes
    $tables['«dbName(prefix + '_' + entity.name)»_column_idx'] = array(«EXPAND IndexStructure FOREACH entity.indexes SEPARATOR ','»);
«ENDIF-»
«ENDFOREACH-»

    // return table data
    return $tables;
}
«ENDDEFINE»


«REM»column definition«ENDREM»
«DEFINE FieldStructure(String prefix) FOR EntityField»
        '«dbName(name)»' => '«dbName(prefix + '_' + name)»'«ENDDEFINE»

«REM»column data dictionary«ENDREM»
«REM»http://community.zikula.org/Wiki-AdodbDataDictionary.htm«ENDREM»

«DEFINE TextTypesMSSQL FOR EntityField»«ENDDEFINE»
«DEFINE TextTypesMSSQL FOR ClobField»
    $«dbName(name)»Type = 'XL';
«EXPAND TextTypesMSSQLFix»
«ENDDEFINE»

«DEFINE TextTypesMSSQLFix FOR EntityField»
    $dbType = DBConnectionStack::getConnectionDBType();
    if ($dbType == 'mssql') { // mssql can't sort on fields of type text
        $«dbName(name)»Type = 'C(8000)';
    }
«ENDDEFINE»

«DEFINE FieldData FOR DerivedField»
        '«dbName(name)»' => "«IF primaryKey == true»I NOTNULL AUTO PRIMARY«ELSE»«EXPAND TypeDef»«EXPAND TypeValue»«ENDIF»"«ENDDEFINE»

«DEFINE TypeDef FOR DerivedField-»
«error("Error: undefined derived field (code 925621)")»
«ENDDEFINE»
«DEFINE TypeValue FOR DerivedField»«IF mandatory == true» NOTNULL«ENDIF»«REM»no default value for text and blob fields, breaks mysql strict mode«ENDREM»«IF metaType != BlobField && metaType != ClobField» DEFAULT '«defaultValue»'«ENDIF»«ENDDEFINE»

«DEFINE TypeDef FOR StringField»C(«IF length > 0 && length < 256»«length»«ELSE»255«ENDIF»)«ENDDEFINE»
«DEFINE TypeDef FOR ClobField»$«dbName(name)»Type«ENDDEFINE»
«DEFINE TypeDef FOR BlobField»B«ENDDEFINE»

«DEFINE TypeDef FOR DateField»D«ENDDEFINE»«REM»1970-01-01«ENDREM»
«DEFINE TypeValue FOR DateField»«IF mandatory == true» NOTNULL«ENDIF» «IF defaultValue.length > 0»DEFAULT '«defaultValue»'«ELSEIF mandatory == true»DEFDATE«ELSE»DEFAULT NULL«ENDIF»«ENDDEFINE»

«DEFINE TypeDef FOR TimestampField»T«ENDDEFINE»«REM»1970-01-01 00:00:00«ENDREM»
«DEFINE TypeValue FOR TimestampField»«IF mandatory == true» NOTNULL«ENDIF» «IF defaultValue.length > 0»DEFAULT '«defaultValue»'«ELSEIF mandatory == true»DEFTIMESTAMP«ELSE»DEFAULT NULL«ENDIF»«ENDDEFINE»

«DEFINE TypeDef FOR BooleanField»L«ENDDEFINE»
«DEFINE TypeValue FOR BooleanField»«IF mandatory == true» NOTNULL«ENDIF» DEFAULT '«IF defaultValue == true || defaultValue == "true"»1«ELSE»0«ENDIF»'«ENDDEFINE»

«DEFINE TypeDef FOR IntegerField»I«IF length == "1" || length == "2" || length == "4" || length == "8"»«length»«ELSE»4«ENDIF»«ENDDEFINE»
«DEFINE TypeValue FOR IntegerField»«IF mandatory == true» NOTNULL«ENDIF» DEFAULT '«IF defaultValue.length > 0»«defaultValue»«ELSE»0«ENDIF»'«ENDDEFINE»

«DEFINE TypeDef FOR FloatField»F«IF length > 0»(«length»)«ELSE»(10.2)«ENDIF»«ENDDEFINE»
«DEFINE TypeValue FOR FloatField»«IF mandatory == true» NOTNULL«ENDIF» DEFAULT '«IF defaultValue.length > 0»«defaultValue»«ELSE»0«ENDIF»'«ENDDEFINE»

«DEFINE TypeDef FOR DecimalField»N«IF length > 0»(«length».«scale»)«ELSE»(10.2)«ENDIF»«ENDDEFINE»
«DEFINE TypeValue FOR DecimalField»«IF mandatory == true» NOTNULL«ENDIF» DEFAULT «IF defaultValue.length > 0»«defaultValue»«ELSE»0«ENDIF»«ENDDEFINE»


«DEFINE IndexStructure FOR EntityIndex»
        '«dbName(name)»' => «IF items.size > 1»array(«EXPAND IndexField FOREACH items SEPARATOR ', '»)«ELSE»'«dbName(items.get(0).name)»'«ENDIF»«ENDDEFINE»

«DEFINE IndexField FOR EntityIndexItem»'«dbName(name)»'«ENDDEFINE»


«DEFINE ObjectExtensions FOR Entity»
«REM»will be filled by Advices«ENDREM»
«ENDDEFINE»

