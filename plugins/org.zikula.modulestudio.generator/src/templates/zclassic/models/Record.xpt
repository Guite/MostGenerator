«IMPORT modulestudio»
«IMPORT templates::zclassic::smallstuff»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»

«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»Entry point for Doctrine record classes«ENDREM»
«DEFINE Root FOR Application-»
    «EXPAND Root(this) FOREACH models.entities-»
«ENDDEFINE»

«REM»creates a record class file for every Entity instance«ENDREM»
«DEFINE Root(Application app) FOR Entity-»
«info("Generating record classes for entity \"" + name + "\"") -> ""-»
    «FILE baseClassModelRecord(false).asFile()»«EXPAND FileHelper::phpFileHeader(app)»«EXPAND ModelRecordBaseImpl(app)»«ENDFILE»
    «FILE implClassModelRecord(false).asFile()»«EXPAND FileHelper::phpFileHeader(app)»«EXPAND ModelRecordImpl(app)»«ENDFILE»
«ENDDEFINE»

«REM»base implementation«ENDREM»
«DEFINE ModelRecordBaseImpl(Application app) FOR Entity-»

/**
 * Model class that defines the entity structure and behaviours.
 *
 * This is the base record class for «name.formatForDisplay()» entities
 */
class «baseClassModelRecord(false)» extends Doctrine_Record
{
«EXPAND RecordInfo-»
}
«ENDDEFINE»

«REM»concrete implementation stub«ENDREM»
«DEFINE ModelRecordImpl(Application app) FOR Entity-»

/**
 * Model class that defines the entity structure and behaviours.
 *
 * This is the concrete table class for «name.formatForDisplay()» entities
 */
class «implClassModelRecord(false)» extends «baseClassModelRecord(false)»
{
    // feel free to add your own methods here
}
«ENDDEFINE»


«DEFINE RecordInfo FOR Entity-»
    /**
     * Set table definition.
     * Define columns, indexes and other information about the table schema.
     *
     * @return void
     */
    public function setTableDefinition()
    {
«EXPAND SetTableDefinition-»
    }

    /**
     * Record setup.
     * Attach behaviours and define relationships.
     *
     * @return void
     */
    public function setUp()
    {
«EXPAND SetUpImpl-»
    }
«ENDDEFINE»

«DEFINE SetTableDefinition FOR Entity-»
        $this->setTableName('«fullEntityName()»');
«EXPAND FieldSetColumn FOREACH fields-»
«REM»TODO
«IF indexes.size > 0-»
    // define additional indexes
    $tables['«fullEntityName()»_column_idx'] = array(«EXPAND IndexStructure FOREACH indexes SEPARATOR ','»);
«ENDIF-»«ENDREM»
«ENDDEFINE»


«REM»column definition«ENDREM»
«DEFINE FieldSetColumn FOR EntityField-»
«error("Error: undefined entity field type (code 592354)") -> ""-»
«ENDDEFINE»
«DEFINE FieldSetColumn FOR DerivedField-»
        $this->hasColumn(«EXPAND FieldSetColumnDetails-», array(
«EXPAND FieldSetColumnOptions»
            )
        );
«ENDDEFINE»
«DEFINE FieldSetColumn FOR CalculatedField-»
«REM»Nothing at the moment«ENDREM»
«ENDDEFINE»
«DEFINE FieldDefaultData FOR EntityField-»
«error("Error: undefined entity field type (code 592374)") -> ""-»
«ENDDEFINE»
«DEFINE FieldDefaultData FOR DerivedField-»
«error("Error: undefined derived field type (code 592376)") -> ""-»
«ENDDEFINE»
«DEFINE FieldDefaultData FOR CalculatedField-»
«error("Error: undefined calculated field type (code 592378)") -> ""-»
«ENDDEFINE»

«DEFINE FieldSetColumnDetails FOR DerivedField-»'«EXPAND FieldName-»', '«EXPAND FieldType-»', «EXPAND FieldLength-»«ENDDEFINE»

«DEFINE FieldName FOR DerivedField-»«name.formatForCode()»«IF alias != null && alias != ""-» as «alias.formatForCode()»«ENDIF-»«ENDDEFINE»

«DEFINE FieldType FOR DerivedField-»«metaType.toString().replaceAll("Field", "").toLowerCase()»«ENDDEFINE»
«REM»required for own types like user, email, url, upload«ENDREM» 
«DEFINE FieldType FOR AbstractIntegerField-»integer«ENDDEFINE»
«DEFINE FieldType FOR AbstractStringField-»string«ENDDEFINE»

«DEFINE FieldLength FOR DerivedField-»null«ENDDEFINE»
«DEFINE FieldLength FOR AbstractIntegerField-»«IF length != null && length != ""-»«length»«ELSE-»null«ENDIF-»«ENDDEFINE»
«DEFINE FieldLength FOR FloatField-»«IF length != null && length != ""-»«length»«ELSE-»null«ENDIF-»«ENDDEFINE»
«DEFINE FieldLength FOR DecimalField-»«IF length != null && length != ""-»«length»«ELSE-»null«ENDIF-»«ENDDEFINE»
«DEFINE FieldLength FOR AbstractStringField-»«IF length != null && length != ""-»«length»«ELSE-»null«ENDIF-»«ENDDEFINE»
«DEFINE FieldLength FOR ArrayField-»«IF length != null && length != ""-»«length»«ELSE-»null«ENDIF-»«ENDDEFINE»

«DEFINE FieldSetColumnOptions FOR DerivedField-»
                'type' => '«EXPAND FieldType-»',
                'notnull' => «IF notnull»true«ELSE-»false«ENDIF-»,
«IF primaryKey == true-»
                'primary' => true,
                'autoincrement' => true,
«ENDIF-»
«IF unique == true-»
                'unique' => true,
«ENDIF-»
«IF defaultValue != null && defaultValue != ""-»
                'default' => «EXPAND FieldDefaultValue-»,
«ENDIF-»
«EXPAND FieldSetColumnAdditionalOptions-»
                'length' => «EXPAND FieldLength-»
«ENDDEFINE»

«DEFINE FieldDefaultValue FOR DerivedField-»
«error("Error: undefined default value definition for derived field type (code 3982562)") -> ""-»
«ENDDEFINE»
«DEFINE FieldDefaultValueNumber FOR DerivedField-»«defaultValue»«ENDDEFINE»
«DEFINE FieldDefaultValueText FOR DerivedField-»'«defaultValue»'«ENDDEFINE»
«DEFINE FieldDefaultValue FOR BooleanField-»«IF defaultValue == true || defaultValue == "true"»true«ELSE»false«ENDIF-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR IntegerField-»«EXPAND FieldDefaultValueNumber-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR FloatField-»«EXPAND FieldDefaultValueNumber-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR DecimalField-»«EXPAND FieldDefaultValueNumber-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR StringField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR TextField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR EmailField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR UrlField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR UploadField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR UserField-»«EXPAND FieldDefaultValueNumber-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR ArrayField-»«EXPAND FieldDefaultValueNumber-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR EnumField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR ObjectField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR BlobField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR ClobField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR TimestampField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR DateField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR TimeField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»
«DEFINE FieldDefaultValue FOR GzipField-»«EXPAND FieldDefaultValueText-»«ENDDEFINE»


«DEFINE FieldSetColumnAdditionalOptions FOR DerivedField-»«ENDDEFINE»

«DEFINE FieldSetColumnAdditionalOptions FOR IntegerField-»
                'unsigned' => «IF unsigned-»true«ELSE-»false«ENDIF-»,
«ENDDEFINE»
«DEFINE FieldSetColumnAdditionalOptions FOR DecimalField-»
                'scale' => «scale.toInteger()»,
«ENDDEFINE»
«DEFINE FieldSetColumnAdditionalOptions FOR AbstractStringField-»
                'fixed' => «IF fixed-»true«ELSE-»false«ENDIF-»,
«ENDDEFINE»


«REM»TODO
«DEFINE IndexStructure FOR EntityIndex»
        '«name.formatForDB()»' => «IF items.size > 1»array(«EXPAND IndexField FOREACH items SEPARATOR ', '»)«ELSE»'«formatForDB(items.get(0).name)»'«ENDIF»«ENDDEFINE»
«DEFINE IndexField FOR EntityIndexItem»'«name.formatForDB()»'«ENDDEFINE»
«ENDREM»

«DEFINE SetUpImpl FOR Entity-»
«EXPAND SetUpRelations»
«EXPAND SetUpBehaviour»
«ENDDEFINE»

«DEFINE SetUpRelations FOR Entity-»
«IF outgoing.typeSelect(JoinRelationship).size > 0-»
        // relations
«FOREACH outgoing.typeSelect(JoinRelationship) AS relation-»
        $this->has«IF relation.metaType == OneToOneRelationship-»One«ELSE-»Many«ENDIF-»('«relation.target.implClassModelRecord(false)»«IF relation.alias != null && relation.alias != ""-» as «relation.alias.formatForCode()»«ENDIF-»', array(
                // linked field in the defining class
                'local' => '«idField()»',
                // linked field in the linked class
                'foreign' => '«relation.target.idField()»',
«IF relation.metaType == ManyToManyRelationship-»,
                // name of the many-to-many association class
                'refClass' => 'TODO',
«ENDIF-»
                // true indicates the owning side (owning the foreign key)
                'owningSide' => true«REM»TRUEFALSE,
        onDelete      Yes         The onDelete integrity action that is applied on the foreign key constraint
                                  when the tables are created by Doctrine.
        onUpdate      Yes         The onUpdate integrity action that is applied on the foreign key constraint
                                  when the tables are created by Doctrine.
        cascade       Yes         Specify application level cascading operations. Currently only delete is supported«ENDREM»
            )
        );
«ENDFOREACH-»
«ENDIF-»

«ENDDEFINE»

«DEFINE SetUpBehaviour FOR Entity-»
        // behaviours
        $this->actAs('Timestampable');
«EXPAND ObjectExtensions-»
«ENDDEFINE»

«DEFINE ObjectExtensions FOR Entity»
«REM»will be filled by Advices«ENDREM»
«ENDDEFINE»

