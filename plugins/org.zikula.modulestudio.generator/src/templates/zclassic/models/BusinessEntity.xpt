«IMPORT modulestudio»
«IMPORT templates::zclassic::smallstuff»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»Entry point for Business entity classes«ENDREM»
«DEFINE Root FOR Application-»
	«EXPAND BusinessEntityWrapper(this, false) FOREACH models.entities-»
	«EXPAND BusinessEntityWrapper(this, true) FOREACH models.entities-»
«ENDDEFINE»

«REM»creates a business entity and a collection class file for every Entity instance«ENDREM»
«DEFINE BusinessEntityWrapper(Application app, Boolean isCollection) FOR Entity-»
«info("Generating business " + ((isCollection) ? 'collection' : 'entity') +  " classes for entity \"" + name + "\"") -> ""-»
«IF !isInheriting()-»
    «FILE baseClassBusinessEntity(isCollection).asFile()»«EXPAND FileHelper::phpFileHeader(app)»«EXPAND BusinessEntityBaseImplSwitch(app, isCollection)»«ENDFILE»
«ENDIF-»
    «FILE implClassBusinessEntity(isCollection).asFile()»«EXPAND FileHelper::phpFileHeader(app)»«EXPAND BusinessEntityImplSwitch(app, isCollection)»«ENDFILE»
«ENDDEFINE»

«REM»base implementation«ENDREM»
«DEFINE BusinessEntityBaseImplSwitch(Application app, Boolean isCollection) FOR Entity-»

/**
 * Business entity «IF isCollection»collection «ENDIF»class for communication with controllers and encapsulating model details.
 *
 * This is the base business class for «name.formatForDisplay()» entities.
 */
abstract class «baseClassBusinessEntity(isCollection)»«IF isCollection»/* extends Zikula_Collection_Container*/«ENDIF»
{
«IF isCollection == false-»
«EXPAND business::Entity::BusinessEntityBaseImpl(app)-»
«ELSE-»
«EXPAND business::EntityCollection::BusinessEntityCollectionBaseImpl(app)-»
«ENDIF-»
}
«ENDDEFINE»

«REM»concrete implementation stub«ENDREM»
«DEFINE BusinessEntityImplSwitch(Application app, Boolean isCollection) FOR Entity-»

/**
 * Business entity «IF isCollection»collection «ENDIF»class for communication with controllers and encapsulating model details.
 *
 * This is the concrete business class for «name.formatForDisplay()» entities.
 */
class «implClassBusinessEntity(isCollection)» extends «baseClassBusinessEntity(isCollection)»
{
    // feel free to add your own additions here
}
«ENDDEFINE»


«REM»TODO: to be replaced with Doctrine«ENDREM»
«DEFINE ObjectPermissionFilters(String modName) FOR Entity-»
        // apply object permission filters
        $this->_objPermissionFilter[] = array('component_left'   => '«modName»',
                                              'component_middle' => '«name.formatForCodeCapital()»',
                                              'component_right'  => '',
                                              'instance_left'    => '«name.formatForDB()»id',
                                              'instance_middle'  => '',
                                              'instance_right'   => '',
                                              'level'            => ACCESS_READ);

«FOREACH incoming AS join-»
        $this->_objPermissionFilter[] = array('component_left'   => '«modName»',
                                              'component_middle' => '«join.source.name.formatForCodeCapital()»',
                                              'component_right'  => '«name.formatForCodeCapital()»',
                                              'instance_left'    => '«join.source.name.formatForDB()»id',
                                              'instance_middle'  => '«name.formatForDB()»id',
                                              'instance_right'   => '',
                                              'level'            => ACCESS_READ);

«ENDFOREACH-»
«ENDDEFINE»






