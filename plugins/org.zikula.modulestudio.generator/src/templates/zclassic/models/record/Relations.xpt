«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«DEFINE SetUpRelations FOR Entity-»
        /**
         * Relations
         */
«IF outgoing.typeSelect(JoinRelationship).size > 0-»
        // outgoing relations
«FOREACH outgoing.typeSelect(JoinRelationship) AS relation-»
«EXPAND RelationDefinition(false) FOR relation-»
«ENDFOREACH-»

«ENDIF-»
«IF incoming.typeSelect(JoinRelationship).size > 0-»
        // incoming relations
«FOREACH incoming.typeSelect(JoinRelationship) AS relation-»
«EXPAND RelationDefinition(true) FOR relation-»
«ENDFOREACH-»

«ENDIF-»
«ENDDEFINE»

«DEFINE RelationDefinition(Boolean incoming) FOR JoinRelationship-»
«IF source == target-»«REM»TODO«ENDREM»
/** self relations are not working yet, see http://code.zikula.org/generator/ticket/75
«ENDIF-»
        $this->has«IF metaType == OneToOneRelationship || (incoming && metaType == OneToManyRelationship)-»One«ELSE»Many«ENDIF»('«IF incoming-»«source.implClassModelRecord()»«IF sourceAlias != null && sourceAlias != ""-» as «sourceAlias.formatForCodeCapital()»«ENDIF»«ELSE»«target.implClassModelRecord()»«IF targetAlias != null && targetAlias != ""-» as «targetAlias.formatForCodeCapital()»«ENDIF»«ENDIF»', array(
                // linked field in the defining class
                'local' => '«getRelationLocalField(incoming)»',
                // linked field in the linked class
                'foreign' => '«getRelationForeignField(incoming)»',
«IF foreignKeyName != null && foreignKeyName != ""-»
                'foreignKeyName' => '«foreignKeyName»',
«ENDIF-»
                // true indicates the owning side (owning the foreign key)
                'owningSide' => «(incoming).displayBool()»«IF incoming»,«ENDIF»
«REM»incoming == owningSide because owning == where FK is«ENDREM»«""-»
«IF incoming-»«EXPAND CascadeInfo-»«ENDIF-»
            )
        );
«IF source == target-»«REM»TODO«ENDREM»
*/
«ENDIF-»
«ENDDEFINE»

«DEFINE RelationDefinition(Boolean incoming) FOR ManyToManyRelationship-»
«IF source == target-»«REM»TODO«ENDREM»
/** self relations are not working yet, see http://code.zikula.org/generator/ticket/75
«ENDIF-»
        $this->hasMany('«IF incoming-»«source.implClassModelRecord()»«IF sourceAlias != null && sourceAlias != ""-» as «sourceAlias.formatForCodeCapital()»«ENDIF»«ELSE»«target.implClassModelRecord()»«IF targetAlias != null && targetAlias != ""-» as «targetAlias.formatForCodeCapital()»«ENDIF»«ENDIF»', array(
                // linked field in the defining class
                'local' => '«target.relationFieldName(targetField)»',
                // linked field in the linked class
                'foreign' => '«source.relationFieldName(sourceField)»',
                // name of the many-to-many association class
                'refClass' => '«implClassModelRefRecord()»',
«REM»                // true indicates the owning side (owning the foreign key)
                'owningSide' => «(incoming).displayBool()»«IF incoming»,«ENDIF»
«REM»incoming == owningSide because owning == where FK is«ENDREM»«""-»
«IF incoming-»«EXPAND CascadeInfo-»«ENDIF-»
            )
        );
«IF source == target-»«REM»TODO«ENDREM»
*/
«ENDIF-»
«ENDDEFINE»

«DEFINE CascadeInfo FOR JoinRelationship-»
«IF cascadeTypeUpdate != CascadeType::NONE-» 
                'onUpdate' => '«cascadeTypeUpdate.asConstant()-»',
«ENDIF-»
«IF cascadeTypeDelete != CascadeType::NONE-» 
                'onDelete' => '«cascadeTypeDelete.asConstant()-»',
«ENDIF-»
                'cascade' => «IF cascadeTypeDelete.asConstant() == "CASCADE" && source.tableType.asConstant() == "MYISAM"»array('delete')«ELSE»''«ENDIF»
«ENDDEFINE»

«DEFINE SubClasses FOR Entity-»
«LET getChildRelationsWithAggregation() AS aggregatedChildren-»
«IF aggregatedChildren.size > 0»
        $this->setSubclasses(array(
«EXPAND SubClass FOREACH aggregatedChildren-»
            )
        );
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE SubClass FOR InheritanceRelationship-»
                '«source.name.formatForCode()»' => array('«columnAggregationField.formatForCode()»' => '«source.name.formatForCode()»')
«ENDDEFINE»


