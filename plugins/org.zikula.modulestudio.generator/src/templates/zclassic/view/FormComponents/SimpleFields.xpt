«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«DEFINE FormRow FOR DerivedField-»
            {formlabel for="«actualFieldName().formatForCode()»" __text='«EXPAND FormLabel»'«IF mandatory» mandatorysym="1"«ENDIF»«IF documentation != null && documentation != ""-» class="«entity.container.application.appName().formatForDB()»FormTooltips" title="«documentation.replaceAll('"', '\"')»"«ENDIF-»}«IF metaType == UploadField»<br />{* break required for Google Chrome *}«ENDIF»
«EXPAND FormField-»
            «EXPAND Validation::MandatoryValidationMessage-»
            «EXPAND Validation::AdditionalValidationMessages-»
«ENDDEFINE»


«DEFINE FormLabel FOR EntityField-»
«error("Error: undefined entity field type " + metaType.toString() + " (code 902346)") -> ""-»
«ENDDEFINE»
«DEFINE FormLabel FOR DerivedField-»
«actualFieldName().formatForDisplayCapital()-»
«ENDDEFINE»
«DEFINE FormLabel FOR CalculatedField-»
«error("Error: undefined calculated field type " + metaType.toString() + " (code 902348)") -> ""-»
«ENDDEFINE»


«DEFINE FormLabel FOR IntegerField-»
«LET getPointingRelations() AS pointingRelations-»
«IF pointingRelations.size > 0-»
«LET pointingRelations.get(0) AS pointingRelation-»
«IF pointingRelation.sourceAlias != null && pointingRelation.sourceAlias != ""-»
«pointingRelation.sourceAlias.formatForDisplayCapital()-»
«ELSE-»
«pointingRelation.source.getEntityNameSingularPlural(pointingRelation.metaType != OneToOneRelationship)-»
«ENDIF-»
«ENDLET-»
«ELSE-»
«actualFieldName().formatForDisplayCapital()-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»



«DEFINE FormField FOR EntityField-»
«error("Error: undefined entity field type " + metaType.toString() + " (code 902386)") -> ""-»
«ENDDEFINE»
«DEFINE FormField FOR DerivedField-»
«error("Error: undefined derived field type " + metaType.toString() + " (code 902387)") -> ""-»
«ENDDEFINE»
«DEFINE FormField FOR CalculatedField-»
«error("Error: undefined calculated field type " + metaType.toString() + " (code 902388)") -> ""-»
«ENDDEFINE»

«DEFINE FormField FOR BooleanField-»
            {formcheckbox id="«actualFieldName().formatForCode()»" readOnly=«readonly» __title='«actualFieldName().formatForDisplay()» ?'«IF mandatory» cssClass="required"«ENDIF»}
«REM»TODO: group: group name for sub arrays«ENDREM»«""-»
«ENDDEFINE»

«DEFINE FormField FOR IntegerField-»
«REM»commented out because relations are processed independently now; this code here remains temporarily just for safety
«LET getPointingRelations() AS pointingRelations-»
«IF pointingRelations.size > 0-»
«LET pointingRelations.get(0) AS pointingRelation-»
«LET pointingRelation.source AS joiningEntity-»
«REM»Join-selector; if the where param is an array then [0] is the DQL and [1] the place holder values [example: array('status = ?', 'XY')]. Otherwise use normal syntax like [where="active = true"].«END REM»«""-»
            {formdropdownrelationlist id="«joiningEntity.idField()»" mandatory=«mandatory.displayBool()» recordClass="«joiningEntity.implClassModelRecord()»" displayField="«joiningEntity.getLeadingField().actualFieldName().formatForCode()»" orderby="«joiningEntity.idField()»"«IF pointingRelation.metaType == OneToManyRelationship-»«REM» selectionMode="multiple"«END-REM»«ENDIF-»}
«ENDLET-»
«ENDLET-»
«ELSE-»
«ENDREM»«""-»
            {formintinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' maxLength=«length»«IF minValue != 0 || maxValue != 0-» minValue=«minValue» maxValue=«maxValue»«ENDIF»«EXPAND Validation::FieldValidationCssClass»}
«REM»
«ENDIF-»
«ENDLET-»
«ENDREM»«""-»
«ENDDEFINE»

«DEFINE FormField FOR FloatField-»
            {formfloatinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»'«EXPAND Validation::FieldValidationCssClass» style="text-align: right; width: 8em"}
«REM»TODO: minValue=123, maxValue=123«ENDREM»«""-»
«ENDDEFINE»

«DEFINE FormField FOR DecimalField-»
            {formfloatinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' maxLength=«(length+3+scale)»«EXPAND Validation::FieldValidationCssClass» style="text-align: right; width: 8em"}
«ENDDEFINE»

«DEFINE FormField FOR StringField-»
«IF country-»
            {* TODO: support country fields in Zikula (see http://code.zikula.org/core/ticket/2446 for more information) *}
«ENDIF-»
«IF htmlcolor-»
            {* TODO: support colour fields in Zikula (see http://code.zikula.org/core/ticket/2448 for more information) *}
«ENDIF-»
            {formtextinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» readOnly=«readonly» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' textMode="singleline" maxLength=«length»«EXPAND Validation::FieldValidationCssClass»}
«REM»TODO: textMode="password" for password input fields«ENDREM»«""-»
«ENDDEFINE»

«DEFINE FormField FOR TextField-»«EXPAND FormFieldTextarea»«ENDDEFINE»

«DEFINE FormFieldTextarea FOR DerivedField-»
            {formtextinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' textMode="multiline" rows="6«REM»8«ENDREM»" cols="50"«EXPAND Validation::FieldValidationCssClass»}
«REM»TODO: group: group name for sub arrays«ENDREM»«""-»
«ENDDEFINE»

«DEFINE FormField FOR EmailField-»
            {formemailinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» readOnly=«readonly» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' textMode="singleline" maxLength=«length»«EXPAND Validation::FieldValidationCssClass»}
«ENDDEFINE»

«DEFINE FormField FOR UrlField-»
            {formurlinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» readOnly=«readonly» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' textMode="singleline" maxLength=«length»«EXPAND Validation::FieldValidationCssClass»}
«ENDDEFINE»

«DEFINE FormField FOR UploadField-»
«IF mandatory-»
{if $mode eq "create"}
            {formuploadinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» readOnly=«readonly»«EXPAND Validation::FieldValidationCssClass»}
{else}
            {formuploadinput id="«actualFieldName().formatForCode()»" mandatory=false readOnly=«readonly»«EXPAND Validation::FieldValidationCssClass»}
{/if}
«ELSE-»
            {formuploadinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» readOnly=«readonly»«EXPAND Validation::FieldValidationCssClass»}
«ENDIF-»

«REM»TODO: group: group name for sub arrays«ENDREM»«""-»
            <div class="z-formnote">{gt text='Allowed file extensions:'} «allowedExtensions»</div>
«ENDDEFINE»

«DEFINE FormField FOR UserField-»
            {* to be replaced by a plugin (see http://code.zikula.org/core/ticket/2444 for more information) *} 
«LET actualFieldName().formatForCode() AS realName»
            <div id="«realName»liveusersearch" class="«entity.container.application.prefix()»LiveSearchUser z-hide">
                {formtextinput id="«realName»desc" mandatory=«mandatory» readOnly=«readonly» __title='Input a part of the user name to search' maxLength=«length» cssClass="«IF mandatory»required «ENDIF»validate-alphanum"}
                {img id="ajax_indicator" style="display: none" modname='core' set='icons/extrasmall' src="indicator_circle.gif" alt=""}
                <div id="«realName»desc_choices" class="«entity.container.application.prefix()»AutoCompleteUser"></div>
            </div>
            <noscript><p>{gt text='This function requires JavaScript activated!'}</p></noscript>
            <input type="hidden" id="«realName»" name="«realName»" value="{«realName»}" />
            {if $mode ne "create" && $«realName»}<div class="z-formnote"><a href="{modurl modname="Users" type="admin" func="modify" userid=$«realName»}" title="{gt text="Switch to the user administration"}">{gt text="Manage user"}</a></div>{/if}
«ENDLET»
«ENDDEFINE»

«REM»TODO: support formdropdownlist or formradiobutton«ENDREM»
«DEFINE FormField FOR EnumField-»«EXPAND FormFieldTextarea»«ENDDEFINE»

«REM»TODO: find a better way for editing«ENDREM»
«DEFINE FormField FOR BlobField-»«EXPAND FormFieldTextarea»«ENDDEFINE»

«DEFINE FormField FOR ClobField-»«EXPAND FormFieldTextarea»«ENDDEFINE»

«DEFINE FormField FOR TimestampField-»
            {if $mode ne "create"}
                {formdateinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' includeTime=true«EXPAND Validation::FieldValidationCssClass»}
            {else}
                {formdateinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' includeTime=true defaultValue="now"«EXPAND Validation::FieldValidationCssClass»}
            {/if}
«REM»TODO: visible=false«ENDREM»«""-»
«ENDDEFINE»

«DEFINE FormField FOR DateField-»
            {if $mode ne "create"}
                {formdateinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' useSelectionMode=true«EXPAND Validation::FieldValidationCssClass»}
            {else}
                {formdateinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' useSelectionMode=true defaultValue="today"«EXPAND Validation::FieldValidationCssClass»}
            {/if}
«ENDDEFINE»

«DEFINE FormField FOR TimeField-»
            {* TODO: support time fields in Zikula (see http://code.zikula.org/core/ticket/2445 for more information) *}
            {formtextinput id="«actualFieldName().formatForCode()»" mandatory=«mandatory» readOnly=«readonly» __title='Input the «actualFieldName().formatForDisplay()» of the «entity.name.formatForDisplay()»' textMode="singleline" maxLength=8«EXPAND Validation::FieldValidationCssClass»}
«ENDDEFINE»

«DEFINE FormField FOR GzipField-»«EXPAND FormFieldTextarea»«ENDDEFINE»

