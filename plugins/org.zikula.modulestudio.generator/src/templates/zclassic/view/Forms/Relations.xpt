«IMPORT modulestudio»
«EXTENSION extensions::Utils»
«EXTENSION extensions::ClassUtils»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«REM»
Entry point for form sections treating related objects.
Note many-to-many is handled in a separate define further down.
If onlyInclude is true then only the Smarty include is created, otherwise the included file.
«ENDREM»
«DEFINE Root(Controller controller, Boolean onlyInclude, Boolean incoming) FOR JoinRelationship-»
«LET getEditStageCode(incoming) AS stageCode-»
«REM»Look if we have to do anything by checking stage codes which represent different edit behaviors«ENDREM»«""-»
«IF (!incoming && stageCode == 2) || (incoming && (stageCode == 1 || stageCode == 3))-»
«IF !incoming-»«EXPAND ActiveParentImpl(controller, onlyInclude)-»
«ELSE-»«EXPAND PassiveChildImpl(controller, onlyInclude, stageCode)-»
«ENDIF-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«REM»Parent/active/source view for 1:1 and 1:n«ENDREM»
«DEFINE ActiveParentImpl(Controller controller, Boolean onlyInclude) FOR JoinRelationship-»
«IF onlyInclude-»
    {include file="«templateFile(controller, target.name, 'include_select'.msconcat(getTargetMultiplicity()))»"}
«ELSE-»
«info("Generating " + controller.name.formatForDB() + " edit inclusion templates for entity \"" + target.name.formatForDisplay() + "\"") -> ""-»
«FILE templateFile(controller, target.name, 'include_select'.msconcat(getTargetMultiplicity()))-»
<fieldset>
    <legend>{gt text='«IF this.metaType == OneToOneRelationship»«target.name.formatForDisplayCapital()»«ELSE»«target.nameMultiple.formatForDisplayCapital()»«ENDIF»'}</legend>
    <div class="z-formrow">
«EXPAND Component_ParentEditing(target, (this.metaType != OneToOneRelationship))-»
    </div>
</fieldset>
«ENDFILE-»
«ENDIF-»
«ENDDEFINE»

«REM»Child/passive/target view for 1:1 and 1:n«ENDREM»
«DEFINE PassiveChildImpl(Controller controller, Boolean onlyInclude, Integer stageCode) FOR JoinRelationship-»
«IF onlyInclude-»
    {include file="«templateFile(controller, source.name, 'include_selectOne')»"}
«ELSE-»
«info("Generating " + controller.name.formatForDB() + " edit inclusion templates for entity \"" + source.name.formatForDisplay() + "\"") -> ""-»
«FILE templateFile(controller, source.name, 'include_selectOne')-»
<fieldset>
    <legend>{gt text='«IF this.metaType == OneToOneRelationship»«source.name.formatForDisplayCapital()»«ELSE»«source.nameMultiple.formatForDisplayCapital()»«ENDIF»'}</legend>
    <div class="z-formrow">
«EXPAND Component_AutoComplete(source, false)-»
«IF stageCode == 3-»«EXPAND Component_ChildEditing(source, false)-»«ENDIF-»
    </div>
</fieldset>
«ENDFILE-»
«ENDIF-»
«ENDDEFINE»

«DEFINE Root(Controller controller, Boolean incoming, Boolean onlyInclude) FOR ManyToManyRelationship-»
«LET getEditStageCode(incoming) AS stageCode-»
«IF stageCode == 1 || stageCode == 3-»
«IF onlyInclude-»
    {include file="«templateFile(controller, ((incoming) ? source.name : target.name), 'include_selectMany')»"}
«ELSE-»
«info("Generating " + controller.name.formatForDB() + " edit inclusion templates for entity \"" + ((incoming) ? source.name.formatForDisplay() : target.name.formatForDisplay()) + "\"") -> ""-»
«FILE templateFile(controller, ((incoming) ? source.name : target.name), 'include_selectMany')-»
<fieldset>
    <legend>{gt text='«IF incoming»«source.nameMultiple.formatForDisplayCapital()»«ELSE»«target.nameMultiple.formatForDisplayCapital()»«ENDIF»'}</legend>
    <div class="z-formrow">
«IF !incoming-»«EXPAND ManyToManyHandling(source, target, stageCode)-»
«ELSE-»«EXPAND ManyToManyHandling(target, source, stageCode)-»
«ENDIF-»
    </div>
</fieldset>
«ENDFILE-»
«ENDIF-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE ManyToManyHandling(Entity source, Entity target, Integer stageCode) FOR ManyToManyRelationship-»
«EXPAND Component_AutoComplete(target, true)-»
«IF stageCode == 3-»
«EXPAND Component_ChildEditing(target, true)-»
«ENDIF-»
«ENDDEFINE»

«DEFINE Component_AutoComplete(Entity targetEntity, Boolean many) FOR JoinRelationship-»
«IF !many-»
            <p>TODO SELECT: AutoComplete field for choosing the «targetEntity.name.formatForDisplay()» (including preselection if mode is edit or the ID is given by $_GET)</p>
«ELSE-»
            <p>TODO SELECT: AutoComplete field for choosing the «targetEntity.nameMultiple.formatForDisplay()»</p>
«ENDIF-»
«ENDDEFINE»

«DEFINE Component_ParentEditing(Entity targetEntity, Boolean many) FOR JoinRelationship-»
«IF !many-»
            <p>TODO ADD: button to create a new «targetEntity.name.formatForDisplay()» with inline editing (form dialog)</p>
            <p>TODO EDIT: display of related «targetEntity.name.formatForDisplay()» with inline editing (form dialog)</p>
«ELSE-»
            <p>TODO ADD: button to create new «targetEntity.nameMultiple.formatForDisplay()» with inline editing (form dialog)</p>
            <p>TODO EDIT: list of related «targetEntity.nameMultiple.formatForDisplay()» with inline editing (form dialog)</p>
«ENDIF-»
«ENDDEFINE»

«DEFINE Component_ChildEditing(Entity targetEntity, Boolean many) FOR JoinRelationship-»
«IF !many-»
            <p>TODO ADD: button to create a new «targetEntity.name.formatForDisplay()» with inline editing (form dialog)</p>
            <p>TODO EDIT: display of related «targetEntity.name.formatForDisplay()» with inline editing (form dialog)</p>
«ELSE-»
            <p>TODO ADD: button to create new «targetEntity.nameMultiple.formatForDisplay()» with inline editing (form dialog)</p>
            <p>TODO EDIT: list of related «targetEntity.nameMultiple.formatForDisplay()» with inline editing (form dialog)</p>
«ENDIF-»
«ENDDEFINE»
