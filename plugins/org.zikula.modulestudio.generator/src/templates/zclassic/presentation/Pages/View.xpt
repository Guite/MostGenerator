«IMPORT processing»
«EXTENSION extensions::Utils»

«REM»
listType:
	0 = div and ul
	1 = div and ol
	2 = div and dl
	3 = div and table
«ENDREM»
«DEFINE Impl(String modName, Processor processor, Integer listType) FOR persistence::Table»
«LET dbName(processor.name) AS procName-»
«LET moduleName(name) AS objName-»
«FILE "templates/" + modName + "_" + procName + "_" + objName + "_view.tpl"-»
{* purpose of this template: «formattedName(nameMultiple)» view view in «procName» area *}

{include file="«modName»_«procName»_header.tpl"}

«IF processor.metaType == AdminProcessor-»
<div class="z-admincontainer">
«ELSE-»
<div class="z-frontendcontainer">
«ENDIF-»
{gt text='«formattedNameCapitalized(name)» list' assign="templateTitle"}
«IF processor.metaType == AdminProcessor-»
<div class="z-adminpageicon">{img modname="core" src="windowlist.gif" set="icons/large" alt=$templateTitle}</div>
«ENDIF-»
{pagesetvar name="title" value=$templateTitle}
<h2>{$templateTitle}</h2>

{securityutil_checkpermission_block component="«modName»::" instance=".*" level="ACCESS_ADD"}
{gt text='Create «formattedName(name)»' assign="createTitle"}
{gt text='Update «formattedName(name)»' assign="editTitle"}
{gt text='Delete «formattedName(name)»' assign="deleteTitle"}
«IF processor.hasPStates('edit')-»
<p>
    <a href="{modurl modname="«modName»" type="«procName»" func="edit" ot="«objName»"}" title="{$createTitle}">
        {img src="insert_table_row.gif" modname="core" set="icons/extrasmall" __alt='Create'}
        {$createTitle}
    </a>
</p>
«ENDIF»
{/securityutil_checkpermission_block}

«IF listType == 0-»
<ul>
«ELSEIF listType == 1-»
<ol>
«ELSEIF listType == 2-»
<dl>
«ELSEIF listType == 3-»
«IF processor.metaType == AdminProcessor-»
<table class="z-admintable">
«ELSE-»
<table class="z-datatable">
«ENDIF-»
    <colgroup>
«FOREACH columns.reject(e|e.isPrimaryKey) AS column -»
        <col id="c«column.name.dbName()»" />
«ENDFOREACH-»
        <col id="coloptions" />
    </colgroup>
    <thead>
    <tr>
«FOREACH columns.reject(e|e.isPrimaryKey) AS column -»
        <th id="h«column.name.dbName()»" scope="col" align="«EXPAND Alignment FOR column-»" valign="middle">
«LET incoming.select(e|dbName(e.source.name + "id") == dbName(column.name)) AS joins-»
«IF joins.size > 0-»
«LET joins.get(0).source.columns.select(e|e.isLeading == true).get(0).name.dbName() AS colName-»
«EXPAND HeaderSortingLink(modName, procName, objName, dbName(joins.get(0).source.name) + '_' + colName, joins.get(0).source.name) FOR column-»
«ENDLET-»
«ELSE-»
«LET dbName(column.name) AS colName-»
«EXPAND HeaderSortingLink(modName, procName, objName, colName, column.name) FOR column-»
«ENDLET-»
«ENDIF-»
«ENDLET-»
            </a>
        </th>
«ENDFOREACH-»
        <th id="hoptions" scope="col" align="left" valign="middle">{gt text='Options'}</th>
    </tr>
    </thead>
    <tbody>
«ENDIF-»

    {foreach from=$objectArray item="«objName»"}
«IF listType < 2-»
    <li><ul>
«ELSEIF listType == 2-»
    <dt>
«ELSEIF listType == 3-»
    <tr class="{cycle values="z-odd, z-even"}">
«ENDIF-»
«""-»
«FOREACH columns.reject(e|e.isPrimaryKey) AS column-»
«IF listType < 2-»
        <li>
«ELSEIF listType == 2-»
        <dd>
«ELSEIF listType == 3-»
        <td headers="h«column.name.dbName()»" align="«EXPAND Alignment FOR column-»" valign="top">
«ENDIF-»
«LET incoming.select(e|dbName(e.source.name + "id") == dbName(column.name)) AS joins-»
«IF column.isLeading == true-»
            {$«objName».«dbName(column.name)»|modcallhooks}
«ELSEIF joins.size > 0-»
            «FOREACH joins AS join SEPARATOR ', '»{$«objName».«join.source.name.dbName()»_«join.source.columns.select(e|e.isLeading == true).get(0).name.dbName()»«REM»|nl2br«ENDREM»|default:""}«ENDFOREACH»
«ELSE-»
            «EXPAND DisplayColumnField(objName) FOR column-»
«ENDIF-»
«ENDLET-»
«IF listType < 2-»
        </li>
«ELSEIF listType == 2-»
        </dd>
«ELSEIF listType == 3-»
        </td>
«ENDIF-»
«ENDFOREACH-»
«""-»
«""-»
«""-»
«IF listType < 2-»
        <li>
«ELSEIF listType == 2-»
        <dd>
«ELSEIF listType == 3-»
        <td headers="hoptions" align="right" valign="top" style="white-space: nowrap">
«ENDIF-»
«IF processor.hasPStates('display')-»
            <a href="{modurl modname="«modName»" type="«procName»" func="display" ot="«objName»" «idField()»=$«objName».«idField()»}">
                {img src="demo.gif" modname="core" set="icons/extrasmall" __alt='Details' __title='Details'}
            </a>
«ENDIF-»            
«IF processor.hasPStates('edit')-»
    {securityutil_checkpermission_block component="«modName»::" instance=".*" level="ACCESS_EDIT"}
            <a href="{modurl modname="«modName»" type="«procName»" func="edit" ot="«objName»" «idField()»=$«objName».«idField()»}">
                {img src="xedit.gif" modname="core" set="icons/extrasmall" __alt='Edit' __title='Edit'}
            </a>
    {/securityutil_checkpermission_block}
«ENDIF-»
«IF processor.hasPStates('delete')-»
    {securityutil_checkpermission_block component="«modName»::" instance=".*" level="ACCESS_DELETE"}
            <a href="{modurl modname="«modName»" type="«procName»" func="delete" ot="«objName»" «idField()»=$«objName».«idField()»}">
                {img src="14_layer_deletelayer.gif" modname="core" set="icons/extrasmall" __alt='Delete' __title='Delete'}
            </a>
    {/securityutil_checkpermission_block}
«ENDIF-»
«IF listType < 2-»
        </li>
«ELSEIF listType == 2-»
        </dd>
«ELSEIF listType == 3-»
        </td>
«ENDIF-»
«""-»
«""-»
«IF listType < 2-»
    </ul></li>
«ELSEIF listType == 2-»
    </dt>
«ELSEIF listType == 3-»
    </tr>
«ENDIF-»
    {foreachelse}
«IF listType < 2-»
        <li>
«ELSEIF listType == 2-»
        <dt>
«ELSEIF listType == 3-»
        <tr class="{cycle values="z-odd, z-even"}">
          <td align="left" valign="top" colspan="«columns.size-1+1»">
«ENDIF-»
            {gt text='No «formattedName(nameMultiple)» found.'}
«IF listType < 2-»
        </li>
«ELSEIF listType == 2-»
        </dt>
«ELSEIF listType == 3-»
          </td>
        </tr>
«ENDIF-»
    {/foreach}

«IF listType == 0-»
</ul>
«ELSEIF listType == 1-»
</ol>
«ELSEIF listType == 2-»
</dl>
«ELSEIF listType == 3-»
    </tbody>
</table>
«ENDIF-»

{pager rowcount=$pager.numitems limit=$pager.itemsperpage}

«IF processor.metaType == UserProcessor-»
{modurl modname="«modName»" func="view" ot="«objName»" startnum=$startnum assign="returnurl"}
{modcallhooks hookobject="category" hookaction="display" module="«modName»«objName»" returnurl=$returnurl}
</div>

«ELSEIF processor.metaType == AdminProcessor-»
</div>
«ELSE-»
</div>
«ENDIF-»

{include file="«modName»_«procName»_footer.tpl"}
«ENDFILE»
«ENDLET-»
«ENDLET-»
«ENDDEFINE»

«DEFINE HeaderSortingLink(String modName, String procName, String objName, String colName, String label) FOR persistence::TableColumn-»
    {if $sort eq "«colName»"}
            <a href="{modurl modname="«modName»" type="«procName»" func="view" ot="«objName»" sort="«colName»" sdir=$sdir}" style="font-style: italic">
    {else}
            <a href="{modurl modname="«modName»" type="«procName»" func="view" ot="«objName»" sort="«colName»" sdir="asc"}">
    {/if}
                {gt text='«formattedNameCapitalized(label)»'}
            </a>
«ENDDEFINE»

«DEFINE Alignment FOR persistence::TableColumn»left«ENDDEFINE»
«DEFINE Alignment FOR persistence::IntegerField»«IF columnTable.incoming.select(e|dbName(e.source.name + "id") == dbName(name)).size > 0-»left«ELSE»right«ENDIF»«ENDDEFINE»
«DEFINE Alignment FOR persistence::DecimalField»right«ENDDEFINE»
«DEFINE Alignment FOR persistence::FloatField»right«ENDDEFINE»
«DEFINE Alignment FOR persistence::BooleanField»center«ENDDEFINE»



«DEFINE DisplayColumnField(String objName) FOR persistence::TableColumn-»
            {$«objName».«dbName(name)»}
«ENDDEFINE»

«DEFINE DisplayColumnField(String objName) FOR persistence::DateField-»
            {$«objName».«dbName(name)»|dateformat:"datebrief"}
«ENDDEFINE»
«DEFINE DisplayColumnField(String objName) FOR persistence::TimestampField-»
            {$«objName».«dbName(name)»|dateformat:"datetimebrief"}
«ENDDEFINE»
«DEFINE DisplayColumnField(String objName) FOR persistence::BooleanField-»
            {$«objName».«dbName(name)»|yesno:true}
«ENDDEFINE»
«DEFINE DisplayColumnField(String objName) FOR persistence::DecimalField-»
            {$«objName».«dbName(name)»|formatnumber}
«ENDDEFINE»
«DEFINE DisplayColumnField(String objName) FOR persistence::FloatField-»
            {$«objName».«dbName(name)»|formatnumber}
«ENDDEFINE»
