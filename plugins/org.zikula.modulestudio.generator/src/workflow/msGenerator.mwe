<?xml version="1.0" encoding="UTF-8"?>
<workflow>
    <!-- create dummy progress monitor if required (for manual builds) -->
  	<component id="dummyProgressMonitorCreator"
  			   class="org.zikula.modulestudio.generator.application.ManualProgressMonitor">
    	<outputSlot value="progressMonitor"/>
  	</component>

    <!-- store the enriched model version -->
    <component class="org.eclipse.emf.mwe.utils.Writer">
        <modelSlot value="${slot}" />
        <uri value="${slotFile}" />
        <cloneSlotContents value="true" />
    </component>

    <!-- clear output directory -->
    <component id="dirCleaner" class="org.eclipse.emf.mwe.utils.DirectoryCleaner" directory="${srcGenPath}" />

    <!-- start generator component -->
    <!-- The middleend component supports all properties of Generator, except collectProfileSummary and verboseProfileFilename -->
    <component id="generator" class="org.eclipse.xtend.middleend.xpand.XpandComponent" skipOnErrors="true">
<!--    <component id="generator" class="org.eclipse.xpand2.Generator" skipOnErrors="true">-->
        <vetoableCallback idRef="profiler"/>
        <!-- enforce file encoding since otherwise an error occurs on unix systems -->
        <!-- fileEncoding value="UTF-8" / -->

        <!-- reference all used meta models -->
        <metaModel idRef="mmEMF" />
        <metaModel idRef="mmModuleStudio" /> 

        <!-- XPand entry for "model" slot containing an instance of Modulestudio.Application -->
        <expand value="templates::${cartridgeName}::Root::Root(progressMonitor) FOR ${slot}" />

        <!-- advice aop templates to the generator -->
        <property name="aspectPath" value="templates::${cartridgeName}::aspects::" />
        <advice value="${aspectPath}Permissions, ${aspectPath}ObjectExtensions" />

        <!-- specify where to put the generated code -->
        <!-- default outlet has no name assigned -->
        <outlet path="${srcGenPath}/${cartridgeName}" append="false" overwrite="true">
            <!-- postprocessor class="org.eclipse.xtend.typesystem.xsd.XMLBeautifier" fileExtensions=".xml, .xsd, .wsdd, .wsdl" /-->
            <!--postprocessor class="org.zikula.modulestudio.generator.output.PhpBeautifier" /-->
        </outlet>
        <!--<outlet name="otherClasses" ... -->
    </component>

</workflow>
