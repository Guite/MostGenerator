
import modulestudio;
extension org::eclipse::xtend::util::stdlib::io;
extension extensions::Utils;

/*
 * Class naming extensions
 */

cached String classPraefix(Application app)
	: app.appName().msconcat('_');

cached String classSuffix()
	: ".php";//".class.php";

cached String asFile(String className)
    : 'lib/'.msconcat(className.replaceAll('_', '/')).msconcat(classSuffix());


cached String implClassDefault(Application app, String filling, String suffix)
    : classPraefix(app).msconcat(filling).msconcat(suffix);
cached String baseClassDefault(Application app, String filling, String suffix)
    : implClassDefault(app, filling.msconcat('Base_'), suffix);


// TODO: cleanup and refactorings

cached String fillingModel() : "Model_";
cached String fillingBusinessEntity() : "BusinessEntity_";
cached String fillingController() : "Controller_";
cached String fillingApi() : "Api_";
cached String fillingFormHandler() : "Form_Handler_";

cached String prepClassPart(String str)
    : applicationName(str).toFirstUpper();
cached String processCollectionSuffix(String str, Boolean isCollection)
    : str.msconcat(((isCollection == true) ? "Collection" : ""));

/** Model classes */
cached String baseClassModelRecord(Entity obj, Boolean isCollection)
    : baseClassDefault(obj.container.application, fillingModel(), prepClassPart(obj.name));
cached String implClassModelRecord(Entity obj, Boolean isCollection)
    : implClassDefault(obj.container.application, fillingModel(), prepClassPart(obj.name));
cached String baseClassModelTable(Entity obj, Boolean isCollection)
    : baseClassDefault(obj.container.application, fillingModel(), prepClassPart(obj.name.msconcat("Table")));
cached String implClassModelTable(Entity obj, Boolean isCollection)
    : implClassDefault(obj.container.application, fillingModel(), prepClassPart(obj.name.msconcat("Table")));

/** Business classes */
cached String baseClassBusinessEntity(Entity obj, Boolean isCollection)
    : baseClassDefault(obj.container.application, fillingBusinessEntity(), prepClassPart(obj.name)).processCollectionSuffix(isCollection);
cached String implClassBusinessEntity(Entity obj, Boolean isCollection)
	: implClassDefault(obj.container.application, fillingBusinessEntity(), prepClassPart(obj.name)).processCollectionSuffix(isCollection);

/** Controller */
cached String baseClassController(Controller obj)
    : baseClassDefault(obj.container.application, fillingController(), prepClassPart(obj.name));
cached String implClassController(Controller obj)
    : implClassDefault(obj.container.application, fillingController(), prepClassPart(obj.name));
cached String baseClassApi(Controller obj)
    : baseClassDefault(obj.container.application, fillingApi(), prepClassPart(obj.name));
cached String implClassApi(Controller obj)
    : implClassDefault(obj.container.application, fillingApi(), prepClassPart(obj.name));
cached String baseClassFormHandler(Controller obj, String entityName, String actionName)
    : baseClassDefault(obj.container.application, fillingFormHandler(), prepClassPart(obj.name).msconcat('_').msconcat(prepClassPart(entityName)).msconcat('_').msconcat(prepClassPart(actionName)));
cached String implClassFormHandler(Controller obj, String entityName, String actionName)
    : implClassDefault(obj.container.application, fillingFormHandler(), prepClassPart(obj.name).msconcat('_').msconcat(prepClassPart(entityName)).msconcat('_').msconcat(prepClassPart(actionName)));


cached String tempClassConfigHandler(Application app)
    : implClassDefault(app, fillingFormHandler(), prepClassPart('Admin').msconcat('_').msconcat(prepClassPart('Config')));

/** Templates */
cached String prepTemplatePart(String origin, String addition)
    : origin.msconcat(addition.toLowerCase());

cached String templateSuffix()
    : ".tpl";

cached String templateFile(Application app, Controller obj, String entityName, String actionName)
    : "templates/".msconcat(app.appName()).msconcat('_').prepTemplatePart(obj.name).msconcat('_').msconcat(applicationName(entityName)).msconcat('_').prepTemplatePart(actionName).msconcat(templateSuffix());

cached String editTemplateFile(Controller obj, String entityName, String actionName)
    : templateFile(obj.container.application, obj, entityName, actionName);
    



